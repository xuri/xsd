// Code generated by xgen. DO NOT EDIT.

use serde::Serialize;
use serde::Deserialize;

use serde_xml_rs::from_reader;


// book is Describes the book layout and packaging.
#[derive(Debug, Deserialize, Serialize, PartialEq)]
pub struct book {
	#[serde(rename = "book")]
	pub book: BookModel,
}


// Chapters is Specifies a collection of chapters.
#[derive(Debug, Deserialize, Serialize, PartialEq)]
pub struct Chapters {
	#[serde(rename = "chapter")]
	pub chapter: Vec<Chapter>,
}


// BookModel is Specifies the date of this book.
#[derive(Debug, Deserialize, Serialize, PartialEq)]
pub struct BookModel {
	#[serde(rename = "id")]
	pub id: Option<String>,
	#[serde(rename = "title")]
	pub title: Option<String>,
	#[serde(rename = "author")]
	pub author: Option<String>,
	#[serde(rename = "date")]
	pub date: Option<String>,
	#[serde(rename = "chapters")]
	pub chapters: Option<Chapters>,
}


// Sections is Specifies a collection of sections.
#[derive(Debug, Deserialize, Serialize, PartialEq)]
pub struct Sections {
	#[serde(rename = "section")]
	pub section: Vec<Section>,
}


// Chapter is Specifies the title of this chapter.
#[derive(Debug, Deserialize, Serialize, PartialEq)]
pub struct Chapter {
	#[serde(rename = "id")]
	pub id: Option<String>,
	#[serde(rename = "title")]
	pub title: Option<String>,
	#[serde(rename = "sections")]
	pub sections: Option<Sections>,
}


// Section is Specifies the file of this section.
#[derive(Debug, Deserialize, Serialize, PartialEq)]
pub struct Section {
	#[serde(rename = "id")]
	pub id: Option<String>,
	#[serde(rename = "title")]
	pub title: Option<String>,
	#[serde(rename = "file")]
	pub file: Option<String>,
}
