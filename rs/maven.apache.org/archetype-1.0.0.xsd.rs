// Code generated by xgen. DO NOT EDIT.

#[macro_use]
extern crate serde_derive;
extern crate serde;
extern crate serde_xml_rs;

use serde_xml_rs::from_reader;


// archetype is Describes the assembly layout and packaging.
#[derive(Debug, Deserialize, Serialize, PartialEq)]
pub struct archetype {
	#[serde(rename = "archetype")]
	pub archetype: ArchetypeModel,
}


// Sources is Files that will go into <code>src/main/java</code>.
#[derive(Debug, Deserialize, Serialize, PartialEq)]
pub struct Sources {
	#[serde(rename = "source")]
	pub source: Vec<Source>,
}


// Resources is Files that will go into <code>src/main/resources</code>.
#[derive(Debug, Deserialize, Serialize, PartialEq)]
pub struct Resources {
	#[serde(rename = "resource")]
	pub resource: Vec<Resource>,
}


// TestSources is Files that will go into <code>src/test/java</code>.
#[derive(Debug, Deserialize, Serialize, PartialEq)]
pub struct TestSources {
	#[serde(rename = "source")]
	pub source: Vec<Source>,
}


// TestResources is Files that will go into <code>src/test/resources</code>.
#[derive(Debug, Deserialize, Serialize, PartialEq)]
pub struct TestResources {
	#[serde(rename = "resource")]
	pub resource: Vec<Resource>,
}


// SiteResources is Files that will go into <code>src/site</code>.
#[derive(Debug, Deserialize, Serialize, PartialEq)]
pub struct SiteResources {
	#[serde(rename = "resource")]
	pub resource: Vec<Resource>,
}


// ArchetypeModel is Setting this option to <code>true</code> makes it possible to run the
//             <code>archetype:create</code> even on existing projects.
#[derive(Debug, Deserialize, Serialize, PartialEq)]
pub struct ArchetypeModel {
	#[serde(rename = "id")]
	pub id: String,
	#[serde(rename = "allowPartial")]
	pub allow_partial: bool,
	#[serde(rename = "sources")]
	pub sources: Sources,
	#[serde(rename = "resources")]
	pub resources: Resources,
	#[serde(rename = "testSources")]
	pub test_sources: TestSources,
	#[serde(rename = "testResources")]
	pub test_resources: TestResources,
	#[serde(rename = "siteResources")]
	pub site_resources: SiteResources,
}


// Source is Describes a source file. Note that source files are always filtered, unlike resources that
//         can be non-filtered.
#[derive(Debug, Deserialize, Serialize, PartialEq)]
pub struct Source {
	#[serde(rename = "encoding")]
	pub encoding: Option<String>,
	#[serde(rename = "$value")]
	pub value: String,
}


// Resource is Describes a resource file.
#[derive(Debug, Deserialize, Serialize, PartialEq)]
pub struct Resource {
	#[serde(rename = "encoding")]
	pub encoding: Option<String>,
	#[serde(rename = "filtered")]
	pub filtered: Option<bool>,
	#[serde(rename = "$value")]
	pub value: String,
}
