// Code generated by xgen. DO NOT EDIT.

use serde::Serialize;
use serde::Deserialize;

use serde_xml_rs::from_reader;


// paramdoc is The root of a parameter plugin expression document.
#[derive(Debug, Deserialize, Serialize, PartialEq)]
pub struct paramdoc {
	#[serde(rename = "paramdoc")]
	pub paramdoc: ExpressionDocumentation,
}


// Expressions is The list of plugin parameter expressions described by this
//             document.
#[derive(Debug, Deserialize, Serialize, PartialEq)]
pub struct Expressions {
	#[serde(rename = "expression")]
	pub expression: Vec<Expression>,
}


// ExpressionDocumentation is The root of a parameter plugin expression document.
#[derive(Debug, Deserialize, Serialize, PartialEq)]
pub struct ExpressionDocumentation {
	#[serde(rename = "expressions")]
	pub expressions: Expressions,
}


// CliOptions is The command-line switches used to change the value of this expression.
#[derive(Debug, Deserialize, Serialize, PartialEq)]
pub struct CliOptions {
}


// ApiMethods is The programmatic methods used to change the value of this expression.
#[derive(Debug, Deserialize, Serialize, PartialEq)]
pub struct ApiMethods {
}


// Expression is The place and syntax used to change the value of this expression.
#[derive(Debug, Deserialize, Serialize, PartialEq)]
pub struct Expression {
	#[serde(rename = "syntax")]
	pub syntax: String,
	#[serde(rename = "description")]
	pub description: String,
	#[serde(rename = "configuration")]
	pub configuration: String,
	#[serde(rename = "cliOptions")]
	pub cli_options: CliOptions,
	#[serde(rename = "apiMethods")]
	pub api_methods: ApiMethods,
	#[serde(rename = "deprecation")]
	pub deprecation: String,
	#[serde(rename = "ban")]
	pub ban: String,
	#[serde(rename = "editable")]
	pub editable: bool,
}
