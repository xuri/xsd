// Code generated by xgen. DO NOT EDIT.

use serde::Serialize;
use serde::Deserialize;

use serde_xml_rs::from_reader;


// TDocumentation ...
#[derive(Debug, Deserialize, Serialize, PartialEq)]
pub struct TDocumentation {
}


// TDocumented is This type is extended by  component types to allow them to be documented
#[derive(Debug, Deserialize, Serialize, PartialEq)]
pub struct TDocumented {
	#[serde(rename = "documentation")]
	pub documentation: TDocumentation,
}


// TExtensibleAttributesDocumented is This type is extended by component types to allow attributes from other namespaces to be added.
#[derive(Debug, Deserialize, Serialize, PartialEq)]
pub struct TExtensibleAttributesDocumented {
	#[serde(flatten)]
	pub t_documented: TDocumented,
}


// TExtensibleDocumented is This type is extended by component types to allow elements from other namespaces to be added.
#[derive(Debug, Deserialize, Serialize, PartialEq)]
pub struct TExtensibleDocumented {
	#[serde(flatten)]
	pub t_documented: TDocumented,
}


// definitions ...
#[derive(Debug, Deserialize, Serialize, PartialEq)]
pub struct definitions {
	#[serde(rename = "definitions")]
	pub definitions: TDefinitions,
}


// AnyTopLevelOptionalElement ...
#[derive(Debug, Deserialize, Serialize, PartialEq)]
pub struct AnyTopLevelOptionalElement {
	#[serde(rename = "import")]
	pub import: TImport,
	#[serde(rename = "types")]
	pub types: TTypes,
	#[serde(rename = "message")]
	pub message: TMessage,
	#[serde(rename = "portType")]
	pub port_type: TPortType,
	#[serde(rename = "binding")]
	pub binding: TBinding,
	#[serde(rename = "service")]
	pub service: TService,
}


// TDefinitions ...
#[derive(Debug, Deserialize, Serialize, PartialEq)]
pub struct TDefinitions {
	#[serde(rename = "targetNamespace")]
	pub target_namespace: Option<String>,
	#[serde(rename = "name")]
	pub name: Option<String>,
	#[serde(rename = "wsdl:anyTopLevelOptionalElement")]
	pub wsdl_any_top_level_optional_element: Vec<AnyTopLevelOptionalElement>,
	#[serde(flatten)]
	pub t_extensible_documented: TExtensibleDocumented,
}


// TImport ...
#[derive(Debug, Deserialize, Serialize, PartialEq)]
pub struct TImport {
	#[serde(rename = "namespace")]
	pub namespace: String,
	#[serde(rename = "location")]
	pub location: String,
	#[serde(flatten)]
	pub t_extensible_attributes_documented: TExtensibleAttributesDocumented,
}


// TTypes ...
#[derive(Debug, Deserialize, Serialize, PartialEq)]
pub struct TTypes {
	#[serde(flatten)]
	pub t_extensible_documented: TExtensibleDocumented,
}


// TMessage ...
#[derive(Debug, Deserialize, Serialize, PartialEq)]
pub struct TMessage {
	#[serde(rename = "name")]
	pub name: String,
	#[serde(rename = "part")]
	pub part: Vec<TPart>,
	#[serde(flatten)]
	pub t_extensible_documented: TExtensibleDocumented,
}


// TPart ...
#[derive(Debug, Deserialize, Serialize, PartialEq)]
pub struct TPart {
	#[serde(rename = "name")]
	pub name: String,
	#[serde(rename = "element")]
	pub element: Option<String>,
	#[serde(rename = "type")]
	pub type_attr: Option<String>,
	#[serde(flatten)]
	pub t_extensible_attributes_documented: TExtensibleAttributesDocumented,
}


// TPortType ...
#[derive(Debug, Deserialize, Serialize, PartialEq)]
pub struct TPortType {
	#[serde(rename = "name")]
	pub name: String,
	#[serde(rename = "operation")]
	pub operation: Vec<TOperation>,
	#[serde(flatten)]
	pub t_extensible_attributes_documented: TExtensibleAttributesDocumented,
}


// TOperation ...
#[derive(Debug, Deserialize, Serialize, PartialEq)]
pub struct TOperation {
	#[serde(rename = "name")]
	pub name: String,
	#[serde(rename = "parameterOrder")]
	pub parameter_order: Option<Vec<String>>,
	#[serde(rename = "wsdl:request-response-or-one-way-operation")]
	pub wsdl_requestresponseoronewayoperation: Requestresponseoronewayoperation,
	#[serde(rename = "wsdl:solicit-response-or-notification-operation")]
	pub wsdl_solicitresponseornotificationoperation: Solicitresponseornotificationoperation,
	#[serde(flatten)]
	pub t_extensible_documented: TExtensibleDocumented,
}


// Requestresponseoronewayoperation ...
#[derive(Debug, Deserialize, Serialize, PartialEq)]
pub struct Requestresponseoronewayoperation {
	#[serde(rename = "input")]
	pub input: TParam,
	#[serde(rename = "output")]
	pub output: TParam,
	#[serde(rename = "fault")]
	pub fault: TFault,
}


// Solicitresponseornotificationoperation ...
#[derive(Debug, Deserialize, Serialize, PartialEq)]
pub struct Solicitresponseornotificationoperation {
	#[serde(rename = "output")]
	pub output: TParam,
	#[serde(rename = "input")]
	pub input: TParam,
	#[serde(rename = "fault")]
	pub fault: TFault,
}


// TParam ...
#[derive(Debug, Deserialize, Serialize, PartialEq)]
pub struct TParam {
	#[serde(rename = "name")]
	pub name: Option<String>,
	#[serde(rename = "message")]
	pub message: String,
	#[serde(flatten)]
	pub t_extensible_attributes_documented: TExtensibleAttributesDocumented,
}


// TFault ...
#[derive(Debug, Deserialize, Serialize, PartialEq)]
pub struct TFault {
	#[serde(rename = "name")]
	pub name: String,
	#[serde(rename = "message")]
	pub message: String,
	#[serde(flatten)]
	pub t_extensible_attributes_documented: TExtensibleAttributesDocumented,
}


// TBinding ...
#[derive(Debug, Deserialize, Serialize, PartialEq)]
pub struct TBinding {
	#[serde(rename = "name")]
	pub name: String,
	#[serde(rename = "type")]
	pub type_attr: String,
	#[serde(rename = "operation")]
	pub operation: Vec<TBindingOperation>,
	#[serde(flatten)]
	pub t_extensible_documented: TExtensibleDocumented,
}


// TBindingOperationMessage ...
#[derive(Debug, Deserialize, Serialize, PartialEq)]
pub struct TBindingOperationMessage {
	#[serde(rename = "name")]
	pub name: Option<String>,
	#[serde(flatten)]
	pub t_extensible_documented: TExtensibleDocumented,
}


// TBindingOperationFault ...
#[derive(Debug, Deserialize, Serialize, PartialEq)]
pub struct TBindingOperationFault {
	#[serde(rename = "name")]
	pub name: String,
	#[serde(flatten)]
	pub t_extensible_documented: TExtensibleDocumented,
}


// TBindingOperation ...
#[derive(Debug, Deserialize, Serialize, PartialEq)]
pub struct TBindingOperation {
	#[serde(rename = "name")]
	pub name: String,
	#[serde(rename = "input")]
	pub input: TBindingOperationMessage,
	#[serde(rename = "output")]
	pub output: TBindingOperationMessage,
	#[serde(rename = "fault")]
	pub fault: Vec<TBindingOperationFault>,
	#[serde(flatten)]
	pub t_extensible_documented: TExtensibleDocumented,
}


// TService ...
#[derive(Debug, Deserialize, Serialize, PartialEq)]
pub struct TService {
	#[serde(rename = "name")]
	pub name: String,
	#[serde(rename = "port")]
	pub port: Vec<TPort>,
	#[serde(flatten)]
	pub t_extensible_documented: TExtensibleDocumented,
}


// TPort ...
#[derive(Debug, Deserialize, Serialize, PartialEq)]
pub struct TPort {
	#[serde(rename = "name")]
	pub name: String,
	#[serde(rename = "binding")]
	pub binding: String,
	#[serde(flatten)]
	pub t_extensible_documented: TExtensibleDocumented,
}


// array_type ...
#[derive(Debug, Deserialize, Serialize, PartialEq)]
pub struct array_type {
	#[serde(rename = "arrayType")]
	pub array_type: String,
}


// required ...
#[derive(Debug, Deserialize, Serialize, PartialEq)]
pub struct required {
	#[serde(rename = "required")]
	pub required: bool,
}


// TExtensibilityElement ...
#[derive(Debug, Deserialize, Serialize, PartialEq)]
pub struct TExtensibilityElement {
	#[serde(rename = "wsdl:required")]
	pub wsdl_required: Option<bool>,
}
