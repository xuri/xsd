// Code generated by xgen. DO NOT EDIT.

use serde::Serialize;
use serde::Deserialize;

use serde_xml_rs::from_reader;


// Library ...
#[derive(Debug, Deserialize, Serialize, PartialEq)]
pub struct Library {
	#[serde(rename = "book")]
	pub book: BookType,
}


// Person ...
#[derive(Debug, Deserialize, Serialize, PartialEq)]
pub struct Person {
	#[serde(rename = "id")]
	pub id: String,
	#[serde(rename = "name")]
	pub name: String,
	#[serde(rename = "born")]
	pub born: u8,
	#[serde(rename = "dead")]
	pub dead: Option<u8>,
	#[serde(rename = "qualification")]
	pub qualification: Option<String>,
}


// Authors ...
#[derive(Debug, Deserialize, Serialize, PartialEq)]
pub struct Authors {
	#[serde(rename = "lib:person")]
	pub lib_person: Vec<Person>,
}


// Characters ...
#[derive(Debug, Deserialize, Serialize, PartialEq)]
pub struct Characters {
	#[serde(rename = "lib:person")]
	pub lib_person: Vec<Person>,
}


// BookType ...
#[derive(Debug, Deserialize, Serialize, PartialEq)]
pub struct BookType {
	#[serde(rename = "id")]
	pub id: String,
	#[serde(rename = "available")]
	pub available: String,
	#[serde(rename = "isbn")]
	pub isbn: String,
	#[serde(rename = "title")]
	pub title: String,
	#[serde(rename = "authors")]
	pub authors: Authors,
	#[serde(rename = "characters")]
	pub characters: Characters,
}
