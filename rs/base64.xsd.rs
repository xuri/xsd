// Code generated by xgen. DO NOT EDIT.

use serde::Serialize;
use serde::Deserialize;

use serde_xml_rs::from_reader;


// MyType1 ...
#[derive(Debug, Deserialize, Serialize, PartialEq)]
pub struct MyType1 {
	#[serde(rename = "myType1")]
	pub my_type1: String,
}


// MyType2 ...
#[derive(Debug, Deserialize, Serialize, PartialEq)]
pub struct MyType2 {
	#[serde(rename = "length")]
	pub length: Option<i32>,
	#[serde(rename = "$value")]
	pub value: String,
}


// MyType3 ...
#[derive(Debug, Deserialize, Serialize, PartialEq)]
pub struct MyType3 {
	#[serde(rename = "length")]
	pub length: Option<i32>,
	#[serde(rename = "$value")]
	pub value: u8,
}


// MyType4 ...
#[derive(Debug, Deserialize, Serialize, PartialEq)]
pub struct MyType4 {
	#[serde(rename = "title")]
	pub title: String,
	#[serde(rename = "blob")]
	pub blob: String,
	#[serde(rename = "timestamp")]
	pub timestamp: u8,
}


// MyType5 ...
#[derive(Debug, Deserialize, Serialize, PartialEq)]
pub struct MyType5 {
	#[serde(rename = "myType5")]
	pub my_type5: String,
}
