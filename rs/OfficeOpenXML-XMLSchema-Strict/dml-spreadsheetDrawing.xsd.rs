// Code generated by xgen. DO NOT EDIT.

use serde::Serialize;
use serde::Deserialize;

use serde_xml_rs::from_reader;


// from ...
#[derive(Debug, Deserialize, Serialize, PartialEq)]
pub struct from {
	#[serde(rename = "from")]
	pub from: CTMarker,
}


// to ...
#[derive(Debug, Deserialize, Serialize, PartialEq)]
pub struct to {
	#[serde(rename = "to")]
	pub to: CTMarker,
}


// CTAnchorClientData ...
#[derive(Debug, Deserialize, Serialize, PartialEq)]
pub struct CTAnchorClientData {
	#[serde(rename = "fLocksWithSheet")]
	pub f_locks_with_sheet: Option<bool>,
	#[serde(rename = "fPrintsWithSheet")]
	pub f_prints_with_sheet: Option<bool>,
}


// CTShapeNonVisual ...
#[derive(Debug, Deserialize, Serialize, PartialEq)]
pub struct CTShapeNonVisual {
	#[serde(rename = "cNvPr")]
	pub c_nv_pr: CTNonVisualDrawingProps,
	#[serde(rename = "cNvSpPr")]
	pub c_nv_sp_pr: CTNonVisualDrawingShapeProps,
}


// CTShape ...
#[derive(Debug, Deserialize, Serialize, PartialEq)]
pub struct CTShape {
	#[serde(rename = "macro")]
	pub macro_attr: Option<String>,
	#[serde(rename = "textlink")]
	pub textlink: Option<String>,
	#[serde(rename = "fLocksText")]
	pub f_locks_text: Option<bool>,
	#[serde(rename = "fPublished")]
	pub f_published: Option<bool>,
	#[serde(rename = "nvSpPr")]
	pub nv_sp_pr: CTShapeNonVisual,
	#[serde(rename = "spPr")]
	pub sp_pr: CTShapeProperties,
	#[serde(rename = "style")]
	pub style: CTShapeStyle,
	#[serde(rename = "txBody")]
	pub tx_body: CTTextBody,
}


// CTConnectorNonVisual ...
#[derive(Debug, Deserialize, Serialize, PartialEq)]
pub struct CTConnectorNonVisual {
	#[serde(rename = "cNvPr")]
	pub c_nv_pr: CTNonVisualDrawingProps,
	#[serde(rename = "cNvCxnSpPr")]
	pub c_nv_cxn_sp_pr: CTNonVisualConnectorProperties,
}


// CTConnector ...
#[derive(Debug, Deserialize, Serialize, PartialEq)]
pub struct CTConnector {
	#[serde(rename = "macro")]
	pub macro_attr: Option<String>,
	#[serde(rename = "fPublished")]
	pub f_published: Option<bool>,
	#[serde(rename = "nvCxnSpPr")]
	pub nv_cxn_sp_pr: CTConnectorNonVisual,
	#[serde(rename = "spPr")]
	pub sp_pr: CTShapeProperties,
	#[serde(rename = "style")]
	pub style: CTShapeStyle,
}


// CTPictureNonVisual ...
#[derive(Debug, Deserialize, Serialize, PartialEq)]
pub struct CTPictureNonVisual {
	#[serde(rename = "cNvPr")]
	pub c_nv_pr: CTNonVisualDrawingProps,
	#[serde(rename = "cNvPicPr")]
	pub c_nv_pic_pr: CTNonVisualPictureProperties,
}


// CTPicture ...
#[derive(Debug, Deserialize, Serialize, PartialEq)]
pub struct CTPicture {
	#[serde(rename = "macro")]
	pub macro_attr: Option<String>,
	#[serde(rename = "fPublished")]
	pub f_published: Option<bool>,
	#[serde(rename = "nvPicPr")]
	pub nv_pic_pr: CTPictureNonVisual,
	#[serde(rename = "blipFill")]
	pub blip_fill: CTBlipFillProperties,
	#[serde(rename = "spPr")]
	pub sp_pr: CTShapeProperties,
	#[serde(rename = "style")]
	pub style: CTShapeStyle,
}


// CTGraphicalObjectFrameNonVisual ...
#[derive(Debug, Deserialize, Serialize, PartialEq)]
pub struct CTGraphicalObjectFrameNonVisual {
	#[serde(rename = "cNvPr")]
	pub c_nv_pr: CTNonVisualDrawingProps,
	#[serde(rename = "cNvGraphicFramePr")]
	pub c_nv_graphic_frame_pr: CTNonVisualGraphicFrameProperties,
}


// CTGraphicalObjectFrame ...
#[derive(Debug, Deserialize, Serialize, PartialEq)]
pub struct CTGraphicalObjectFrame {
	#[serde(rename = "macro")]
	pub macro_attr: Option<String>,
	#[serde(rename = "fPublished")]
	pub f_published: Option<bool>,
	#[serde(rename = "nvGraphicFramePr")]
	pub nv_graphic_frame_pr: CTGraphicalObjectFrameNonVisual,
	#[serde(rename = "xfrm")]
	pub xfrm: CTTransform2D,
	#[serde(rename = "a:graphic")]
	pub a_graphic: CTGraphicalObject,
}


// CTGroupShapeNonVisual ...
#[derive(Debug, Deserialize, Serialize, PartialEq)]
pub struct CTGroupShapeNonVisual {
	#[serde(rename = "cNvPr")]
	pub c_nv_pr: CTNonVisualDrawingProps,
	#[serde(rename = "cNvGrpSpPr")]
	pub c_nv_grp_sp_pr: CTNonVisualGroupDrawingShapeProps,
}


// CTGroupShape ...
#[derive(Debug, Deserialize, Serialize, PartialEq)]
pub struct CTGroupShape {
	#[serde(rename = "nvGrpSpPr")]
	pub nv_grp_sp_pr: CTGroupShapeNonVisual,
	#[serde(rename = "grpSpPr")]
	pub grp_sp_pr: CTGroupShapeProperties,
	#[serde(rename = "sp")]
	pub sp: Vec<CTShape>,
	#[serde(rename = "grpSp")]
	pub grp_sp: Vec<CTGroupShape>,
	#[serde(rename = "graphicFrame")]
	pub graphic_frame: Vec<CTGraphicalObjectFrame>,
	#[serde(rename = "cxnSp")]
	pub cxn_sp: Vec<CTConnector>,
	#[serde(rename = "pic")]
	pub pic: Vec<CTPicture>,
}


// EGObjectChoices ...
#[derive(Debug, Deserialize, Serialize, PartialEq)]
pub struct EGObjectChoices {
	#[serde(rename = "sp")]
	pub sp: CTShape,
	#[serde(rename = "grpSp")]
	pub grp_sp: CTGroupShape,
	#[serde(rename = "graphicFrame")]
	pub graphic_frame: CTGraphicalObjectFrame,
	#[serde(rename = "cxnSp")]
	pub cxn_sp: CTConnector,
	#[serde(rename = "pic")]
	pub pic: CTPicture,
	#[serde(rename = "contentPart")]
	pub content_part: CTRel,
}


// CTRel ...
#[derive(Debug, Deserialize, Serialize, PartialEq)]
pub struct CTRel {
	#[serde(rename = "r:id")]
	pub r_id: String,
}


// STColID ...
#[derive(Debug, Deserialize, Serialize, PartialEq)]
pub struct STColID {
	#[serde(rename = "ST_ColID")]
	pub st_col_id: i32,
}


// STRowID ...
#[derive(Debug, Deserialize, Serialize, PartialEq)]
pub struct STRowID {
	#[serde(rename = "ST_RowID")]
	pub st_row_id: i32,
}


// CTMarker ...
#[derive(Debug, Deserialize, Serialize, PartialEq)]
pub struct CTMarker {
	#[serde(rename = "col")]
	pub col: i32,
	#[serde(rename = "colOff")]
	pub col_off: STCoordinate,
	#[serde(rename = "row")]
	pub row: i32,
	#[serde(rename = "rowOff")]
	pub row_off: STCoordinate,
}


// STEditAs ...
#[derive(Debug, Deserialize, Serialize, PartialEq)]
pub struct STEditAs {
	#[serde(rename = "ST_EditAs")]
	pub st_edit_as: String,
}


// CTTwoCellAnchor ...
#[derive(Debug, Deserialize, Serialize, PartialEq)]
pub struct CTTwoCellAnchor {
	#[serde(rename = "editAs")]
	pub edit_as: Option<String>,
	#[serde(rename = "EG_ObjectChoices")]
	pub eg_object_choices: EGObjectChoices,
	#[serde(rename = "from")]
	pub from: CTMarker,
	#[serde(rename = "to")]
	pub to: CTMarker,
	#[serde(rename = "clientData")]
	pub client_data: CTAnchorClientData,
}


// CTOneCellAnchor ...
#[derive(Debug, Deserialize, Serialize, PartialEq)]
pub struct CTOneCellAnchor {
	#[serde(rename = "EG_ObjectChoices")]
	pub eg_object_choices: EGObjectChoices,
	#[serde(rename = "from")]
	pub from: CTMarker,
	#[serde(rename = "ext")]
	pub ext: CTPositiveSize2D,
	#[serde(rename = "clientData")]
	pub client_data: CTAnchorClientData,
}


// CTAbsoluteAnchor ...
#[derive(Debug, Deserialize, Serialize, PartialEq)]
pub struct CTAbsoluteAnchor {
	#[serde(rename = "EG_ObjectChoices")]
	pub eg_object_choices: EGObjectChoices,
	#[serde(rename = "pos")]
	pub pos: CTPoint2D,
	#[serde(rename = "ext")]
	pub ext: CTPositiveSize2D,
	#[serde(rename = "clientData")]
	pub client_data: CTAnchorClientData,
}


// EGAnchor ...
#[derive(Debug, Deserialize, Serialize, PartialEq)]
pub struct EGAnchor {
	#[serde(rename = "twoCellAnchor")]
	pub two_cell_anchor: CTTwoCellAnchor,
	#[serde(rename = "oneCellAnchor")]
	pub one_cell_anchor: CTOneCellAnchor,
	#[serde(rename = "absoluteAnchor")]
	pub absolute_anchor: CTAbsoluteAnchor,
}


// CTDrawing ...
#[derive(Debug, Deserialize, Serialize, PartialEq)]
pub struct CTDrawing {
	#[serde(rename = "EG_Anchor")]
	pub eg_anchor: Vec<EGAnchor>,
}


// ws_dr ...
#[derive(Debug, Deserialize, Serialize, PartialEq)]
pub struct ws_dr {
	#[serde(rename = "wsDr")]
	pub ws_dr: CTDrawing,
}
