// Code generated by xgen. DO NOT EDIT.

use serde::Serialize;
use serde::Deserialize;

use serde_xml_rs::from_reader;


// properties ...
#[derive(Debug, Deserialize, Serialize, PartialEq)]
pub struct properties {
	#[serde(rename = "Properties")]
	pub properties: CTProperties,
}


// CTProperties ...
#[derive(Debug, Deserialize, Serialize, PartialEq)]
pub struct CTProperties {
	#[serde(rename = "Template")]
	pub template: String,
	#[serde(rename = "Manager")]
	pub manager: String,
	#[serde(rename = "Company")]
	pub company: String,
	#[serde(rename = "Pages")]
	pub pages: i32,
	#[serde(rename = "Words")]
	pub words: i32,
	#[serde(rename = "Characters")]
	pub characters: i32,
	#[serde(rename = "PresentationFormat")]
	pub presentation_format: String,
	#[serde(rename = "Lines")]
	pub lines: i32,
	#[serde(rename = "Paragraphs")]
	pub paragraphs: i32,
	#[serde(rename = "Slides")]
	pub slides: i32,
	#[serde(rename = "Notes")]
	pub notes: i32,
	#[serde(rename = "TotalTime")]
	pub total_time: i32,
	#[serde(rename = "HiddenSlides")]
	pub hidden_slides: i32,
	#[serde(rename = "MMClips")]
	pub mm_clips: i32,
	#[serde(rename = "ScaleCrop")]
	pub scale_crop: bool,
	#[serde(rename = "HeadingPairs")]
	pub heading_pairs: CTVectorVariant,
	#[serde(rename = "TitlesOfParts")]
	pub titles_of_parts: CTVectorLpstr,
	#[serde(rename = "LinksUpToDate")]
	pub links_up_to_date: bool,
	#[serde(rename = "CharactersWithSpaces")]
	pub characters_with_spaces: i32,
	#[serde(rename = "SharedDoc")]
	pub shared_doc: bool,
	#[serde(rename = "HyperlinkBase")]
	pub hyperlink_base: String,
	#[serde(rename = "HLinks")]
	pub h_links: CTVectorVariant,
	#[serde(rename = "HyperlinksChanged")]
	pub hyperlinks_changed: bool,
	#[serde(rename = "DigSig")]
	pub dig_sig: CTDigSigBlob,
	#[serde(rename = "Application")]
	pub application: String,
	#[serde(rename = "AppVersion")]
	pub app_version: String,
	#[serde(rename = "DocSecurity")]
	pub doc_security: i32,
}


// CTVectorVariant ...
#[derive(Debug, Deserialize, Serialize, PartialEq)]
pub struct CTVectorVariant {
	#[serde(rename = "vt:vector")]
	pub vt_vector: CTVector,
}


// CTVectorLpstr ...
#[derive(Debug, Deserialize, Serialize, PartialEq)]
pub struct CTVectorLpstr {
	#[serde(rename = "vt:vector")]
	pub vt_vector: CTVector,
}


// CTDigSigBlob ...
#[derive(Debug, Deserialize, Serialize, PartialEq)]
pub struct CTDigSigBlob {
	#[serde(rename = "vt:blob")]
	pub vt_blob: String,
}
