// Code generated by xgen. DO NOT EDIT.

package schema;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.XmlValue;

// ST_Integer255 ...
@XmlAccessorType(XmlAccessType.FIELD)
@XmlAttribute(required = true, name = "ST_Integer255")
public class ST_Integer255 {
	protected Integer ST_Integer255;
}

// CT_Integer255 ...
public class CT_Integer255 {
	@XmlAttribute(name = "val", required = true)
	protected Integer ValAttr;
}

// ST_Integer2 ...
@XmlAccessorType(XmlAccessType.FIELD)
@XmlAttribute(required = true, name = "ST_Integer2")
public class ST_Integer2 {
	protected Integer ST_Integer2;
}

// CT_Integer2 ...
public class CT_Integer2 {
	@XmlAttribute(name = "val", required = true)
	protected Integer ValAttr;
}

// ST_SpacingRule ...
@XmlAccessorType(XmlAccessType.FIELD)
@XmlAttribute(required = true, name = "ST_SpacingRule")
public class ST_SpacingRule {
	protected Integer ST_SpacingRule;
}

// CT_SpacingRule ...
public class CT_SpacingRule {
	@XmlAttribute(name = "val", required = true)
	protected Integer ValAttr;
}

// ST_UnSignedInteger ...
@XmlAccessorType(XmlAccessType.FIELD)
@XmlAttribute(required = true, name = "ST_UnSignedInteger")
public class ST_UnSignedInteger {
	protected Integer ST_UnSignedInteger;
}

// CT_UnSignedInteger ...
public class CT_UnSignedInteger {
	@XmlAttribute(name = "val", required = true)
	protected Integer ValAttr;
}

// ST_Char ...
@XmlAccessorType(XmlAccessType.FIELD)
@XmlAttribute(required = true, name = "ST_Char")
public class ST_Char {
	protected String ST_Char;
}

// CT_Char ...
public class CT_Char {
	@XmlAttribute(name = "val", required = true)
	protected String ValAttr;
}

// CT_OnOff ...
public class CT_OnOff {
	@XmlAttribute(name = "val")
	protected ST_OnOff ValAttr;
}

// CT_String ...
public class CT_String {
	@XmlAttribute(name = "val")
	protected String ValAttr;
}

// CT_XAlign ...
public class CT_XAlign {
	@XmlAttribute(name = "val", required = true)
	protected String ValAttr;
}

// CT_YAlign ...
public class CT_YAlign {
	@XmlAttribute(name = "val", required = true)
	protected String ValAttr;
}

// ST_Shp ...
@XmlAccessorType(XmlAccessType.FIELD)
@XmlAttribute(required = true, name = "ST_Shp")
public class ST_Shp {
	protected String ST_Shp;
}

// CT_Shp ...
public class CT_Shp {
	@XmlAttribute(name = "val", required = true)
	protected String ValAttr;
}

// ST_FType ...
@XmlAccessorType(XmlAccessType.FIELD)
@XmlAttribute(required = true, name = "ST_FType")
public class ST_FType {
	protected String ST_FType;
}

// CT_FType ...
public class CT_FType {
	@XmlAttribute(name = "val", required = true)
	protected String ValAttr;
}

// ST_LimLoc ...
@XmlAccessorType(XmlAccessType.FIELD)
@XmlAttribute(required = true, name = "ST_LimLoc")
public class ST_LimLoc {
	protected String ST_LimLoc;
}

// CT_LimLoc ...
public class CT_LimLoc {
	@XmlAttribute(name = "val", required = true)
	protected String ValAttr;
}

// ST_TopBot ...
@XmlAccessorType(XmlAccessType.FIELD)
@XmlAttribute(required = true, name = "ST_TopBot")
public class ST_TopBot {
	protected String ST_TopBot;
}

// CT_TopBot ...
public class CT_TopBot {
	@XmlAttribute(name = "val", required = true)
	protected String ValAttr;
}

// ST_Script ...
@XmlAccessorType(XmlAccessType.FIELD)
@XmlAttribute(required = true, name = "ST_Script")
public class ST_Script {
	protected String ST_Script;
}

// CT_Script ...
public class CT_Script {
	@XmlAttribute(name = "val")
	protected String ValAttr;
}

// ST_Style ...
@XmlAccessorType(XmlAccessType.FIELD)
@XmlAttribute(required = true, name = "ST_Style")
public class ST_Style {
	protected String ST_Style;
}

// CT_Style ...
public class CT_Style {
	@XmlAttribute(name = "val")
	protected String ValAttr;
}

// CT_ManualBreak ...
public class CT_ManualBreak {
	@XmlAttribute(name = "alnAt")
	protected Integer AlnAtAttr;
}

// EG_ScriptStyle ...
public class EG_ScriptStyle {
	@XmlElement(required = true, name = "scr")
	protected CT_Script Scr;
	@XmlElement(required = true, name = "sty")
	protected CT_Style Sty;
}

// CT_RPR ...
public class CT_RPR {
	protected EG_ScriptStyle EG_ScriptStyle;
	@XmlElement(name = "lit")
	protected CT_OnOff Lit;
	@XmlElement(name = "nor")
	protected CT_OnOff Nor;
	@XmlElement(name = "brk")
	protected CT_ManualBreak Brk;
	@XmlElement(name = "aln")
	protected CT_OnOff Aln;
}

// CT_Text ...
public class CT_Text {
	@XmlAttribute(name = "xml:space")
	protected Space XmlSpaceAttr;
	@XmlValue
	protected String value;
}

// CT_R ...
public class CT_R {
	protected EG_RPr WEG_RPr;
	protected List<EG_RunInnerContent> WEG_RunInnerContent;
	@XmlElement(name = "rPr")
	protected CT_RPR RPr;
	@XmlElement(name = "t")
	protected List<CT_Text> T;
}

// CT_CtrlPr ...
public class CT_CtrlPr {
	protected EG_RPrMath WEG_RPrMath;
}

// CT_AccPr ...
public class CT_AccPr {
	@XmlElement(name = "chr")
	protected CT_Char Chr;
	@XmlElement(name = "ctrlPr")
	protected CT_CtrlPr CtrlPr;
}

// CT_Acc ...
public class CT_Acc {
	@XmlElement(name = "accPr")
	protected CT_AccPr AccPr;
	@XmlElement(required = true, name = "e")
	protected CT_OMathArg E;
}

// CT_BarPr ...
public class CT_BarPr {
	@XmlElement(name = "pos")
	protected CT_TopBot Pos;
	@XmlElement(name = "ctrlPr")
	protected CT_CtrlPr CtrlPr;
}

// CT_Bar ...
public class CT_Bar {
	@XmlElement(name = "barPr")
	protected CT_BarPr BarPr;
	@XmlElement(required = true, name = "e")
	protected CT_OMathArg E;
}

// CT_BoxPr ...
public class CT_BoxPr {
	@XmlElement(name = "opEmu")
	protected CT_OnOff OpEmu;
	@XmlElement(name = "noBreak")
	protected CT_OnOff NoBreak;
	@XmlElement(name = "diff")
	protected CT_OnOff Diff;
	@XmlElement(name = "brk")
	protected CT_ManualBreak Brk;
	@XmlElement(name = "aln")
	protected CT_OnOff Aln;
	@XmlElement(name = "ctrlPr")
	protected CT_CtrlPr CtrlPr;
}

// CT_Box ...
public class CT_Box {
	@XmlElement(name = "boxPr")
	protected CT_BoxPr BoxPr;
	@XmlElement(required = true, name = "e")
	protected CT_OMathArg E;
}

// CT_BorderBoxPr ...
public class CT_BorderBoxPr {
	@XmlElement(name = "hideTop")
	protected CT_OnOff HideTop;
	@XmlElement(name = "hideBot")
	protected CT_OnOff HideBot;
	@XmlElement(name = "hideLeft")
	protected CT_OnOff HideLeft;
	@XmlElement(name = "hideRight")
	protected CT_OnOff HideRight;
	@XmlElement(name = "strikeH")
	protected CT_OnOff StrikeH;
	@XmlElement(name = "strikeV")
	protected CT_OnOff StrikeV;
	@XmlElement(name = "strikeBLTR")
	protected CT_OnOff StrikeBLTR;
	@XmlElement(name = "strikeTLBR")
	protected CT_OnOff StrikeTLBR;
	@XmlElement(name = "ctrlPr")
	protected CT_CtrlPr CtrlPr;
}

// CT_BorderBox ...
public class CT_BorderBox {
	@XmlElement(name = "borderBoxPr")
	protected CT_BorderBoxPr BorderBoxPr;
	@XmlElement(required = true, name = "e")
	protected CT_OMathArg E;
}

// CT_DPr ...
public class CT_DPr {
	@XmlElement(name = "begChr")
	protected CT_Char BegChr;
	@XmlElement(name = "sepChr")
	protected CT_Char SepChr;
	@XmlElement(name = "endChr")
	protected CT_Char EndChr;
	@XmlElement(name = "grow")
	protected CT_OnOff Grow;
	@XmlElement(name = "shp")
	protected CT_Shp Shp;
	@XmlElement(name = "ctrlPr")
	protected CT_CtrlPr CtrlPr;
}

// CT_D ...
public class CT_D {
	@XmlElement(name = "dPr")
	protected CT_DPr DPr;
	@XmlElement(required = true, name = "e")
	protected List<CT_OMathArg> E;
}

// CT_EqArrPr ...
public class CT_EqArrPr {
	@XmlElement(name = "baseJc")
	protected CT_YAlign BaseJc;
	@XmlElement(name = "maxDist")
	protected CT_OnOff MaxDist;
	@XmlElement(name = "objDist")
	protected CT_OnOff ObjDist;
	@XmlElement(name = "rSpRule")
	protected CT_SpacingRule RSpRule;
	@XmlElement(name = "rSp")
	protected CT_UnSignedInteger RSp;
	@XmlElement(name = "ctrlPr")
	protected CT_CtrlPr CtrlPr;
}

// CT_EqArr ...
public class CT_EqArr {
	@XmlElement(name = "eqArrPr")
	protected CT_EqArrPr EqArrPr;
	@XmlElement(required = true, name = "e")
	protected List<CT_OMathArg> E;
}

// CT_FPr ...
public class CT_FPr {
	@XmlElement(name = "type")
	protected CT_FType Type;
	@XmlElement(name = "ctrlPr")
	protected CT_CtrlPr CtrlPr;
}

// CT_F ...
public class CT_F {
	@XmlElement(name = "fPr")
	protected CT_FPr FPr;
	@XmlElement(required = true, name = "num")
	protected CT_OMathArg Num;
	@XmlElement(required = true, name = "den")
	protected CT_OMathArg Den;
}

// CT_FuncPr ...
public class CT_FuncPr {
	@XmlElement(name = "ctrlPr")
	protected CT_CtrlPr CtrlPr;
}

// CT_Func ...
public class CT_Func {
	@XmlElement(name = "funcPr")
	protected CT_FuncPr FuncPr;
	@XmlElement(required = true, name = "fName")
	protected CT_OMathArg FName;
	@XmlElement(required = true, name = "e")
	protected CT_OMathArg E;
}

// CT_GroupChrPr ...
public class CT_GroupChrPr {
	@XmlElement(name = "chr")
	protected CT_Char Chr;
	@XmlElement(name = "pos")
	protected CT_TopBot Pos;
	@XmlElement(name = "vertJc")
	protected CT_TopBot VertJc;
	@XmlElement(name = "ctrlPr")
	protected CT_CtrlPr CtrlPr;
}

// CT_GroupChr ...
public class CT_GroupChr {
	@XmlElement(name = "groupChrPr")
	protected CT_GroupChrPr GroupChrPr;
	@XmlElement(required = true, name = "e")
	protected CT_OMathArg E;
}

// CT_LimLowPr ...
public class CT_LimLowPr {
	@XmlElement(name = "ctrlPr")
	protected CT_CtrlPr CtrlPr;
}

// CT_LimLow ...
public class CT_LimLow {
	@XmlElement(name = "limLowPr")
	protected CT_LimLowPr LimLowPr;
	@XmlElement(required = true, name = "e")
	protected CT_OMathArg E;
	@XmlElement(required = true, name = "lim")
	protected CT_OMathArg Lim;
}

// CT_LimUppPr ...
public class CT_LimUppPr {
	@XmlElement(name = "ctrlPr")
	protected CT_CtrlPr CtrlPr;
}

// CT_LimUpp ...
public class CT_LimUpp {
	@XmlElement(name = "limUppPr")
	protected CT_LimUppPr LimUppPr;
	@XmlElement(required = true, name = "e")
	protected CT_OMathArg E;
	@XmlElement(required = true, name = "lim")
	protected CT_OMathArg Lim;
}

// CT_MCPr ...
public class CT_MCPr {
	@XmlElement(name = "count")
	protected CT_Integer255 Count;
	@XmlElement(name = "mcJc")
	protected CT_XAlign McJc;
}

// CT_MC ...
public class CT_MC {
	@XmlElement(name = "mcPr")
	protected CT_MCPr McPr;
}

// CT_MCS ...
public class CT_MCS {
	@XmlElement(required = true, name = "mc")
	protected List<CT_MC> Mc;
}

// CT_MPr ...
public class CT_MPr {
	@XmlElement(name = "baseJc")
	protected CT_YAlign BaseJc;
	@XmlElement(name = "plcHide")
	protected CT_OnOff PlcHide;
	@XmlElement(name = "rSpRule")
	protected CT_SpacingRule RSpRule;
	@XmlElement(name = "cGpRule")
	protected CT_SpacingRule CGpRule;
	@XmlElement(name = "rSp")
	protected CT_UnSignedInteger RSp;
	@XmlElement(name = "cSp")
	protected CT_UnSignedInteger CSp;
	@XmlElement(name = "cGp")
	protected CT_UnSignedInteger CGp;
	@XmlElement(name = "mcs")
	protected CT_MCS Mcs;
	@XmlElement(name = "ctrlPr")
	protected CT_CtrlPr CtrlPr;
}

// CT_MR ...
public class CT_MR {
	@XmlElement(required = true, name = "e")
	protected List<CT_OMathArg> E;
}

// CT_M ...
public class CT_M {
	@XmlElement(name = "mPr")
	protected CT_MPr MPr;
	@XmlElement(required = true, name = "mr")
	protected List<CT_MR> Mr;
}

// CT_NaryPr ...
public class CT_NaryPr {
	@XmlElement(name = "chr")
	protected CT_Char Chr;
	@XmlElement(name = "limLoc")
	protected CT_LimLoc LimLoc;
	@XmlElement(name = "grow")
	protected CT_OnOff Grow;
	@XmlElement(name = "subHide")
	protected CT_OnOff SubHide;
	@XmlElement(name = "supHide")
	protected CT_OnOff SupHide;
	@XmlElement(name = "ctrlPr")
	protected CT_CtrlPr CtrlPr;
}

// CT_Nary ...
public class CT_Nary {
	@XmlElement(name = "naryPr")
	protected CT_NaryPr NaryPr;
	@XmlElement(required = true, name = "sub")
	protected CT_OMathArg Sub;
	@XmlElement(required = true, name = "sup")
	protected CT_OMathArg Sup;
	@XmlElement(required = true, name = "e")
	protected CT_OMathArg E;
}

// CT_PhantPr ...
public class CT_PhantPr {
	@XmlElement(name = "show")
	protected CT_OnOff Show;
	@XmlElement(name = "zeroWid")
	protected CT_OnOff ZeroWid;
	@XmlElement(name = "zeroAsc")
	protected CT_OnOff ZeroAsc;
	@XmlElement(name = "zeroDesc")
	protected CT_OnOff ZeroDesc;
	@XmlElement(name = "transp")
	protected CT_OnOff Transp;
	@XmlElement(name = "ctrlPr")
	protected CT_CtrlPr CtrlPr;
}

// CT_Phant ...
public class CT_Phant {
	@XmlElement(name = "phantPr")
	protected CT_PhantPr PhantPr;
	@XmlElement(required = true, name = "e")
	protected CT_OMathArg E;
}

// CT_RadPr ...
public class CT_RadPr {
	@XmlElement(name = "degHide")
	protected CT_OnOff DegHide;
	@XmlElement(name = "ctrlPr")
	protected CT_CtrlPr CtrlPr;
}

// CT_Rad ...
public class CT_Rad {
	@XmlElement(name = "radPr")
	protected CT_RadPr RadPr;
	@XmlElement(required = true, name = "deg")
	protected CT_OMathArg Deg;
	@XmlElement(required = true, name = "e")
	protected CT_OMathArg E;
}

// CT_SPrePr ...
public class CT_SPrePr {
	@XmlElement(name = "ctrlPr")
	protected CT_CtrlPr CtrlPr;
}

// CT_SPre ...
public class CT_SPre {
	@XmlElement(name = "sPrePr")
	protected CT_SPrePr SPrePr;
	@XmlElement(required = true, name = "sub")
	protected CT_OMathArg Sub;
	@XmlElement(required = true, name = "sup")
	protected CT_OMathArg Sup;
	@XmlElement(required = true, name = "e")
	protected CT_OMathArg E;
}

// CT_SSubPr ...
public class CT_SSubPr {
	@XmlElement(name = "ctrlPr")
	protected CT_CtrlPr CtrlPr;
}

// CT_SSub ...
public class CT_SSub {
	@XmlElement(name = "sSubPr")
	protected CT_SSubPr SSubPr;
	@XmlElement(required = true, name = "e")
	protected CT_OMathArg E;
	@XmlElement(required = true, name = "sub")
	protected CT_OMathArg Sub;
}

// CT_SSubSupPr ...
public class CT_SSubSupPr {
	@XmlElement(name = "alnScr")
	protected CT_OnOff AlnScr;
	@XmlElement(name = "ctrlPr")
	protected CT_CtrlPr CtrlPr;
}

// CT_SSubSup ...
public class CT_SSubSup {
	@XmlElement(name = "sSubSupPr")
	protected CT_SSubSupPr SSubSupPr;
	@XmlElement(required = true, name = "e")
	protected CT_OMathArg E;
	@XmlElement(required = true, name = "sub")
	protected CT_OMathArg Sub;
	@XmlElement(required = true, name = "sup")
	protected CT_OMathArg Sup;
}

// CT_SSupPr ...
public class CT_SSupPr {
	@XmlElement(name = "ctrlPr")
	protected CT_CtrlPr CtrlPr;
}

// CT_SSup ...
public class CT_SSup {
	@XmlElement(name = "sSupPr")
	protected CT_SSupPr SSupPr;
	@XmlElement(required = true, name = "e")
	protected CT_OMathArg E;
	@XmlElement(required = true, name = "sup")
	protected CT_OMathArg Sup;
}

// EG_OMathMathElements ...
public class EG_OMathMathElements {
	@XmlElement(required = true, name = "acc")
	protected CT_Acc Acc;
	@XmlElement(required = true, name = "bar")
	protected CT_Bar Bar;
	@XmlElement(required = true, name = "box")
	protected CT_Box Box;
	@XmlElement(required = true, name = "borderBox")
	protected CT_BorderBox BorderBox;
	@XmlElement(required = true, name = "d")
	protected CT_D D;
	@XmlElement(required = true, name = "eqArr")
	protected CT_EqArr EqArr;
	@XmlElement(required = true, name = "f")
	protected CT_F F;
	@XmlElement(required = true, name = "func")
	protected CT_Func Func;
	@XmlElement(required = true, name = "groupChr")
	protected CT_GroupChr GroupChr;
	@XmlElement(required = true, name = "limLow")
	protected CT_LimLow LimLow;
	@XmlElement(required = true, name = "limUpp")
	protected CT_LimUpp LimUpp;
	@XmlElement(required = true, name = "m")
	protected CT_M M;
	@XmlElement(required = true, name = "nary")
	protected CT_Nary Nary;
	@XmlElement(required = true, name = "phant")
	protected CT_Phant Phant;
	@XmlElement(required = true, name = "rad")
	protected CT_Rad Rad;
	@XmlElement(required = true, name = "sPre")
	protected CT_SPre SPre;
	@XmlElement(required = true, name = "sSub")
	protected CT_SSub SSub;
	@XmlElement(required = true, name = "sSubSup")
	protected CT_SSubSup SSubSup;
	@XmlElement(required = true, name = "sSup")
	protected CT_SSup SSup;
	@XmlElement(required = true, name = "r")
	protected CT_R R;
}

// EG_OMathElements ...
public class EG_OMathElements {
	protected EG_OMathMathElements EG_OMathMathElements;
	protected EG_PContentMath WEG_PContentMath;
}

// CT_OMathArgPr ...
public class CT_OMathArgPr {
	@XmlElement(name = "argSz")
	protected CT_Integer2 ArgSz;
}

// CT_OMathArg ...
public class CT_OMathArg {
	protected List<EG_OMathElements> EG_OMathElements;
	@XmlElement(name = "argPr")
	protected CT_OMathArgPr ArgPr;
	@XmlElement(name = "ctrlPr")
	protected CT_CtrlPr CtrlPr;
}

// ST_Jc ...
@XmlAccessorType(XmlAccessType.FIELD)
@XmlAttribute(required = true, name = "ST_Jc")
public class ST_Jc {
	protected String ST_Jc;
}

// CT_OMathJc ...
public class CT_OMathJc {
	@XmlAttribute(name = "val")
	protected String ValAttr;
}

// CT_OMathParaPr ...
public class CT_OMathParaPr {
	@XmlElement(name = "jc")
	protected CT_OMathJc Jc;
}

// CT_TwipsMeasure ...
public class CT_TwipsMeasure {
	@XmlAttribute(name = "val", required = true)
	protected ST_TwipsMeasure ValAttr;
}

// ST_BreakBin ...
@XmlAccessorType(XmlAccessType.FIELD)
@XmlAttribute(required = true, name = "ST_BreakBin")
public class ST_BreakBin {
	protected String ST_BreakBin;
}

// CT_BreakBin ...
public class CT_BreakBin {
	@XmlAttribute(name = "val")
	protected String ValAttr;
}

// ST_BreakBinSub ...
@XmlAccessorType(XmlAccessType.FIELD)
@XmlAttribute(required = true, name = "ST_BreakBinSub")
public class ST_BreakBinSub {
	protected String ST_BreakBinSub;
}

// CT_BreakBinSub ...
public class CT_BreakBinSub {
	@XmlAttribute(name = "val")
	protected String ValAttr;
}

// CT_MathPr ...
public class CT_MathPr {
	@XmlElement(name = "mathFont")
	protected CT_String MathFont;
	@XmlElement(name = "brkBin")
	protected CT_BreakBin BrkBin;
	@XmlElement(name = "brkBinSub")
	protected CT_BreakBinSub BrkBinSub;
	@XmlElement(name = "smallFrac")
	protected CT_OnOff SmallFrac;
	@XmlElement(name = "dispDef")
	protected CT_OnOff DispDef;
	@XmlElement(name = "lMargin")
	protected CT_TwipsMeasure LMargin;
	@XmlElement(name = "rMargin")
	protected CT_TwipsMeasure RMargin;
	@XmlElement(name = "defJc")
	protected CT_OMathJc DefJc;
	@XmlElement(name = "preSp")
	protected CT_TwipsMeasure PreSp;
	@XmlElement(name = "postSp")
	protected CT_TwipsMeasure PostSp;
	@XmlElement(name = "interSp")
	protected CT_TwipsMeasure InterSp;
	@XmlElement(name = "intraSp")
	protected CT_TwipsMeasure IntraSp;
	@XmlElement(required = true, name = "wrapIndent")
	protected CT_TwipsMeasure WrapIndent;
	@XmlElement(required = true, name = "wrapRight")
	protected CT_OnOff WrapRight;
	@XmlElement(name = "intLim")
	protected CT_LimLoc IntLim;
	@XmlElement(name = "naryLim")
	protected CT_LimLoc NaryLim;
}

@XmlAccessorType(XmlAccessType.FIELD)
@XmlElement(required = true, name = "mathPr")
public class MathPr {
	protected CT_MathPr MathPr;
}

// CT_OMathPara ...
public class CT_OMathPara {
	@XmlElement(name = "oMathParaPr")
	protected CT_OMathParaPr OMathParaPr;
	@XmlElement(required = true, name = "oMath")
	protected List<CT_OMath> OMath;
}

// CT_OMath ...
public class CT_OMath {
	protected List<EG_OMathElements> EG_OMathElements;
}

@XmlAccessorType(XmlAccessType.FIELD)
@XmlElement(required = true, name = "oMathPara")
public class OMathPara {
	protected CT_OMathPara OMathPara;
}

@XmlAccessorType(XmlAccessType.FIELD)
@XmlElement(required = true, name = "oMath")
public class OMath {
	protected CT_OMath OMath;
}
