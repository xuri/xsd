// Code generated by xgen. DO NOT EDIT.

package schema;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.XmlValue;

// ST_TransitionSideDirectionType ...
@XmlAccessorType(XmlAccessType.FIELD)
@XmlAttribute(required = true, name = "ST_TransitionSideDirectionType")
public class ST_TransitionSideDirectionType {
	protected String ST_TransitionSideDirectionType;
}

// ST_TransitionCornerDirectionType ...
@XmlAccessorType(XmlAccessType.FIELD)
@XmlAttribute(required = true, name = "ST_TransitionCornerDirectionType")
public class ST_TransitionCornerDirectionType {
	protected String ST_TransitionCornerDirectionType;
}

// ST_TransitionInOutDirectionType ...
@XmlAccessorType(XmlAccessType.FIELD)
@XmlAttribute(required = true, name = "ST_TransitionInOutDirectionType")
public class ST_TransitionInOutDirectionType {
	protected String ST_TransitionInOutDirectionType;
}

// CT_SideDirectionTransition ...
public class CT_SideDirectionTransition {
	@XmlAttribute(name = "dir")
	protected String DirAttr;
}

// CT_CornerDirectionTransition ...
public class CT_CornerDirectionTransition {
	@XmlAttribute(name = "dir")
	protected String DirAttr;
}

// ST_TransitionEightDirectionType ...
public class ST_TransitionEightDirectionType {
	@XmlElement(required = true)
	protected String ST_TransitionSideDirectionType;
	@XmlElement(required = true)
	protected String ST_TransitionCornerDirectionType;
}

// CT_EightDirectionTransition ...
public class CT_EightDirectionTransition {
	@XmlAttribute(name = "dir")
	protected ST_TransitionEightDirectionType DirAttr;
}

// CT_OrientationTransition ...
public class CT_OrientationTransition {
	@XmlAttribute(name = "dir")
	protected String DirAttr;
}

// CT_InOutTransition ...
public class CT_InOutTransition {
	@XmlAttribute(name = "dir")
	protected String DirAttr;
}

// CT_OptionalBlackTransition ...
public class CT_OptionalBlackTransition {
	@XmlAttribute(name = "thruBlk")
	protected Boolean ThruBlkAttr;
}

// CT_SplitTransition ...
public class CT_SplitTransition {
	@XmlAttribute(name = "orient")
	protected String OrientAttr;
	@XmlAttribute(name = "dir")
	protected String DirAttr;
}

// CT_WheelTransition ...
public class CT_WheelTransition {
	@XmlAttribute(name = "spokes")
	protected Integer SpokesAttr;
}

// CT_TransitionStartSoundAction ...
public class CT_TransitionStartSoundAction {
	@XmlAttribute(name = "loop")
	protected Boolean LoopAttr;
	@XmlElement(required = true, name = "snd")
	protected CT_EmbeddedWAVAudioFile Snd;
}

// CT_TransitionSoundAction ...
public class CT_TransitionSoundAction {
	@XmlElement(required = true, name = "stSnd")
	protected CT_TransitionStartSoundAction StSnd;
	@XmlElement(required = true, name = "endSnd")
	protected CT_Empty EndSnd;
}

// ST_TransitionSpeed ...
@XmlAccessorType(XmlAccessType.FIELD)
@XmlAttribute(required = true, name = "ST_TransitionSpeed")
public class ST_TransitionSpeed {
	protected String ST_TransitionSpeed;
}

// CT_SlideTransition ...
public class CT_SlideTransition {
	@XmlAttribute(name = "spd")
	protected String SpdAttr;
	@XmlAttribute(name = "advClick")
	protected Boolean AdvClickAttr;
	@XmlAttribute(name = "advTm")
	protected Integer AdvTmAttr;
	@XmlElement(required = true, name = "blinds")
	protected CT_OrientationTransition Blinds;
	@XmlElement(required = true, name = "checker")
	protected CT_OrientationTransition Checker;
	@XmlElement(required = true, name = "circle")
	protected CT_Empty Circle;
	@XmlElement(required = true, name = "dissolve")
	protected CT_Empty Dissolve;
	@XmlElement(required = true, name = "comb")
	protected CT_OrientationTransition Comb;
	@XmlElement(required = true, name = "cover")
	protected CT_EightDirectionTransition Cover;
	@XmlElement(required = true, name = "cut")
	protected CT_OptionalBlackTransition Cut;
	@XmlElement(required = true, name = "diamond")
	protected CT_Empty Diamond;
	@XmlElement(required = true, name = "fade")
	protected CT_OptionalBlackTransition Fade;
	@XmlElement(required = true, name = "newsflash")
	protected CT_Empty Newsflash;
	@XmlElement(required = true, name = "plus")
	protected CT_Empty Plus;
	@XmlElement(required = true, name = "pull")
	protected CT_EightDirectionTransition Pull;
	@XmlElement(required = true, name = "push")
	protected CT_SideDirectionTransition Push;
	@XmlElement(required = true, name = "random")
	protected CT_Empty Random;
	@XmlElement(required = true, name = "randomBar")
	protected CT_OrientationTransition RandomBar;
	@XmlElement(required = true, name = "split")
	protected CT_SplitTransition Split;
	@XmlElement(required = true, name = "strips")
	protected CT_CornerDirectionTransition Strips;
	@XmlElement(required = true, name = "wedge")
	protected CT_Empty Wedge;
	@XmlElement(required = true, name = "wheel")
	protected CT_WheelTransition Wheel;
	@XmlElement(required = true, name = "wipe")
	protected CT_SideDirectionTransition Wipe;
	@XmlElement(required = true, name = "zoom")
	protected CT_InOutTransition Zoom;
	@XmlElement(name = "sndAc")
	protected CT_TransitionSoundAction SndAc;
	@XmlElement(name = "extLst")
	protected CT_ExtensionListModify ExtLst;
}

// ST_TLTimeIndefinite ...
@XmlAccessorType(XmlAccessType.FIELD)
@XmlAttribute(required = true, name = "ST_TLTimeIndefinite")
public class ST_TLTimeIndefinite {
	protected String ST_TLTimeIndefinite;
}

// ST_TLTime ...
public class ST_TLTime {
	@XmlElement(required = true)
	protected Integer UnsignedInt;
	@XmlElement(required = true)
	protected String ST_TLTimeIndefinite;
}

// ST_TLTimeNodeID ...
@XmlAccessorType(XmlAccessType.FIELD)
@XmlAttribute(required = true, name = "ST_TLTimeNodeID")
public class ST_TLTimeNodeID {
	protected Integer ST_TLTimeNodeID;
}

// CT_TLIterateIntervalTime ...
public class CT_TLIterateIntervalTime {
	@XmlAttribute(required = true, name = "val")
	protected ST_TLTime ValAttr;
}

// CT_TLIterateIntervalPercentage ...
public class CT_TLIterateIntervalPercentage {
	@XmlAttribute(required = true, name = "val")
	protected ST_PositivePercentage ValAttr;
}

// ST_IterateType ...
@XmlAccessorType(XmlAccessType.FIELD)
@XmlAttribute(required = true, name = "ST_IterateType")
public class ST_IterateType {
	protected String ST_IterateType;
}

// CT_TLIterateData ...
public class CT_TLIterateData {
	@XmlAttribute(name = "type")
	protected String TypeAttr;
	@XmlAttribute(name = "backwards")
	protected Boolean BackwardsAttr;
	@XmlElement(required = true, name = "tmAbs")
	protected CT_TLIterateIntervalTime TmAbs;
	@XmlElement(required = true, name = "tmPct")
	protected CT_TLIterateIntervalPercentage TmPct;
}

// CT_TLSubShapeId ...
public class CT_TLSubShapeId {
	@XmlAttribute(required = true, name = "spid")
	protected String SpidAttr;
}

// CT_TLTextTargetElement ...
public class CT_TLTextTargetElement {
	@XmlElement(required = true, name = "charRg")
	protected CT_IndexRange CharRg;
	@XmlElement(required = true, name = "pRg")
	protected CT_IndexRange PRg;
}

// ST_TLChartSubelementType ...
@XmlAccessorType(XmlAccessType.FIELD)
@XmlAttribute(required = true, name = "ST_TLChartSubelementType")
public class ST_TLChartSubelementType {
	protected String ST_TLChartSubelementType;
}

// CT_TLOleChartTargetElement ...
public class CT_TLOleChartTargetElement {
	@XmlAttribute(required = true, name = "type")
	protected String TypeAttr;
	@XmlAttribute(name = "lvl")
	protected Integer LvlAttr;
}

// CT_TLShapeTargetElement ...
public class CT_TLShapeTargetElement {
	@XmlAttribute(required = true, name = "spid")
	protected Integer SpidAttr;
	@XmlElement(required = true, name = "bg")
	protected CT_Empty Bg;
	@XmlElement(required = true, name = "subSp")
	protected CT_TLSubShapeId SubSp;
	@XmlElement(required = true, name = "oleChartEl")
	protected CT_TLOleChartTargetElement OleChartEl;
	@XmlElement(required = true, name = "txEl")
	protected CT_TLTextTargetElement TxEl;
	@XmlElement(required = true, name = "graphicEl")
	protected CT_AnimationElementChoice GraphicEl;
}

// CT_TLTimeTargetElement ...
public class CT_TLTimeTargetElement {
	@XmlElement(required = true, name = "sldTgt")
	protected CT_Empty SldTgt;
	@XmlElement(required = true, name = "sndTgt")
	protected CT_EmbeddedWAVAudioFile SndTgt;
	@XmlElement(required = true, name = "spTgt")
	protected CT_TLShapeTargetElement SpTgt;
	@XmlElement(required = true, name = "inkTgt")
	protected CT_TLSubShapeId InkTgt;
}

// CT_TLTriggerTimeNodeID ...
public class CT_TLTriggerTimeNodeID {
	@XmlAttribute(required = true, name = "val")
	protected Integer ValAttr;
}

// ST_TLTriggerRuntimeNode ...
@XmlAccessorType(XmlAccessType.FIELD)
@XmlAttribute(required = true, name = "ST_TLTriggerRuntimeNode")
public class ST_TLTriggerRuntimeNode {
	protected String ST_TLTriggerRuntimeNode;
}

// CT_TLTriggerRuntimeNode ...
public class CT_TLTriggerRuntimeNode {
	@XmlAttribute(required = true, name = "val")
	protected String ValAttr;
}

// ST_TLTriggerEvent ...
@XmlAccessorType(XmlAccessType.FIELD)
@XmlAttribute(required = true, name = "ST_TLTriggerEvent")
public class ST_TLTriggerEvent {
	protected String ST_TLTriggerEvent;
}

// CT_TLTimeCondition ...
public class CT_TLTimeCondition {
	@XmlAttribute(name = "evt")
	protected String EvtAttr;
	@XmlAttribute(name = "delay")
	protected ST_TLTime DelayAttr;
	@XmlElement(required = true, name = "tgtEl")
	protected CT_TLTimeTargetElement TgtEl;
	@XmlElement(required = true, name = "tn")
	protected CT_TLTriggerTimeNodeID Tn;
	@XmlElement(required = true, name = "rtn")
	protected CT_TLTriggerRuntimeNode Rtn;
}

// CT_TLTimeConditionList ...
public class CT_TLTimeConditionList {
	@XmlElement(required = true, name = "cond")
	protected List<CT_TLTimeCondition> Cond;
}

// CT_TimeNodeList ...
public class CT_TimeNodeList {
	@XmlElement(required = true, name = "par")
	protected List<CT_TLTimeNodeParallel> Par;
	@XmlElement(required = true, name = "seq")
	protected List<CT_TLTimeNodeSequence> Seq;
	@XmlElement(required = true, name = "excl")
	protected List<CT_TLTimeNodeExclusive> Excl;
	@XmlElement(required = true, name = "anim")
	protected List<CT_TLAnimateBehavior> Anim;
	@XmlElement(required = true, name = "animClr")
	protected List<CT_TLAnimateColorBehavior> AnimClr;
	@XmlElement(required = true, name = "animEffect")
	protected List<CT_TLAnimateEffectBehavior> AnimEffect;
	@XmlElement(required = true, name = "animMotion")
	protected List<CT_TLAnimateMotionBehavior> AnimMotion;
	@XmlElement(required = true, name = "animRot")
	protected List<CT_TLAnimateRotationBehavior> AnimRot;
	@XmlElement(required = true, name = "animScale")
	protected List<CT_TLAnimateScaleBehavior> AnimScale;
	@XmlElement(required = true, name = "cmd")
	protected List<CT_TLCommandBehavior> Cmd;
	@XmlElement(required = true, name = "set")
	protected List<CT_TLSetBehavior> Set;
	@XmlElement(required = true, name = "audio")
	protected List<CT_TLMediaNodeAudio> Audio;
	@XmlElement(required = true, name = "video")
	protected List<CT_TLMediaNodeVideo> Video;
}

// ST_TLTimeNodePresetClassType ...
@XmlAccessorType(XmlAccessType.FIELD)
@XmlAttribute(required = true, name = "ST_TLTimeNodePresetClassType")
public class ST_TLTimeNodePresetClassType {
	protected String ST_TLTimeNodePresetClassType;
}

// ST_TLTimeNodeRestartType ...
@XmlAccessorType(XmlAccessType.FIELD)
@XmlAttribute(required = true, name = "ST_TLTimeNodeRestartType")
public class ST_TLTimeNodeRestartType {
	protected String ST_TLTimeNodeRestartType;
}

// ST_TLTimeNodeFillType ...
@XmlAccessorType(XmlAccessType.FIELD)
@XmlAttribute(required = true, name = "ST_TLTimeNodeFillType")
public class ST_TLTimeNodeFillType {
	protected String ST_TLTimeNodeFillType;
}

// ST_TLTimeNodeSyncType ...
@XmlAccessorType(XmlAccessType.FIELD)
@XmlAttribute(required = true, name = "ST_TLTimeNodeSyncType")
public class ST_TLTimeNodeSyncType {
	protected String ST_TLTimeNodeSyncType;
}

// ST_TLTimeNodeMasterRelation ...
@XmlAccessorType(XmlAccessType.FIELD)
@XmlAttribute(required = true, name = "ST_TLTimeNodeMasterRelation")
public class ST_TLTimeNodeMasterRelation {
	protected String ST_TLTimeNodeMasterRelation;
}

// ST_TLTimeNodeType ...
@XmlAccessorType(XmlAccessType.FIELD)
@XmlAttribute(required = true, name = "ST_TLTimeNodeType")
public class ST_TLTimeNodeType {
	protected String ST_TLTimeNodeType;
}

// CT_TLCommonTimeNodeData ...
public class CT_TLCommonTimeNodeData {
	@XmlAttribute(name = "id")
	protected Integer IdAttr;
	@XmlAttribute(name = "presetID")
	protected Integer PresetIDAttr;
	@XmlAttribute(name = "presetClass")
	protected String PresetClassAttr;
	@XmlAttribute(name = "presetSubtype")
	protected Integer PresetSubtypeAttr;
	@XmlAttribute(name = "dur")
	protected ST_TLTime DurAttr;
	@XmlAttribute(name = "repeatCount")
	protected ST_TLTime RepeatCountAttr;
	@XmlAttribute(name = "repeatDur")
	protected ST_TLTime RepeatDurAttr;
	@XmlAttribute(name = "spd")
	protected ST_Percentage SpdAttr;
	@XmlAttribute(name = "accel")
	protected ST_PositiveFixedPercentage AccelAttr;
	@XmlAttribute(name = "decel")
	protected ST_PositiveFixedPercentage DecelAttr;
	@XmlAttribute(name = "autoRev")
	protected Boolean AutoRevAttr;
	@XmlAttribute(name = "restart")
	protected String RestartAttr;
	@XmlAttribute(name = "fill")
	protected String FillAttr;
	@XmlAttribute(name = "syncBehavior")
	protected String SyncBehaviorAttr;
	@XmlAttribute(name = "tmFilter")
	protected String TmFilterAttr;
	@XmlAttribute(name = "evtFilter")
	protected String EvtFilterAttr;
	@XmlAttribute(name = "display")
	protected Boolean DisplayAttr;
	@XmlAttribute(name = "masterRel")
	protected String MasterRelAttr;
	@XmlAttribute(name = "bldLvl")
	protected Integer BldLvlAttr;
	@XmlAttribute(name = "grpId")
	protected Integer GrpIdAttr;
	@XmlAttribute(name = "afterEffect")
	protected Boolean AfterEffectAttr;
	@XmlAttribute(name = "nodeType")
	protected String NodeTypeAttr;
	@XmlAttribute(name = "nodePh")
	protected Boolean NodePhAttr;
	@XmlElement(name = "stCondLst")
	protected CT_TLTimeConditionList StCondLst;
	@XmlElement(name = "endCondLst")
	protected CT_TLTimeConditionList EndCondLst;
	@XmlElement(name = "endSync")
	protected CT_TLTimeCondition EndSync;
	@XmlElement(name = "iterate")
	protected CT_TLIterateData Iterate;
	@XmlElement(name = "childTnLst")
	protected CT_TimeNodeList ChildTnLst;
	@XmlElement(name = "subTnLst")
	protected CT_TimeNodeList SubTnLst;
}

// CT_TLTimeNodeParallel ...
public class CT_TLTimeNodeParallel {
	@XmlElement(required = true, name = "cTn")
	protected CT_TLCommonTimeNodeData CTn;
}

// ST_TLNextActionType ...
@XmlAccessorType(XmlAccessType.FIELD)
@XmlAttribute(required = true, name = "ST_TLNextActionType")
public class ST_TLNextActionType {
	protected String ST_TLNextActionType;
}

// ST_TLPreviousActionType ...
@XmlAccessorType(XmlAccessType.FIELD)
@XmlAttribute(required = true, name = "ST_TLPreviousActionType")
public class ST_TLPreviousActionType {
	protected String ST_TLPreviousActionType;
}

// CT_TLTimeNodeSequence ...
public class CT_TLTimeNodeSequence {
	@XmlAttribute(name = "concurrent")
	protected Boolean ConcurrentAttr;
	@XmlAttribute(name = "prevAc")
	protected String PrevAcAttr;
	@XmlAttribute(name = "nextAc")
	protected String NextAcAttr;
	@XmlElement(required = true, name = "cTn")
	protected CT_TLCommonTimeNodeData CTn;
	@XmlElement(name = "prevCondLst")
	protected CT_TLTimeConditionList PrevCondLst;
	@XmlElement(name = "nextCondLst")
	protected CT_TLTimeConditionList NextCondLst;
}

// CT_TLTimeNodeExclusive ...
public class CT_TLTimeNodeExclusive {
	@XmlElement(required = true, name = "cTn")
	protected CT_TLCommonTimeNodeData CTn;
}

// CT_TLBehaviorAttributeNameList ...
public class CT_TLBehaviorAttributeNameList {
	@XmlElement(required = true, name = "attrName")
	protected List<String> AttrName;
}

// ST_TLBehaviorAdditiveType ...
@XmlAccessorType(XmlAccessType.FIELD)
@XmlAttribute(required = true, name = "ST_TLBehaviorAdditiveType")
public class ST_TLBehaviorAdditiveType {
	protected String ST_TLBehaviorAdditiveType;
}

// ST_TLBehaviorAccumulateType ...
@XmlAccessorType(XmlAccessType.FIELD)
@XmlAttribute(required = true, name = "ST_TLBehaviorAccumulateType")
public class ST_TLBehaviorAccumulateType {
	protected String ST_TLBehaviorAccumulateType;
}

// ST_TLBehaviorTransformType ...
@XmlAccessorType(XmlAccessType.FIELD)
@XmlAttribute(required = true, name = "ST_TLBehaviorTransformType")
public class ST_TLBehaviorTransformType {
	protected String ST_TLBehaviorTransformType;
}

// ST_TLBehaviorOverrideType ...
@XmlAccessorType(XmlAccessType.FIELD)
@XmlAttribute(required = true, name = "ST_TLBehaviorOverrideType")
public class ST_TLBehaviorOverrideType {
	protected String ST_TLBehaviorOverrideType;
}

// CT_TLCommonBehaviorData ...
public class CT_TLCommonBehaviorData {
	@XmlAttribute(name = "additive")
	protected String AdditiveAttr;
	@XmlAttribute(name = "accumulate")
	protected String AccumulateAttr;
	@XmlAttribute(name = "xfrmType")
	protected String XfrmTypeAttr;
	@XmlAttribute(name = "from")
	protected String FromAttr;
	@XmlAttribute(name = "to")
	protected String ToAttr;
	@XmlAttribute(name = "by")
	protected String ByAttr;
	@XmlAttribute(name = "rctx")
	protected String RctxAttr;
	@XmlAttribute(name = "override")
	protected String OverrideAttr;
	@XmlElement(required = true, name = "cTn")
	protected CT_TLCommonTimeNodeData CTn;
	@XmlElement(required = true, name = "tgtEl")
	protected CT_TLTimeTargetElement TgtEl;
	@XmlElement(name = "attrNameLst")
	protected CT_TLBehaviorAttributeNameList AttrNameLst;
}

// CT_TLAnimVariantBooleanVal ...
public class CT_TLAnimVariantBooleanVal {
	@XmlAttribute(required = true, name = "val")
	protected Boolean ValAttr;
}

// CT_TLAnimVariantIntegerVal ...
public class CT_TLAnimVariantIntegerVal {
	@XmlAttribute(required = true, name = "val")
	protected Integer ValAttr;
}

// CT_TLAnimVariantFloatVal ...
public class CT_TLAnimVariantFloatVal {
	@XmlAttribute(required = true, name = "val")
	protected Float ValAttr;
}

// CT_TLAnimVariantStringVal ...
public class CT_TLAnimVariantStringVal {
	@XmlAttribute(required = true, name = "val")
	protected String ValAttr;
}

// CT_TLAnimVariant ...
public class CT_TLAnimVariant {
	@XmlElement(required = true, name = "boolVal")
	protected CT_TLAnimVariantBooleanVal BoolVal;
	@XmlElement(required = true, name = "intVal")
	protected CT_TLAnimVariantIntegerVal IntVal;
	@XmlElement(required = true, name = "fltVal")
	protected CT_TLAnimVariantFloatVal FltVal;
	@XmlElement(required = true, name = "strVal")
	protected CT_TLAnimVariantStringVal StrVal;
	@XmlElement(required = true, name = "clrVal")
	protected CT_Color ClrVal;
}

// ST_TLTimeAnimateValueTime ...
public class ST_TLTimeAnimateValueTime {
	@XmlElement(required = true)
	protected ST_PositiveFixedPercentage ST_PositiveFixedPercentage;
	@XmlElement(required = true)
	protected String ST_TLTimeIndefinite;
}

// CT_TLTimeAnimateValue ...
public class CT_TLTimeAnimateValue {
	@XmlAttribute(name = "tm")
	protected ST_TLTimeAnimateValueTime TmAttr;
	@XmlAttribute(name = "fmla")
	protected String FmlaAttr;
	@XmlElement(name = "val")
	protected CT_TLAnimVariant Val;
}

// CT_TLTimeAnimateValueList ...
public class CT_TLTimeAnimateValueList {
	@XmlElement(name = "tav")
	protected List<CT_TLTimeAnimateValue> Tav;
}

// ST_TLAnimateBehaviorCalcMode ...
@XmlAccessorType(XmlAccessType.FIELD)
@XmlAttribute(required = true, name = "ST_TLAnimateBehaviorCalcMode")
public class ST_TLAnimateBehaviorCalcMode {
	protected String ST_TLAnimateBehaviorCalcMode;
}

// ST_TLAnimateBehaviorValueType ...
@XmlAccessorType(XmlAccessType.FIELD)
@XmlAttribute(required = true, name = "ST_TLAnimateBehaviorValueType")
public class ST_TLAnimateBehaviorValueType {
	protected String ST_TLAnimateBehaviorValueType;
}

// CT_TLAnimateBehavior ...
public class CT_TLAnimateBehavior {
	@XmlAttribute(name = "by")
	protected String ByAttr;
	@XmlAttribute(name = "from")
	protected String FromAttr;
	@XmlAttribute(name = "to")
	protected String ToAttr;
	@XmlAttribute(name = "calcmode")
	protected String CalcmodeAttr;
	@XmlAttribute(name = "valueType")
	protected String ValueTypeAttr;
	@XmlElement(required = true, name = "cBhvr")
	protected CT_TLCommonBehaviorData CBhvr;
	@XmlElement(name = "tavLst")
	protected CT_TLTimeAnimateValueList TavLst;
}

// CT_TLByRgbColorTransform ...
public class CT_TLByRgbColorTransform {
	@XmlAttribute(required = true, name = "r")
	protected ST_FixedPercentage RAttr;
	@XmlAttribute(required = true, name = "g")
	protected ST_FixedPercentage GAttr;
	@XmlAttribute(required = true, name = "b")
	protected ST_FixedPercentage BAttr;
}

// CT_TLByHslColorTransform ...
public class CT_TLByHslColorTransform {
	@XmlAttribute(required = true, name = "h")
	protected Integer HAttr;
	@XmlAttribute(required = true, name = "s")
	protected ST_FixedPercentage SAttr;
	@XmlAttribute(required = true, name = "l")
	protected ST_FixedPercentage LAttr;
}

// CT_TLByAnimateColorTransform ...
public class CT_TLByAnimateColorTransform {
	@XmlElement(required = true, name = "rgb")
	protected CT_TLByRgbColorTransform Rgb;
	@XmlElement(required = true, name = "hsl")
	protected CT_TLByHslColorTransform Hsl;
}

// ST_TLAnimateColorSpace ...
@XmlAccessorType(XmlAccessType.FIELD)
@XmlAttribute(required = true, name = "ST_TLAnimateColorSpace")
public class ST_TLAnimateColorSpace {
	protected String ST_TLAnimateColorSpace;
}

// ST_TLAnimateColorDirection ...
@XmlAccessorType(XmlAccessType.FIELD)
@XmlAttribute(required = true, name = "ST_TLAnimateColorDirection")
public class ST_TLAnimateColorDirection {
	protected String ST_TLAnimateColorDirection;
}

// CT_TLAnimateColorBehavior ...
public class CT_TLAnimateColorBehavior {
	@XmlAttribute(name = "clrSpc")
	protected String ClrSpcAttr;
	@XmlAttribute(name = "dir")
	protected String DirAttr;
	@XmlElement(required = true, name = "cBhvr")
	protected CT_TLCommonBehaviorData CBhvr;
	@XmlElement(name = "by")
	protected CT_TLByAnimateColorTransform By;
	@XmlElement(name = "from")
	protected CT_Color From;
	@XmlElement(name = "to")
	protected CT_Color To;
}

// ST_TLAnimateEffectTransition ...
@XmlAccessorType(XmlAccessType.FIELD)
@XmlAttribute(required = true, name = "ST_TLAnimateEffectTransition")
public class ST_TLAnimateEffectTransition {
	protected String ST_TLAnimateEffectTransition;
}

// CT_TLAnimateEffectBehavior ...
public class CT_TLAnimateEffectBehavior {
	@XmlAttribute(name = "transition")
	protected String TransitionAttr;
	@XmlAttribute(name = "filter")
	protected String FilterAttr;
	@XmlAttribute(name = "prLst")
	protected String PrLstAttr;
	@XmlElement(required = true, name = "cBhvr")
	protected CT_TLCommonBehaviorData CBhvr;
	@XmlElement(name = "progress")
	protected CT_TLAnimVariant Progress;
}

// ST_TLAnimateMotionBehaviorOrigin ...
@XmlAccessorType(XmlAccessType.FIELD)
@XmlAttribute(required = true, name = "ST_TLAnimateMotionBehaviorOrigin")
public class ST_TLAnimateMotionBehaviorOrigin {
	protected String ST_TLAnimateMotionBehaviorOrigin;
}

// ST_TLAnimateMotionPathEditMode ...
@XmlAccessorType(XmlAccessType.FIELD)
@XmlAttribute(required = true, name = "ST_TLAnimateMotionPathEditMode")
public class ST_TLAnimateMotionPathEditMode {
	protected String ST_TLAnimateMotionPathEditMode;
}

// CT_TLPoint ...
public class CT_TLPoint {
	@XmlAttribute(required = true, name = "x")
	protected ST_Percentage XAttr;
	@XmlAttribute(required = true, name = "y")
	protected ST_Percentage YAttr;
}

// CT_TLAnimateMotionBehavior ...
public class CT_TLAnimateMotionBehavior {
	@XmlAttribute(name = "origin")
	protected String OriginAttr;
	@XmlAttribute(name = "path")
	protected String PathAttr;
	@XmlAttribute(name = "pathEditMode")
	protected String PathEditModeAttr;
	@XmlAttribute(name = "rAng")
	protected Integer RAngAttr;
	@XmlAttribute(name = "ptsTypes")
	protected String PtsTypesAttr;
	@XmlElement(required = true, name = "cBhvr")
	protected CT_TLCommonBehaviorData CBhvr;
	@XmlElement(name = "by")
	protected CT_TLPoint By;
	@XmlElement(name = "from")
	protected CT_TLPoint From;
	@XmlElement(name = "to")
	protected CT_TLPoint To;
	@XmlElement(name = "rCtr")
	protected CT_TLPoint RCtr;
}

// CT_TLAnimateRotationBehavior ...
public class CT_TLAnimateRotationBehavior {
	@XmlAttribute(name = "by")
	protected Integer ByAttr;
	@XmlAttribute(name = "from")
	protected Integer FromAttr;
	@XmlAttribute(name = "to")
	protected Integer ToAttr;
	@XmlElement(required = true, name = "cBhvr")
	protected CT_TLCommonBehaviorData CBhvr;
}

// CT_TLAnimateScaleBehavior ...
public class CT_TLAnimateScaleBehavior {
	@XmlAttribute(name = "zoomContents")
	protected Boolean ZoomContentsAttr;
	@XmlElement(required = true, name = "cBhvr")
	protected CT_TLCommonBehaviorData CBhvr;
	@XmlElement(name = "by")
	protected CT_TLPoint By;
	@XmlElement(name = "from")
	protected CT_TLPoint From;
	@XmlElement(name = "to")
	protected CT_TLPoint To;
}

// ST_TLCommandType ...
@XmlAccessorType(XmlAccessType.FIELD)
@XmlAttribute(required = true, name = "ST_TLCommandType")
public class ST_TLCommandType {
	protected String ST_TLCommandType;
}

// CT_TLCommandBehavior ...
public class CT_TLCommandBehavior {
	@XmlAttribute(name = "type")
	protected String TypeAttr;
	@XmlAttribute(name = "cmd")
	protected String CmdAttr;
	@XmlElement(required = true, name = "cBhvr")
	protected CT_TLCommonBehaviorData CBhvr;
}

// CT_TLSetBehavior ...
public class CT_TLSetBehavior {
	@XmlElement(required = true, name = "cBhvr")
	protected CT_TLCommonBehaviorData CBhvr;
	@XmlElement(name = "to")
	protected CT_TLAnimVariant To;
}

// CT_TLCommonMediaNodeData ...
public class CT_TLCommonMediaNodeData {
	@XmlAttribute(name = "vol")
	protected ST_PositiveFixedPercentage VolAttr;
	@XmlAttribute(name = "mute")
	protected Boolean MuteAttr;
	@XmlAttribute(name = "numSld")
	protected Integer NumSldAttr;
	@XmlAttribute(name = "showWhenStopped")
	protected Boolean ShowWhenStoppedAttr;
	@XmlElement(required = true, name = "cTn")
	protected CT_TLCommonTimeNodeData CTn;
	@XmlElement(required = true, name = "tgtEl")
	protected CT_TLTimeTargetElement TgtEl;
}

// CT_TLMediaNodeAudio ...
public class CT_TLMediaNodeAudio {
	@XmlAttribute(name = "isNarration")
	protected Boolean IsNarrationAttr;
	@XmlElement(required = true, name = "cMediaNode")
	protected CT_TLCommonMediaNodeData CMediaNode;
}

// CT_TLMediaNodeVideo ...
public class CT_TLMediaNodeVideo {
	@XmlAttribute(name = "fullScrn")
	protected Boolean FullScrnAttr;
	@XmlElement(required = true, name = "cMediaNode")
	protected CT_TLCommonMediaNodeData CMediaNode;
}

// AG_TLBuild ...
public class AG_TLBuild {
	@XmlAttribute(name = "spid", required = true)
	protected IntegerAttr Spid;
	@XmlAttribute(name = "grpId", required = true)
	protected IntegerAttr GrpId;
	@XmlAttribute(name = "uiExpand")
	protected BooleanAttr UiExpand;
}

// CT_TLTemplate ...
public class CT_TLTemplate {
	@XmlAttribute(name = "lvl")
	protected Integer LvlAttr;
	@XmlElement(required = true, name = "tnLst")
	protected CT_TimeNodeList TnLst;
}

// CT_TLTemplateList ...
public class CT_TLTemplateList {
	@XmlElement(name = "tmpl")
	protected List<CT_TLTemplate> Tmpl;
}

// ST_TLParaBuildType ...
@XmlAccessorType(XmlAccessType.FIELD)
@XmlAttribute(required = true, name = "ST_TLParaBuildType")
public class ST_TLParaBuildType {
	protected String ST_TLParaBuildType;
}

// CT_TLBuildParagraph ...
public class CT_TLBuildParagraph {
	@XmlElement(required = true)
	protected AG_TLBuild AG_TLBuild;
	@XmlAttribute(name = "build")
	protected String BuildAttr;
	@XmlAttribute(name = "bldLvl")
	protected Integer BldLvlAttr;
	@XmlAttribute(name = "animBg")
	protected Boolean AnimBgAttr;
	@XmlAttribute(name = "autoUpdateAnimBg")
	protected Boolean AutoUpdateAnimBgAttr;
	@XmlAttribute(name = "rev")
	protected Boolean RevAttr;
	@XmlAttribute(name = "advAuto")
	protected ST_TLTime AdvAutoAttr;
	@XmlElement(name = "tmplLst")
	protected CT_TLTemplateList TmplLst;
}

// ST_TLDiagramBuildType ...
@XmlAccessorType(XmlAccessType.FIELD)
@XmlAttribute(required = true, name = "ST_TLDiagramBuildType")
public class ST_TLDiagramBuildType {
	protected String ST_TLDiagramBuildType;
}

// CT_TLBuildDiagram ...
public class CT_TLBuildDiagram {
	@XmlElement(required = true)
	protected AG_TLBuild AG_TLBuild;
	@XmlAttribute(name = "bld")
	protected String BldAttr;
}

// ST_TLOleChartBuildType ...
@XmlAccessorType(XmlAccessType.FIELD)
@XmlAttribute(required = true, name = "ST_TLOleChartBuildType")
public class ST_TLOleChartBuildType {
	protected String ST_TLOleChartBuildType;
}

// CT_TLOleBuildChart ...
public class CT_TLOleBuildChart {
	@XmlElement(required = true)
	protected AG_TLBuild AG_TLBuild;
	@XmlAttribute(name = "bld")
	protected String BldAttr;
	@XmlAttribute(name = "animBg")
	protected Boolean AnimBgAttr;
}

// CT_TLGraphicalObjectBuild ...
public class CT_TLGraphicalObjectBuild {
	@XmlElement(required = true)
	protected AG_TLBuild AG_TLBuild;
	@XmlElement(required = true, name = "bldAsOne")
	protected CT_Empty BldAsOne;
	@XmlElement(required = true, name = "bldSub")
	protected CT_AnimationGraphicalObjectBuildProperties BldSub;
}

// CT_BuildList ...
public class CT_BuildList {
	@XmlElement(required = true, name = "bldP")
	protected List<CT_TLBuildParagraph> BldP;
	@XmlElement(required = true, name = "bldDgm")
	protected List<CT_TLBuildDiagram> BldDgm;
	@XmlElement(required = true, name = "bldOleChart")
	protected List<CT_TLOleBuildChart> BldOleChart;
	@XmlElement(required = true, name = "bldGraphic")
	protected List<CT_TLGraphicalObjectBuild> BldGraphic;
}

// CT_SlideTiming ...
public class CT_SlideTiming {
	@XmlElement(name = "tnLst")
	protected CT_TimeNodeList TnLst;
	@XmlElement(name = "bldLst")
	protected CT_BuildList BldLst;
	@XmlElement(name = "extLst")
	protected CT_ExtensionListModify ExtLst;
}

// CT_Empty ...
public class CT_Empty {
}

// ST_Name ...
@XmlAccessorType(XmlAccessType.FIELD)
@XmlAttribute(required = true, name = "ST_Name")
public class ST_Name {
	protected String ST_Name;
}

// ST_Direction ...
@XmlAccessorType(XmlAccessType.FIELD)
@XmlAttribute(required = true, name = "ST_Direction")
public class ST_Direction {
	protected String ST_Direction;
}

// ST_Index ...
@XmlAccessorType(XmlAccessType.FIELD)
@XmlAttribute(required = true, name = "ST_Index")
public class ST_Index {
	protected Integer ST_Index;
}

// CT_IndexRange ...
public class CT_IndexRange {
	@XmlAttribute(required = true, name = "st")
	protected Integer StAttr;
	@XmlAttribute(required = true, name = "end")
	protected Integer EndAttr;
}

// CT_SlideRelationshipListEntry ...
public class CT_SlideRelationshipListEntry {
	@XmlAttribute(required = true, name = "r:id")
	protected String RIdAttr;
}

// CT_SlideRelationshipList ...
public class CT_SlideRelationshipList {
	@XmlElement(name = "sld")
	protected List<CT_SlideRelationshipListEntry> Sld;
}

// CT_CustomShowId ...
public class CT_CustomShowId {
	@XmlAttribute(required = true, name = "id")
	protected Integer IdAttr;
}

// EG_SlideListChoice ...
public class EG_SlideListChoice {
	@XmlElement(required = true, name = "sldAll")
	protected CT_Empty SldAll;
	@XmlElement(required = true, name = "sldRg")
	protected CT_IndexRange SldRg;
	@XmlElement(required = true, name = "custShow")
	protected CT_CustomShowId CustShow;
}

// CT_CustomerData ...
public class CT_CustomerData {
	@XmlAttribute(required = true, name = "r:id")
	protected String RIdAttr;
}

// CT_TagsData ...
public class CT_TagsData {
	@XmlAttribute(required = true, name = "r:id")
	protected String RIdAttr;
}

// CT_CustomerDataList ...
public class CT_CustomerDataList {
	@XmlElement(name = "custData")
	protected List<CT_CustomerData> CustData;
	@XmlElement(name = "tags")
	protected CT_TagsData Tags;
}

// CT_Extension ...
public class CT_Extension {
	@XmlAttribute(required = true, name = "uri")
	protected String UriAttr;
}

// EG_ExtensionList ...
public class EG_ExtensionList {
	@XmlElement(required = true, name = "ext")
	protected List<CT_Extension> Ext;
}

// CT_ExtensionList ...
public class CT_ExtensionList {
	protected List<EG_ExtensionList> EG_ExtensionList;
}

// CT_ExtensionListModify ...
public class CT_ExtensionListModify {
	@XmlAttribute(name = "mod")
	protected Boolean ModAttr;
	protected List<EG_ExtensionList> EG_ExtensionList;
}

// CT_CommentAuthor ...
public class CT_CommentAuthor {
	@XmlAttribute(required = true, name = "id")
	protected Integer IdAttr;
	@XmlAttribute(required = true, name = "name")
	protected String NameAttr;
	@XmlAttribute(required = true, name = "initials")
	protected String InitialsAttr;
	@XmlAttribute(required = true, name = "lastIdx")
	protected Integer LastIdxAttr;
	@XmlAttribute(required = true, name = "clrIdx")
	protected Integer ClrIdxAttr;
	@XmlElement(name = "extLst")
	protected CT_ExtensionList ExtLst;
}

// CT_CommentAuthorList ...
public class CT_CommentAuthorList {
	@XmlElement(name = "cmAuthor")
	protected List<CT_CommentAuthor> CmAuthor;
}

@XmlAccessorType(XmlAccessType.FIELD)
@XmlElement(required = true, name = "cmAuthorLst")
public class CmAuthorLst {
	protected CT_CommentAuthorList CmAuthorLst;
}

// CT_Comment ...
public class CT_Comment {
	@XmlAttribute(required = true, name = "authorId")
	protected Integer AuthorIdAttr;
	@XmlAttribute(name = "dt")
	protected String DtAttr;
	@XmlAttribute(required = true, name = "idx")
	protected Integer IdxAttr;
	@XmlElement(required = true, name = "pos")
	protected CT_Point2D Pos;
	@XmlElement(required = true, name = "text")
	protected String Text;
	@XmlElement(name = "extLst")
	protected CT_ExtensionListModify ExtLst;
}

// CT_CommentList ...
public class CT_CommentList {
	@XmlElement(name = "cm")
	protected List<CT_Comment> Cm;
}

@XmlAccessorType(XmlAccessType.FIELD)
@XmlElement(required = true, name = "cmLst")
public class CmLst {
	protected CT_CommentList CmLst;
}

// AG_Ole ...
public class AG_Ole {
	@XmlAttribute(name = "name")
	protected StringAttr Name;
	@XmlAttribute(name = "showAsIcon")
	protected BooleanAttr ShowAsIcon;
	@XmlAttribute(name = "r:id")
	protected StringAttr RId;
	@XmlAttribute(name = "imgW")
	protected IntegerAttr ImgW;
	@XmlAttribute(name = "imgH")
	protected IntegerAttr ImgH;
}

// ST_OleObjectFollowColorScheme ...
@XmlAccessorType(XmlAccessType.FIELD)
@XmlAttribute(required = true, name = "ST_OleObjectFollowColorScheme")
public class ST_OleObjectFollowColorScheme {
	protected String ST_OleObjectFollowColorScheme;
}

// CT_OleObjectEmbed ...
public class CT_OleObjectEmbed {
	@XmlAttribute(name = "followColorScheme")
	protected String FollowColorSchemeAttr;
	@XmlElement(name = "extLst")
	protected CT_ExtensionList ExtLst;
}

// CT_OleObjectLink ...
public class CT_OleObjectLink {
	@XmlAttribute(name = "updateAutomatic")
	protected Boolean UpdateAutomaticAttr;
	@XmlElement(name = "extLst")
	protected CT_ExtensionList ExtLst;
}

// CT_OleObject ...
public class CT_OleObject {
	@XmlElement(required = true)
	protected AG_Ole AG_Ole;
	@XmlAttribute(name = "progId")
	protected String ProgIdAttr;
	@XmlElement(required = true, name = "embed")
	protected CT_OleObjectEmbed Embed;
	@XmlElement(required = true, name = "link")
	protected CT_OleObjectLink Link;
	@XmlElement(required = true, name = "pic")
	protected CT_Picture Pic;
}

@XmlAccessorType(XmlAccessType.FIELD)
@XmlElement(required = true, name = "oleObj")
public class OleObj {
	protected CT_OleObject OleObj;
}

// CT_Control ...
public class CT_Control {
	@XmlElement(required = true)
	protected AG_Ole AG_Ole;
	@XmlElement(name = "extLst")
	protected CT_ExtensionList ExtLst;
	@XmlElement(name = "pic")
	protected CT_Picture Pic;
}

// CT_ControlList ...
public class CT_ControlList {
	@XmlElement(name = "control")
	protected List<CT_Control> Control;
}

// ST_SlideId ...
@XmlAccessorType(XmlAccessType.FIELD)
@XmlAttribute(required = true, name = "ST_SlideId")
public class ST_SlideId {
	protected Integer ST_SlideId;
}

// CT_SlideIdListEntry ...
public class CT_SlideIdListEntry {
	@XmlAttribute(required = true, name = "id")
	protected Integer IdAttr;
	@XmlAttribute(required = true, name = "r:id")
	protected String RIdAttr;
	@XmlElement(name = "extLst")
	protected CT_ExtensionList ExtLst;
}

// CT_SlideIdList ...
public class CT_SlideIdList {
	@XmlElement(name = "sldId")
	protected List<CT_SlideIdListEntry> SldId;
}

// ST_SlideMasterId ...
@XmlAccessorType(XmlAccessType.FIELD)
@XmlAttribute(required = true, name = "ST_SlideMasterId")
public class ST_SlideMasterId {
	protected Integer ST_SlideMasterId;
}

// CT_SlideMasterIdListEntry ...
public class CT_SlideMasterIdListEntry {
	@XmlAttribute(name = "id")
	protected Integer IdAttr;
	@XmlAttribute(required = true, name = "r:id")
	protected String RIdAttr;
	@XmlElement(name = "extLst")
	protected CT_ExtensionList ExtLst;
}

// CT_SlideMasterIdList ...
public class CT_SlideMasterIdList {
	@XmlElement(name = "sldMasterId")
	protected List<CT_SlideMasterIdListEntry> SldMasterId;
}

// CT_NotesMasterIdListEntry ...
public class CT_NotesMasterIdListEntry {
	@XmlAttribute(required = true, name = "r:id")
	protected String RIdAttr;
	@XmlElement(name = "extLst")
	protected CT_ExtensionList ExtLst;
}

// CT_NotesMasterIdList ...
public class CT_NotesMasterIdList {
	@XmlElement(name = "notesMasterId")
	protected CT_NotesMasterIdListEntry NotesMasterId;
}

// CT_HandoutMasterIdListEntry ...
public class CT_HandoutMasterIdListEntry {
	@XmlAttribute(required = true, name = "r:id")
	protected String RIdAttr;
	@XmlElement(name = "extLst")
	protected CT_ExtensionList ExtLst;
}

// CT_HandoutMasterIdList ...
public class CT_HandoutMasterIdList {
	@XmlElement(name = "handoutMasterId")
	protected CT_HandoutMasterIdListEntry HandoutMasterId;
}

// CT_EmbeddedFontDataId ...
public class CT_EmbeddedFontDataId {
	@XmlAttribute(required = true, name = "r:id")
	protected String RIdAttr;
}

// CT_EmbeddedFontListEntry ...
public class CT_EmbeddedFontListEntry {
	@XmlElement(required = true, name = "font")
	protected CT_TextFont Font;
	@XmlElement(name = "regular")
	protected CT_EmbeddedFontDataId Regular;
	@XmlElement(name = "bold")
	protected CT_EmbeddedFontDataId Bold;
	@XmlElement(name = "italic")
	protected CT_EmbeddedFontDataId Italic;
	@XmlElement(name = "boldItalic")
	protected CT_EmbeddedFontDataId BoldItalic;
}

// CT_EmbeddedFontList ...
public class CT_EmbeddedFontList {
	@XmlElement(name = "embeddedFont")
	protected List<CT_EmbeddedFontListEntry> EmbeddedFont;
}

// CT_SmartTags ...
public class CT_SmartTags {
	@XmlAttribute(required = true, name = "r:id")
	protected String RIdAttr;
}

// CT_CustomShow ...
public class CT_CustomShow {
	@XmlAttribute(required = true, name = "name")
	protected String NameAttr;
	@XmlAttribute(required = true, name = "id")
	protected Integer IdAttr;
	@XmlElement(required = true, name = "sldLst")
	protected CT_SlideRelationshipList SldLst;
	@XmlElement(name = "extLst")
	protected CT_ExtensionList ExtLst;
}

// CT_CustomShowList ...
public class CT_CustomShowList {
	@XmlElement(name = "custShow")
	protected List<CT_CustomShow> CustShow;
}

// ST_PhotoAlbumLayout ...
@XmlAccessorType(XmlAccessType.FIELD)
@XmlAttribute(required = true, name = "ST_PhotoAlbumLayout")
public class ST_PhotoAlbumLayout {
	protected String ST_PhotoAlbumLayout;
}

// ST_PhotoAlbumFrameShape ...
@XmlAccessorType(XmlAccessType.FIELD)
@XmlAttribute(required = true, name = "ST_PhotoAlbumFrameShape")
public class ST_PhotoAlbumFrameShape {
	protected String ST_PhotoAlbumFrameShape;
}

// CT_PhotoAlbum ...
public class CT_PhotoAlbum {
	@XmlAttribute(name = "bw")
	protected Boolean BwAttr;
	@XmlAttribute(name = "showCaptions")
	protected Boolean ShowCaptionsAttr;
	@XmlAttribute(name = "layout")
	protected String LayoutAttr;
	@XmlAttribute(name = "frame")
	protected String FrameAttr;
	@XmlElement(name = "extLst")
	protected CT_ExtensionList ExtLst;
}

// ST_SlideSizeCoordinate ...
@XmlAccessorType(XmlAccessType.FIELD)
@XmlAttribute(required = true, name = "ST_SlideSizeCoordinate")
public class ST_SlideSizeCoordinate {
	protected Integer ST_SlideSizeCoordinate;
}

// ST_SlideSizeType ...
@XmlAccessorType(XmlAccessType.FIELD)
@XmlAttribute(required = true, name = "ST_SlideSizeType")
public class ST_SlideSizeType {
	protected String ST_SlideSizeType;
}

// CT_SlideSize ...
public class CT_SlideSize {
	@XmlAttribute(required = true, name = "cx")
	protected Integer CxAttr;
	@XmlAttribute(required = true, name = "cy")
	protected Integer CyAttr;
	@XmlAttribute(name = "type")
	protected String TypeAttr;
}

// CT_Kinsoku ...
public class CT_Kinsoku {
	@XmlAttribute(name = "lang")
	protected String LangAttr;
	@XmlAttribute(required = true, name = "invalStChars")
	protected String InvalStCharsAttr;
	@XmlAttribute(required = true, name = "invalEndChars")
	protected String InvalEndCharsAttr;
}

// ST_BookmarkIdSeed ...
@XmlAccessorType(XmlAccessType.FIELD)
@XmlAttribute(required = true, name = "ST_BookmarkIdSeed")
public class ST_BookmarkIdSeed {
	protected Integer ST_BookmarkIdSeed;
}

// CT_ModifyVerifier ...
public class CT_ModifyVerifier {
	@XmlAttribute(name = "algorithmName")
	protected String AlgorithmNameAttr;
	@XmlAttribute(name = "hashValue")
	protected List<Byte> HashValueAttr;
	@XmlAttribute(name = "saltValue")
	protected List<Byte> SaltValueAttr;
	@XmlAttribute(name = "spinValue")
	protected Integer SpinValueAttr;
}

// CT_Presentation ...
public class CT_Presentation {
	@XmlAttribute(name = "serverZoom")
	protected ST_Percentage ServerZoomAttr;
	@XmlAttribute(name = "firstSlideNum")
	protected Integer FirstSlideNumAttr;
	@XmlAttribute(name = "showSpecialPlsOnTitleSld")
	protected Boolean ShowSpecialPlsOnTitleSldAttr;
	@XmlAttribute(name = "rtl")
	protected Boolean RtlAttr;
	@XmlAttribute(name = "removePersonalInfoOnSave")
	protected Boolean RemovePersonalInfoOnSaveAttr;
	@XmlAttribute(name = "compatMode")
	protected Boolean CompatModeAttr;
	@XmlAttribute(name = "strictFirstAndLastChars")
	protected Boolean StrictFirstAndLastCharsAttr;
	@XmlAttribute(name = "embedTrueTypeFonts")
	protected Boolean EmbedTrueTypeFontsAttr;
	@XmlAttribute(name = "saveSubsetFonts")
	protected Boolean SaveSubsetFontsAttr;
	@XmlAttribute(name = "autoCompressPictures")
	protected Boolean AutoCompressPicturesAttr;
	@XmlAttribute(name = "bookmarkIdSeed")
	protected Integer BookmarkIdSeedAttr;
	@XmlAttribute(name = "conformance")
	protected String ConformanceAttr;
	@XmlElement(name = "sldMasterIdLst")
	protected CT_SlideMasterIdList SldMasterIdLst;
	@XmlElement(name = "notesMasterIdLst")
	protected CT_NotesMasterIdList NotesMasterIdLst;
	@XmlElement(name = "handoutMasterIdLst")
	protected CT_HandoutMasterIdList HandoutMasterIdLst;
	@XmlElement(name = "sldIdLst")
	protected CT_SlideIdList SldIdLst;
	@XmlElement(name = "sldSz")
	protected CT_SlideSize SldSz;
	@XmlElement(required = true, name = "notesSz")
	protected CT_PositiveSize2D NotesSz;
	@XmlElement(name = "smartTags")
	protected CT_SmartTags SmartTags;
	@XmlElement(name = "embeddedFontLst")
	protected CT_EmbeddedFontList EmbeddedFontLst;
	@XmlElement(name = "custShowLst")
	protected CT_CustomShowList CustShowLst;
	@XmlElement(name = "photoAlbum")
	protected CT_PhotoAlbum PhotoAlbum;
	@XmlElement(name = "custDataLst")
	protected CT_CustomerDataList CustDataLst;
	@XmlElement(name = "kinsoku")
	protected CT_Kinsoku Kinsoku;
	@XmlElement(name = "defaultTextStyle")
	protected CT_TextListStyle DefaultTextStyle;
	@XmlElement(name = "modifyVerifier")
	protected CT_ModifyVerifier ModifyVerifier;
	@XmlElement(name = "extLst")
	protected CT_ExtensionList ExtLst;
}

@XmlAccessorType(XmlAccessType.FIELD)
@XmlElement(required = true, name = "presentation")
public class Presentation {
	protected CT_Presentation Presentation;
}

// CT_HtmlPublishProperties ...
public class CT_HtmlPublishProperties {
	@XmlAttribute(name = "showSpeakerNotes")
	protected Boolean ShowSpeakerNotesAttr;
	@XmlAttribute(name = "target")
	protected String TargetAttr;
	@XmlAttribute(name = "title")
	protected String TitleAttr;
	@XmlAttribute(required = true, name = "r:id")
	protected String RIdAttr;
	protected List<EG_SlideListChoice> EG_SlideListChoice;
	@XmlElement(name = "extLst")
	protected CT_ExtensionList ExtLst;
}

// ST_PrintWhat ...
@XmlAccessorType(XmlAccessType.FIELD)
@XmlAttribute(required = true, name = "ST_PrintWhat")
public class ST_PrintWhat {
	protected String ST_PrintWhat;
}

// ST_PrintColorMode ...
@XmlAccessorType(XmlAccessType.FIELD)
@XmlAttribute(required = true, name = "ST_PrintColorMode")
public class ST_PrintColorMode {
	protected String ST_PrintColorMode;
}

// CT_PrintProperties ...
public class CT_PrintProperties {
	@XmlAttribute(name = "prnWhat")
	protected String PrnWhatAttr;
	@XmlAttribute(name = "clrMode")
	protected String ClrModeAttr;
	@XmlAttribute(name = "hiddenSlides")
	protected Boolean HiddenSlidesAttr;
	@XmlAttribute(name = "scaleToFitPaper")
	protected Boolean ScaleToFitPaperAttr;
	@XmlAttribute(name = "frameSlides")
	protected Boolean FrameSlidesAttr;
	@XmlElement(name = "extLst")
	protected CT_ExtensionList ExtLst;
}

// CT_ShowInfoBrowse ...
public class CT_ShowInfoBrowse {
	@XmlAttribute(name = "showScrollbar")
	protected Boolean ShowScrollbarAttr;
}

// CT_ShowInfoKiosk ...
public class CT_ShowInfoKiosk {
	@XmlAttribute(name = "restart")
	protected Integer RestartAttr;
}

// EG_ShowType ...
public class EG_ShowType {
	@XmlElement(required = true, name = "present")
	protected CT_Empty Present;
	@XmlElement(required = true, name = "browse")
	protected CT_ShowInfoBrowse Browse;
	@XmlElement(required = true, name = "kiosk")
	protected CT_ShowInfoKiosk Kiosk;
}

// CT_ShowProperties ...
public class CT_ShowProperties {
	@XmlAttribute(name = "loop")
	protected Boolean LoopAttr;
	@XmlAttribute(name = "showNarration")
	protected Boolean ShowNarrationAttr;
	@XmlAttribute(name = "showAnimation")
	protected Boolean ShowAnimationAttr;
	@XmlAttribute(name = "useTimings")
	protected Boolean UseTimingsAttr;
	protected List<EG_ShowType> EG_ShowType;
	protected List<EG_SlideListChoice> EG_SlideListChoice;
	@XmlElement(name = "penClr")
	protected CT_Color PenClr;
	@XmlElement(name = "extLst")
	protected CT_ExtensionList ExtLst;
}

// CT_PresentationProperties ...
public class CT_PresentationProperties {
	@XmlElement(name = "prnPr")
	protected CT_PrintProperties PrnPr;
	@XmlElement(name = "showPr")
	protected CT_ShowProperties ShowPr;
	@XmlElement(name = "clrMru")
	protected CT_ColorMRU ClrMru;
	@XmlElement(name = "extLst")
	protected CT_ExtensionList ExtLst;
}

@XmlAccessorType(XmlAccessType.FIELD)
@XmlElement(required = true, name = "presentationPr")
public class PresentationPr {
	protected CT_PresentationProperties PresentationPr;
}

// CT_HeaderFooter ...
public class CT_HeaderFooter {
	@XmlAttribute(name = "sldNum")
	protected Boolean SldNumAttr;
	@XmlAttribute(name = "hdr")
	protected Boolean HdrAttr;
	@XmlAttribute(name = "ftr")
	protected Boolean FtrAttr;
	@XmlAttribute(name = "dt")
	protected Boolean DtAttr;
	@XmlElement(name = "extLst")
	protected CT_ExtensionListModify ExtLst;
}

// ST_PlaceholderType ...
@XmlAccessorType(XmlAccessType.FIELD)
@XmlAttribute(required = true, name = "ST_PlaceholderType")
public class ST_PlaceholderType {
	protected String ST_PlaceholderType;
}

// ST_PlaceholderSize ...
@XmlAccessorType(XmlAccessType.FIELD)
@XmlAttribute(required = true, name = "ST_PlaceholderSize")
public class ST_PlaceholderSize {
	protected String ST_PlaceholderSize;
}

// CT_Placeholder ...
public class CT_Placeholder {
	@XmlAttribute(name = "type")
	protected String TypeAttr;
	@XmlAttribute(name = "orient")
	protected String OrientAttr;
	@XmlAttribute(name = "sz")
	protected String SzAttr;
	@XmlAttribute(name = "idx")
	protected Integer IdxAttr;
	@XmlAttribute(name = "hasCustomPrompt")
	protected Boolean HasCustomPromptAttr;
	@XmlElement(name = "extLst")
	protected CT_ExtensionListModify ExtLst;
}

// CT_ApplicationNonVisualDrawingProps ...
public class CT_ApplicationNonVisualDrawingProps {
	@XmlAttribute(name = "isPhoto")
	protected Boolean IsPhotoAttr;
	@XmlAttribute(name = "userDrawn")
	protected Boolean UserDrawnAttr;
	protected List<EG_Media> AEG_Media;
	@XmlElement(name = "ph")
	protected CT_Placeholder Ph;
	@XmlElement(name = "custDataLst")
	protected CT_CustomerDataList CustDataLst;
	@XmlElement(name = "extLst")
	protected CT_ExtensionList ExtLst;
}

// CT_ShapeNonVisual ...
public class CT_ShapeNonVisual {
	@XmlElement(required = true, name = "cNvPr")
	protected CT_NonVisualDrawingProps CNvPr;
	@XmlElement(required = true, name = "cNvSpPr")
	protected CT_NonVisualDrawingShapeProps CNvSpPr;
	@XmlElement(required = true, name = "nvPr")
	protected CT_ApplicationNonVisualDrawingProps NvPr;
}

// CT_Shape ...
public class CT_Shape {
	@XmlAttribute(name = "useBgFill")
	protected Boolean UseBgFillAttr;
	@XmlElement(required = true, name = "nvSpPr")
	protected CT_ShapeNonVisual NvSpPr;
	@XmlElement(required = true, name = "spPr")
	protected CT_ShapeProperties SpPr;
	@XmlElement(name = "style")
	protected CT_ShapeStyle Style;
	@XmlElement(name = "txBody")
	protected CT_TextBody TxBody;
	@XmlElement(name = "extLst")
	protected CT_ExtensionListModify ExtLst;
}

// CT_ConnectorNonVisual ...
public class CT_ConnectorNonVisual {
	@XmlElement(required = true, name = "cNvPr")
	protected CT_NonVisualDrawingProps CNvPr;
	@XmlElement(required = true, name = "cNvCxnSpPr")
	protected CT_NonVisualConnectorProperties CNvCxnSpPr;
	@XmlElement(required = true, name = "nvPr")
	protected CT_ApplicationNonVisualDrawingProps NvPr;
}

// CT_Connector ...
public class CT_Connector {
	@XmlElement(required = true, name = "nvCxnSpPr")
	protected CT_ConnectorNonVisual NvCxnSpPr;
	@XmlElement(required = true, name = "spPr")
	protected CT_ShapeProperties SpPr;
	@XmlElement(name = "style")
	protected CT_ShapeStyle Style;
	@XmlElement(name = "extLst")
	protected CT_ExtensionListModify ExtLst;
}

// CT_PictureNonVisual ...
public class CT_PictureNonVisual {
	@XmlElement(required = true, name = "cNvPr")
	protected CT_NonVisualDrawingProps CNvPr;
	@XmlElement(required = true, name = "cNvPicPr")
	protected CT_NonVisualPictureProperties CNvPicPr;
	@XmlElement(required = true, name = "nvPr")
	protected CT_ApplicationNonVisualDrawingProps NvPr;
}

// CT_Picture ...
public class CT_Picture {
	@XmlElement(required = true, name = "nvPicPr")
	protected CT_PictureNonVisual NvPicPr;
	@XmlElement(required = true, name = "blipFill")
	protected CT_BlipFillProperties BlipFill;
	@XmlElement(required = true, name = "spPr")
	protected CT_ShapeProperties SpPr;
	@XmlElement(name = "style")
	protected CT_ShapeStyle Style;
	@XmlElement(name = "extLst")
	protected CT_ExtensionListModify ExtLst;
}

// CT_GraphicalObjectFrameNonVisual ...
public class CT_GraphicalObjectFrameNonVisual {
	@XmlElement(required = true, name = "cNvPr")
	protected CT_NonVisualDrawingProps CNvPr;
	@XmlElement(required = true, name = "cNvGraphicFramePr")
	protected CT_NonVisualGraphicFrameProperties CNvGraphicFramePr;
	@XmlElement(required = true, name = "nvPr")
	protected CT_ApplicationNonVisualDrawingProps NvPr;
}

// CT_GraphicalObjectFrame ...
public class CT_GraphicalObjectFrame {
	@XmlAttribute(name = "bwMode")
	protected String BwModeAttr;
	@XmlElement(required = true, name = "nvGraphicFramePr")
	protected CT_GraphicalObjectFrameNonVisual NvGraphicFramePr;
	@XmlElement(required = true, name = "xfrm")
	protected CT_Transform2D Xfrm;
	@XmlElement(required = true, name = "a:graphic")
	protected CT_GraphicalObject AGraphic;
	@XmlElement(name = "extLst")
	protected CT_ExtensionListModify ExtLst;
}

// CT_GroupShapeNonVisual ...
public class CT_GroupShapeNonVisual {
	@XmlElement(required = true, name = "cNvPr")
	protected CT_NonVisualDrawingProps CNvPr;
	@XmlElement(required = true, name = "cNvGrpSpPr")
	protected CT_NonVisualGroupDrawingShapeProps CNvGrpSpPr;
	@XmlElement(required = true, name = "nvPr")
	protected CT_ApplicationNonVisualDrawingProps NvPr;
}

// CT_GroupShape ...
public class CT_GroupShape {
	@XmlElement(required = true, name = "nvGrpSpPr")
	protected CT_GroupShapeNonVisual NvGrpSpPr;
	@XmlElement(required = true, name = "grpSpPr")
	protected CT_GroupShapeProperties GrpSpPr;
	@XmlElement(required = true, name = "sp")
	protected List<CT_Shape> Sp;
	@XmlElement(required = true, name = "grpSp")
	protected List<CT_GroupShape> GrpSp;
	@XmlElement(required = true, name = "graphicFrame")
	protected List<CT_GraphicalObjectFrame> GraphicFrame;
	@XmlElement(required = true, name = "cxnSp")
	protected List<CT_Connector> CxnSp;
	@XmlElement(required = true, name = "pic")
	protected List<CT_Picture> Pic;
	@XmlElement(required = true, name = "contentPart")
	protected List<CT_Rel> ContentPart;
	@XmlElement(name = "extLst")
	protected CT_ExtensionListModify ExtLst;
}

// CT_Rel ...
public class CT_Rel {
	@XmlAttribute(required = true, name = "r:id")
	protected String RIdAttr;
}

// EG_TopLevelSlide ...
public class EG_TopLevelSlide {
	@XmlElement(required = true, name = "clrMap")
	protected CT_ColorMapping ClrMap;
}

// EG_ChildSlide ...
public class EG_ChildSlide {
	@XmlElement(required = true, name = "clrMapOvr")
	protected CT_ColorMappingOverride ClrMapOvr;
}

// AG_ChildSlide ...
public class AG_ChildSlide {
	@XmlAttribute(name = "showMasterSp")
	protected BooleanAttr ShowMasterSp;
	@XmlAttribute(name = "showMasterPhAnim")
	protected BooleanAttr ShowMasterPhAnim;
}

// CT_BackgroundProperties ...
public class CT_BackgroundProperties {
	@XmlAttribute(name = "shadeToTitle")
	protected Boolean ShadeToTitleAttr;
	protected List<EG_FillProperties> AEG_FillProperties;
	protected List<EG_EffectProperties> AEG_EffectProperties;
	@XmlElement(name = "extLst")
	protected CT_ExtensionList ExtLst;
}

// EG_Background ...
public class EG_Background {
	@XmlElement(required = true, name = "bgPr")
	protected CT_BackgroundProperties BgPr;
	@XmlElement(required = true, name = "bgRef")
	protected CT_StyleMatrixReference BgRef;
}

// CT_Background ...
public class CT_Background {
	@XmlAttribute(name = "bwMode")
	protected String BwModeAttr;
	protected EG_Background EG_Background;
}

// CT_CommonSlideData ...
public class CT_CommonSlideData {
	@XmlAttribute(name = "name")
	protected String NameAttr;
	@XmlElement(name = "bg")
	protected CT_Background Bg;
	@XmlElement(required = true, name = "spTree")
	protected CT_GroupShape SpTree;
	@XmlElement(name = "custDataLst")
	protected CT_CustomerDataList CustDataLst;
	@XmlElement(name = "controls")
	protected CT_ControlList Controls;
	@XmlElement(name = "extLst")
	protected CT_ExtensionList ExtLst;
}

// CT_Slide ...
public class CT_Slide {
	@XmlElement(required = true)
	protected AG_ChildSlide AG_ChildSlide;
	@XmlAttribute(name = "show")
	protected Boolean ShowAttr;
	protected List<EG_ChildSlide> EG_ChildSlide;
	@XmlElement(required = true, name = "cSld")
	protected CT_CommonSlideData CSld;
	@XmlElement(name = "transition")
	protected CT_SlideTransition Transition;
	@XmlElement(name = "timing")
	protected CT_SlideTiming Timing;
	@XmlElement(name = "extLst")
	protected CT_ExtensionListModify ExtLst;
}

@XmlAccessorType(XmlAccessType.FIELD)
@XmlElement(required = true, name = "sld")
public class Sld {
	protected CT_Slide Sld;
}

// ST_SlideLayoutType ...
@XmlAccessorType(XmlAccessType.FIELD)
@XmlAttribute(required = true, name = "ST_SlideLayoutType")
public class ST_SlideLayoutType {
	protected String ST_SlideLayoutType;
}

// CT_SlideLayout ...
public class CT_SlideLayout {
	@XmlElement(required = true)
	protected AG_ChildSlide AG_ChildSlide;
	@XmlAttribute(name = "matchingName")
	protected String MatchingNameAttr;
	@XmlAttribute(name = "type")
	protected String TypeAttr;
	@XmlAttribute(name = "preserve")
	protected Boolean PreserveAttr;
	@XmlAttribute(name = "userDrawn")
	protected Boolean UserDrawnAttr;
	protected List<EG_ChildSlide> EG_ChildSlide;
	@XmlElement(required = true, name = "cSld")
	protected CT_CommonSlideData CSld;
	@XmlElement(name = "transition")
	protected CT_SlideTransition Transition;
	@XmlElement(name = "timing")
	protected CT_SlideTiming Timing;
	@XmlElement(name = "hf")
	protected CT_HeaderFooter Hf;
	@XmlElement(name = "extLst")
	protected CT_ExtensionListModify ExtLst;
}

@XmlAccessorType(XmlAccessType.FIELD)
@XmlElement(required = true, name = "sldLayout")
public class SldLayout {
	protected CT_SlideLayout SldLayout;
}

// CT_SlideMasterTextStyles ...
public class CT_SlideMasterTextStyles {
	@XmlElement(name = "titleStyle")
	protected CT_TextListStyle TitleStyle;
	@XmlElement(name = "bodyStyle")
	protected CT_TextListStyle BodyStyle;
	@XmlElement(name = "otherStyle")
	protected CT_TextListStyle OtherStyle;
	@XmlElement(name = "extLst")
	protected CT_ExtensionList ExtLst;
}

// ST_SlideLayoutId ...
@XmlAccessorType(XmlAccessType.FIELD)
@XmlAttribute(required = true, name = "ST_SlideLayoutId")
public class ST_SlideLayoutId {
	protected Integer ST_SlideLayoutId;
}

// CT_SlideLayoutIdListEntry ...
public class CT_SlideLayoutIdListEntry {
	@XmlAttribute(name = "id")
	protected Integer IdAttr;
	@XmlAttribute(required = true, name = "r:id")
	protected String RIdAttr;
	@XmlElement(name = "extLst")
	protected CT_ExtensionList ExtLst;
}

// CT_SlideLayoutIdList ...
public class CT_SlideLayoutIdList {
	@XmlElement(name = "sldLayoutId")
	protected List<CT_SlideLayoutIdListEntry> SldLayoutId;
}

// CT_SlideMaster ...
public class CT_SlideMaster {
	@XmlAttribute(name = "preserve")
	protected Boolean PreserveAttr;
	protected List<EG_TopLevelSlide> EG_TopLevelSlide;
	@XmlElement(required = true, name = "cSld")
	protected CT_CommonSlideData CSld;
	@XmlElement(name = "sldLayoutIdLst")
	protected CT_SlideLayoutIdList SldLayoutIdLst;
	@XmlElement(name = "transition")
	protected CT_SlideTransition Transition;
	@XmlElement(name = "timing")
	protected CT_SlideTiming Timing;
	@XmlElement(name = "hf")
	protected CT_HeaderFooter Hf;
	@XmlElement(name = "txStyles")
	protected CT_SlideMasterTextStyles TxStyles;
	@XmlElement(name = "extLst")
	protected CT_ExtensionListModify ExtLst;
}

@XmlAccessorType(XmlAccessType.FIELD)
@XmlElement(required = true, name = "sldMaster")
public class SldMaster {
	protected CT_SlideMaster SldMaster;
}

// CT_HandoutMaster ...
public class CT_HandoutMaster {
	protected List<EG_TopLevelSlide> EG_TopLevelSlide;
	@XmlElement(required = true, name = "cSld")
	protected CT_CommonSlideData CSld;
	@XmlElement(name = "hf")
	protected CT_HeaderFooter Hf;
	@XmlElement(name = "extLst")
	protected CT_ExtensionListModify ExtLst;
}

@XmlAccessorType(XmlAccessType.FIELD)
@XmlElement(required = true, name = "handoutMaster")
public class HandoutMaster {
	protected CT_HandoutMaster HandoutMaster;
}

// CT_NotesMaster ...
public class CT_NotesMaster {
	protected List<EG_TopLevelSlide> EG_TopLevelSlide;
	@XmlElement(required = true, name = "cSld")
	protected CT_CommonSlideData CSld;
	@XmlElement(name = "hf")
	protected CT_HeaderFooter Hf;
	@XmlElement(name = "notesStyle")
	protected CT_TextListStyle NotesStyle;
	@XmlElement(name = "extLst")
	protected CT_ExtensionListModify ExtLst;
}

@XmlAccessorType(XmlAccessType.FIELD)
@XmlElement(required = true, name = "notesMaster")
public class NotesMaster {
	protected CT_NotesMaster NotesMaster;
}

// CT_NotesSlide ...
public class CT_NotesSlide {
	@XmlElement(required = true)
	protected AG_ChildSlide AG_ChildSlide;
	protected List<EG_ChildSlide> EG_ChildSlide;
	@XmlElement(required = true, name = "cSld")
	protected CT_CommonSlideData CSld;
	@XmlElement(name = "extLst")
	protected CT_ExtensionListModify ExtLst;
}

@XmlAccessorType(XmlAccessType.FIELD)
@XmlElement(required = true, name = "notes")
public class Notes {
	protected CT_NotesSlide Notes;
}

// CT_SlideSyncProperties ...
public class CT_SlideSyncProperties {
	@XmlAttribute(required = true, name = "serverSldId")
	protected String ServerSldIdAttr;
	@XmlAttribute(required = true, name = "serverSldModifiedTime")
	protected String ServerSldModifiedTimeAttr;
	@XmlAttribute(required = true, name = "clientInsertedTime")
	protected String ClientInsertedTimeAttr;
	@XmlElement(name = "extLst")
	protected CT_ExtensionList ExtLst;
}

@XmlAccessorType(XmlAccessType.FIELD)
@XmlElement(required = true, name = "sldSyncPr")
public class SldSyncPr {
	protected CT_SlideSyncProperties SldSyncPr;
}

// CT_StringTag ...
public class CT_StringTag {
	@XmlAttribute(required = true, name = "name")
	protected String NameAttr;
	@XmlAttribute(required = true, name = "val")
	protected String ValAttr;
}

// CT_TagList ...
public class CT_TagList {
	@XmlElement(name = "tag")
	protected List<CT_StringTag> Tag;
}

@XmlAccessorType(XmlAccessType.FIELD)
@XmlElement(required = true, name = "tagLst")
public class TagLst {
	protected CT_TagList TagLst;
}

// ST_SplitterBarState ...
@XmlAccessorType(XmlAccessType.FIELD)
@XmlAttribute(required = true, name = "ST_SplitterBarState")
public class ST_SplitterBarState {
	protected String ST_SplitterBarState;
}

// ST_ViewType ...
@XmlAccessorType(XmlAccessType.FIELD)
@XmlAttribute(required = true, name = "ST_ViewType")
public class ST_ViewType {
	protected String ST_ViewType;
}

// CT_NormalViewPortion ...
public class CT_NormalViewPortion {
	@XmlAttribute(required = true, name = "sz")
	protected ST_PositiveFixedPercentage SzAttr;
	@XmlAttribute(name = "autoAdjust")
	protected Boolean AutoAdjustAttr;
}

// CT_NormalViewProperties ...
public class CT_NormalViewProperties {
	@XmlAttribute(name = "showOutlineIcons")
	protected Boolean ShowOutlineIconsAttr;
	@XmlAttribute(name = "snapVertSplitter")
	protected Boolean SnapVertSplitterAttr;
	@XmlAttribute(name = "vertBarState")
	protected String VertBarStateAttr;
	@XmlAttribute(name = "horzBarState")
	protected String HorzBarStateAttr;
	@XmlAttribute(name = "preferSingleView")
	protected Boolean PreferSingleViewAttr;
	@XmlElement(required = true, name = "restoredLeft")
	protected CT_NormalViewPortion RestoredLeft;
	@XmlElement(required = true, name = "restoredTop")
	protected CT_NormalViewPortion RestoredTop;
	@XmlElement(name = "extLst")
	protected CT_ExtensionList ExtLst;
}

// CT_CommonViewProperties ...
public class CT_CommonViewProperties {
	@XmlAttribute(name = "varScale")
	protected Boolean VarScaleAttr;
	@XmlElement(required = true, name = "scale")
	protected CT_Scale2D Scale;
	@XmlElement(required = true, name = "origin")
	protected CT_Point2D Origin;
}

// CT_NotesTextViewProperties ...
public class CT_NotesTextViewProperties {
	@XmlElement(required = true, name = "cViewPr")
	protected CT_CommonViewProperties CViewPr;
	@XmlElement(name = "extLst")
	protected CT_ExtensionList ExtLst;
}

// CT_OutlineViewSlideEntry ...
public class CT_OutlineViewSlideEntry {
	@XmlAttribute(required = true, name = "r:id")
	protected String RIdAttr;
	@XmlAttribute(name = "collapse")
	protected Boolean CollapseAttr;
}

// CT_OutlineViewSlideList ...
public class CT_OutlineViewSlideList {
	@XmlElement(name = "sld")
	protected List<CT_OutlineViewSlideEntry> Sld;
}

// CT_OutlineViewProperties ...
public class CT_OutlineViewProperties {
	@XmlElement(required = true, name = "cViewPr")
	protected CT_CommonViewProperties CViewPr;
	@XmlElement(name = "sldLst")
	protected CT_OutlineViewSlideList SldLst;
	@XmlElement(name = "extLst")
	protected CT_ExtensionList ExtLst;
}

// CT_SlideSorterViewProperties ...
public class CT_SlideSorterViewProperties {
	@XmlAttribute(name = "showFormatting")
	protected Boolean ShowFormattingAttr;
	@XmlElement(required = true, name = "cViewPr")
	protected CT_CommonViewProperties CViewPr;
	@XmlElement(name = "extLst")
	protected CT_ExtensionList ExtLst;
}

// CT_Guide ...
public class CT_Guide {
	@XmlAttribute(name = "orient")
	protected String OrientAttr;
	@XmlAttribute(name = "pos")
	protected ST_Coordinate32 PosAttr;
}

// CT_GuideList ...
public class CT_GuideList {
	@XmlElement(name = "guide")
	protected List<CT_Guide> Guide;
}

// CT_CommonSlideViewProperties ...
public class CT_CommonSlideViewProperties {
	@XmlAttribute(name = "snapToGrid")
	protected Boolean SnapToGridAttr;
	@XmlAttribute(name = "snapToObjects")
	protected Boolean SnapToObjectsAttr;
	@XmlAttribute(name = "showGuides")
	protected Boolean ShowGuidesAttr;
	@XmlElement(required = true, name = "cViewPr")
	protected CT_CommonViewProperties CViewPr;
	@XmlElement(name = "guideLst")
	protected CT_GuideList GuideLst;
}

// CT_SlideViewProperties ...
public class CT_SlideViewProperties {
	@XmlElement(required = true, name = "cSldViewPr")
	protected CT_CommonSlideViewProperties CSldViewPr;
	@XmlElement(name = "extLst")
	protected CT_ExtensionList ExtLst;
}

// CT_NotesViewProperties ...
public class CT_NotesViewProperties {
	@XmlElement(required = true, name = "cSldViewPr")
	protected CT_CommonSlideViewProperties CSldViewPr;
	@XmlElement(name = "extLst")
	protected CT_ExtensionList ExtLst;
}

// CT_ViewProperties ...
public class CT_ViewProperties {
	@XmlAttribute(name = "lastView")
	protected String LastViewAttr;
	@XmlAttribute(name = "showComments")
	protected Boolean ShowCommentsAttr;
	@XmlElement(name = "normalViewPr")
	protected CT_NormalViewProperties NormalViewPr;
	@XmlElement(name = "slideViewPr")
	protected CT_SlideViewProperties SlideViewPr;
	@XmlElement(name = "outlineViewPr")
	protected CT_OutlineViewProperties OutlineViewPr;
	@XmlElement(name = "notesTextViewPr")
	protected CT_NotesTextViewProperties NotesTextViewPr;
	@XmlElement(name = "sorterViewPr")
	protected CT_SlideSorterViewProperties SorterViewPr;
	@XmlElement(name = "notesViewPr")
	protected CT_NotesViewProperties NotesViewPr;
	@XmlElement(name = "gridSpacing")
	protected CT_PositiveSize2D GridSpacing;
	@XmlElement(name = "extLst")
	protected CT_ExtensionList ExtLst;
}

@XmlAccessorType(XmlAccessType.FIELD)
@XmlElement(required = true, name = "viewPr")
public class ViewPr {
	protected CT_ViewProperties ViewPr;
}
