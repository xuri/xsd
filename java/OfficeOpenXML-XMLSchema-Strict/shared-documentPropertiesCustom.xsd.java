// Code generated by xgen. DO NOT EDIT.

package schema;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.XmlValue;

@XmlAccessorType(XmlAccessType.FIELD)
@XmlElement(required = true, name = "Properties")
public class Properties {
	protected CT_Properties Properties;
}

// CT_Properties ...
public class CT_Properties {
	@XmlElement(name = "property")
	protected List<CT_Property> Property;
}

// CT_Property ...
public class CT_Property {
	@XmlAttribute(required = true, name = "fmtid")
	protected String FmtidAttr;
	@XmlAttribute(required = true, name = "pid")
	protected Integer PidAttr;
	@XmlAttribute(name = "name")
	protected String NameAttr;
	@XmlAttribute(name = "linkTarget")
	protected String LinkTargetAttr;
	@XmlElement(name = "vt:vector")
	protected CT_Vector VtVector;
	@XmlElement(name = "vt:array")
	protected CT_Array VtArray;
	@XmlElement(name = "vt:blob")
	protected List<Byte> VtBlob;
	@XmlElement(name = "vt:oblob")
	protected List<Byte> VtOblob;
	@XmlElement(name = "vt:empty")
	protected CT_Empty VtEmpty;
	@XmlElement(name = "vt:null")
	protected CT_Null VtNull;
	@XmlElement(name = "vt:i1")
	protected Byte VtI1;
	@XmlElement(name = "vt:i2")
	protected Integer VtI2;
	@XmlElement(name = "vt:i4")
	protected Integer VtI4;
	@XmlElement(name = "vt:i8")
	protected Long VtI8;
	@XmlElement(name = "vt:int")
	protected Integer VtInt;
	@XmlElement(name = "vt:ui1")
	protected Byte VtUi1;
	@XmlElement(name = "vt:ui2")
	protected Short VtUi2;
	@XmlElement(name = "vt:ui4")
	protected Integer VtUi4;
	@XmlElement(name = "vt:ui8")
	protected Long VtUi8;
	@XmlElement(name = "vt:uint")
	protected Integer VtUint;
	@XmlElement(name = "vt:r4")
	protected Float VtR4;
	@XmlElement(name = "vt:r8")
	protected Float VtR8;
	@XmlElement(name = "vt:decimal")
	protected Float VtDecimal;
	@XmlElement(name = "vt:lpstr")
	protected String VtLpstr;
	@XmlElement(name = "vt:lpwstr")
	protected String VtLpwstr;
	@XmlElement(name = "vt:bstr")
	protected String VtBstr;
	@XmlElement(name = "vt:date")
	protected String VtDate;
	@XmlElement(name = "vt:filetime")
	protected String VtFiletime;
	@XmlElement(name = "vt:bool")
	protected Boolean VtBool;
	@XmlElement(name = "vt:cy")
	protected String VtCy;
	@XmlElement(name = "vt:error")
	protected String VtError;
	@XmlElement(name = "vt:stream")
	protected List<Byte> VtStream;
	@XmlElement(name = "vt:ostream")
	protected List<Byte> VtOstream;
	@XmlElement(name = "vt:storage")
	protected List<Byte> VtStorage;
	@XmlElement(name = "vt:ostorage")
	protected List<Byte> VtOstorage;
	@XmlElement(name = "vt:vstream")
	protected CT_Vstream VtVstream;
	@XmlElement(name = "vt:clsid")
	protected String VtClsid;
}
