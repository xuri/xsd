// Code generated by xgen. DO NOT EDIT.

package schema;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.XmlValue;

// Project ...
public class Project {
	@XmlElement(name = "extend")
	protected String Extend;
	@XmlElement(required = true, name = "pomVersion")
	protected String PomVersion;
	@XmlElement(required = true, name = "id")
	protected String Id;
	@XmlElement(required = true, name = "name")
	protected String Name;
	@XmlElement(name = "groupId")
	protected String GroupId;
	@XmlElement(required = true, name = "currentVersion")
	protected String CurrentVersion;
	@XmlElement(required = true, name = "organization")
	protected Organization Organization;
	@XmlElement(required = true, name = "inceptionYear")
	protected String InceptionYear;
	@XmlElement(name = "package")
	protected String Package;
	@XmlElement(name = "logo")
	protected String Logo;
	@XmlElement(name = "gumpRepositoryId")
	protected String GumpRepositoryId;
	@XmlElement(name = "description")
	protected String Description;
	@XmlElement(required = true, name = "shortDescription")
	protected String ShortDescription;
	@XmlElement(name = "url")
	protected String Url;
	@XmlElement(name = "issueTrackingUrl")
	protected String IssueTrackingUrl;
	@XmlElement(name = "siteAddress")
	protected String SiteAddress;
	@XmlElement(name = "siteDirectory")
	protected String SiteDirectory;
	@XmlElement(name = "distributionSite")
	protected String DistributionSite;
	@XmlElement(name = "distributionDirectory")
	protected String DistributionDirectory;
	@XmlElement(name = "repository")
	protected Repository Repository;
	@XmlElement(name = "versions")
	protected Versions Versions;
	@XmlElement(name = "branches")
	protected Branches Branches;
	@XmlElement(name = "mailingLists")
	protected MailingLists MailingLists;
	@XmlElement(required = true, name = "developers")
	protected Developers Developers;
	@XmlElement(name = "contributors")
	protected Contributors Contributors;
	@XmlElement(name = "licenses")
	protected Licenses Licenses;
	@XmlElement(name = "dependencies")
	protected Dependencies Dependencies;
	@XmlElement(required = true, name = "build")
	protected Build Build;
	@XmlElement(name = "reports")
	protected Reports Reports;
	@XmlElement(name = "properties")
	protected Properties Properties;
}

@XmlAccessorType(XmlAccessType.FIELD)
@XmlElement(required = true, name = "extend")
public class Extend {
	protected String Extend;
}

@XmlAccessorType(XmlAccessType.FIELD)
@XmlElement(required = true, name = "connection")
public class Connection {
	protected String Connection;
}

@XmlAccessorType(XmlAccessType.FIELD)
@XmlElement(required = true, name = "developerConnection")
public class DeveloperConnection {
	protected String DeveloperConnection;
}

@XmlAccessorType(XmlAccessType.FIELD)
@XmlElement(required = true, name = "currentVersion")
public class CurrentVersion {
	protected String CurrentVersion;
}

@XmlAccessorType(XmlAccessType.FIELD)
@XmlElement(required = true, name = "description")
public class Description {
	protected String Description;
}

@XmlAccessorType(XmlAccessType.FIELD)
@XmlElement(required = true, name = "distributionSite")
public class DistributionSite {
	protected String DistributionSite;
}

@XmlAccessorType(XmlAccessType.FIELD)
@XmlElement(required = true, name = "distributionDirectory")
public class DistributionDirectory {
	protected String DistributionDirectory;
}

@XmlAccessorType(XmlAccessType.FIELD)
@XmlElement(required = true, name = "name")
public class Name {
	protected String Name;
}

@XmlAccessorType(XmlAccessType.FIELD)
@XmlElement(required = true, name = "groupId")
public class GroupId {
	protected String GroupId;
}

@XmlAccessorType(XmlAccessType.FIELD)
@XmlElement(required = true, name = "artifactId")
public class ArtifactId {
	protected String ArtifactId;
}

@XmlAccessorType(XmlAccessType.FIELD)
@XmlElement(required = true, name = "gumpRepositoryId")
public class GumpRepositoryId {
	protected String GumpRepositoryId;
}

@XmlAccessorType(XmlAccessType.FIELD)
@XmlElement(required = true, name = "id")
public class Id {
	protected String Id;
}

@XmlAccessorType(XmlAccessType.FIELD)
@XmlElement(required = true, name = "inceptionYear")
public class InceptionYear {
	protected String InceptionYear;
}

@XmlAccessorType(XmlAccessType.FIELD)
@XmlElement(required = true, name = "issueTrackingUrl")
public class IssueTrackingUrl {
	protected String IssueTrackingUrl;
}

@XmlAccessorType(XmlAccessType.FIELD)
@XmlElement(required = true, name = "logo")
public class Logo {
	protected String Logo;
}

@XmlAccessorType(XmlAccessType.FIELD)
@XmlElement(required = true, name = "package")
public class Package {
	protected String Package;
}

@XmlAccessorType(XmlAccessType.FIELD)
@XmlElement(required = true, name = "pomVersion")
public class PomVersion {
	protected String PomVersion;
}

@XmlAccessorType(XmlAccessType.FIELD)
@XmlElement(required = true, name = "shortDescription")
public class ShortDescription {
	protected String ShortDescription;
}

@XmlAccessorType(XmlAccessType.FIELD)
@XmlElement(required = true, name = "siteAddress")
public class SiteAddress {
	protected String SiteAddress;
}

@XmlAccessorType(XmlAccessType.FIELD)
@XmlElement(required = true, name = "siteDirectory")
public class SiteDirectory {
	protected String SiteDirectory;
}

@XmlAccessorType(XmlAccessType.FIELD)
@XmlElement(required = true, name = "url")
public class Url {
	protected String Url;
}

// Repository ...
public class Repository {
	@XmlElement(required = true, name = "connection")
	protected String Connection;
	@XmlElement(name = "developerConnection")
	protected String DeveloperConnection;
	@XmlElement(name = "url")
	protected String Url;
}

// Organization ...
public class Organization {
	@XmlElement(required = true, name = "name")
	protected String Name;
	@XmlElement(name = "url")
	protected String Url;
	@XmlElement(name = "logo")
	protected String Logo;
}

// Versions ...
public class Versions {
	@XmlElement(name = "version")
	protected List<Version> Version;
}

// Version ...
public class Version {
	@XmlElement(required = true, name = "id")
	protected String Id;
	@XmlElement(required = true, name = "name")
	protected String Name;
	@XmlElement(required = true, name = "tag")
	protected String Tag;
}

@XmlAccessorType(XmlAccessType.FIELD)
@XmlElement(required = true, name = "tag")
public class Tag {
	protected String Tag;
}

// Branches ...
public class Branches {
	@XmlElement(name = "branch")
	protected List<Branch> Branch;
}

// Branch ...
public class Branch {
	@XmlElement(required = true, name = "tag")
	protected String Tag;
}

// MailingLists ...
public class MailingLists {
	@XmlElement(name = "mailingList")
	protected List<MailingList> MailingList;
}

// MailingList ...
public class MailingList {
	@XmlElement(required = true, name = "name")
	protected String Name;
	@XmlElement(required = true, name = "subscribe")
	protected String Subscribe;
	@XmlElement(required = true, name = "unsubscribe")
	protected String Unsubscribe;
	@XmlElement(name = "archive")
	protected String Archive;
}

@XmlAccessorType(XmlAccessType.FIELD)
@XmlElement(required = true, name = "subscribe")
public class Subscribe {
	protected String Subscribe;
}

@XmlAccessorType(XmlAccessType.FIELD)
@XmlElement(required = true, name = "unsubscribe")
public class Unsubscribe {
	protected String Unsubscribe;
}

@XmlAccessorType(XmlAccessType.FIELD)
@XmlElement(required = true, name = "archive")
public class Archive {
	protected String Archive;
}

// Developers ...
public class Developers {
	@XmlElement(name = "developer")
	protected List<Developer> Developer;
}

// Developer ...
public class Developer {
	protected ContactDetails ContactDetails;
	@XmlElement(required = true, name = "name")
	protected String Name;
	@XmlElement(required = true, name = "id")
	protected String Id;
}

// ContactDetails ...
public class ContactDetails {
	@XmlElement(required = true, name = "email")
	protected String Email;
	@XmlElement(required = true, name = "organization")
	protected String Organization;
	@XmlElement(required = true, name = "roles")
	protected Roles Roles;
	@XmlElement(required = true, name = "url")
	protected String Url;
	@XmlElement(required = true, name = "timezone")
	protected Float Timezone;
}

@XmlAccessorType(XmlAccessType.FIELD)
@XmlElement(required = true, name = "email")
public class Email {
	protected String Email;
}

// Roles ...
public class Roles {
	@XmlElement(name = "role")
	protected List<String> Role;
}

@XmlAccessorType(XmlAccessType.FIELD)
@XmlElement(required = true, name = "role")
public class Role {
	protected String Role;
}

// TimezoneType ...
@XmlAccessorType(XmlAccessType.FIELD)
@XmlAttribute(required = true, name = "timezoneType")
public class TimezoneType {
	protected Float TimezoneType;
}

@XmlAccessorType(XmlAccessType.FIELD)
@XmlElement(required = true, name = "timezone")
public class Timezone {
	protected Float Timezone;
}

// Contributors ...
public class Contributors {
	@XmlElement(name = "contributor")
	protected List<Contributor> Contributor;
}

// Contributor ...
public class Contributor {
	protected ContactDetails ContactDetails;
	@XmlElement(required = true, name = "name")
	protected String Name;
}

// Licenses ...
public class Licenses {
	@XmlElement(name = "license")
	protected List<License> License;
}

// License ...
public class License {
	@XmlElement(name = "name")
	protected String Name;
	@XmlElement(name = "url")
	protected String Url;
	@XmlElement(name = "distribution")
	protected void Distribution;
}

@XmlAccessorType(XmlAccessType.FIELD)
@XmlElement(required = true, name = "distribution")
public class Distribution {
	protected void Distribution;
}

// Dependencies ...
public class Dependencies {
	@XmlElement(name = "dependency")
	protected List<Dependency> Dependency;
}

// Dependency ...
public class Dependency {
	@XmlElement(name = "id")
	protected String Id;
	@XmlElement(name = "groupId")
	protected String GroupId;
	@XmlElement(name = "artifactId")
	protected String ArtifactId;
	@XmlElement(required = true, name = "version")
	protected String Version;
	@XmlElement(name = "jar")
	protected String Jar;
	@XmlElement(name = "type")
	protected String Type;
	@XmlElement(name = "url")
	protected String Url;
	@XmlElement(name = "properties")
	protected Properties Properties;
}

@XmlAccessorType(XmlAccessType.FIELD)
@XmlElement(required = true, name = "type")
public class Type {
	protected String Type;
}

@XmlAccessorType(XmlAccessType.FIELD)
@XmlElement(required = true, name = "jar")
public class Jar {
	protected String Jar;
}

// Build ...
public class Build {
	@XmlElement(name = "nagEmailAddress")
	protected String NagEmailAddress;
	@XmlElement(name = "sourceDirectory")
	protected String SourceDirectory;
	@XmlElement(name = "sourceModifications")
	protected SourceModifications SourceModifications;
	@XmlElement(name = "unitTestSourceDirectory")
	protected String UnitTestSourceDirectory;
	@XmlElement(name = "integrationUnitTestSourceDirectory")
	protected String IntegrationUnitTestSourceDirectory;
	@XmlElement(name = "aspectSourceDirectory")
	protected String AspectSourceDirectory;
	@XmlElement(name = "unitTest")
	protected UnitTest UnitTest;
	@XmlElement(name = "resources")
	protected Resources Resources;
}

@XmlAccessorType(XmlAccessType.FIELD)
@XmlElement(required = true, name = "nagEmailAddress")
public class NagEmailAddress {
	protected String NagEmailAddress;
}

@XmlAccessorType(XmlAccessType.FIELD)
@XmlElement(required = true, name = "sourceDirectory")
public class SourceDirectory {
	protected String SourceDirectory;
}

// SourceModifications ...
public class SourceModifications {
	@XmlElement(name = "sourceModification")
	protected List<SourceModification> SourceModification;
}

// SourceModification ...
public class SourceModification {
	@XmlElement(required = true, name = "className")
	protected String ClassName;
	@XmlElement(name = "includes")
	protected List<Includes> Includes;
	@XmlElement(name = "excludes")
	protected List<Excludes> Excludes;
}

@XmlAccessorType(XmlAccessType.FIELD)
@XmlElement(required = true, name = "unitTestSourceDirectory")
public class UnitTestSourceDirectory {
	protected String UnitTestSourceDirectory;
}

@XmlAccessorType(XmlAccessType.FIELD)
@XmlElement(required = true, name = "integrationUnitTestSourceDirectory")
public class IntegrationUnitTestSourceDirectory {
	protected String IntegrationUnitTestSourceDirectory;
}

@XmlAccessorType(XmlAccessType.FIELD)
@XmlElement(required = true, name = "aspectSourceDirectory")
public class AspectSourceDirectory {
	protected String AspectSourceDirectory;
}

// UnitTest ...
public class UnitTest {
	@XmlElement(name = "includes")
	protected List<Includes> Includes;
	@XmlElement(name = "excludes")
	protected List<Excludes> Excludes;
	@XmlElement(name = "resources")
	protected Resources Resources;
}

// Includes ...
public class Includes {
	@XmlElement(name = "include")
	protected List<String> Include;
}

// Excludes ...
public class Excludes {
	@XmlElement(name = "exclude")
	protected List<String> Exclude;
}

@XmlAccessorType(XmlAccessType.FIELD)
@XmlElement(required = true, name = "include")
public class Include {
	protected String Include;
}

@XmlAccessorType(XmlAccessType.FIELD)
@XmlElement(required = true, name = "exclude")
public class Exclude {
	protected String Exclude;
}

// Resources ...
public class Resources {
	@XmlElement(name = "resource")
	protected List<Resource> Resource;
}

@XmlAccessorType(XmlAccessType.FIELD)
@XmlElement(required = true, name = "directory")
public class Directory {
	protected String Directory;
}

@XmlAccessorType(XmlAccessType.FIELD)
@XmlElement(required = true, name = "targetPath")
public class TargetPath {
	protected String TargetPath;
}

@XmlAccessorType(XmlAccessType.FIELD)
@XmlElement(required = true, name = "filtering")
public class Filtering {
	protected Boolean Filtering;
}

// Resource ...
public class Resource {
	@XmlElement(name = "directory")
	protected String Directory;
	@XmlElement(name = "targetPath")
	protected String TargetPath;
	@XmlElement(name = "includes")
	protected List<Includes> Includes;
	@XmlElement(name = "excludes")
	protected List<Excludes> Excludes;
	@XmlElement(name = "filtering")
	protected Boolean Filtering;
}

// Reports ...
public class Reports {
	@XmlElement(name = "report")
	protected List<String> Report;
}

// Properties ...
public class Properties {
}

@XmlAccessorType(XmlAccessType.FIELD)
@XmlElement(required = true, name = "classloader")
public class Classloader {
	protected void Classloader;
}
