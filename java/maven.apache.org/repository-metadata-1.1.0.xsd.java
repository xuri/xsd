// Code generated by xgen. DO NOT EDIT.

package schema;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.XmlValue;

@XmlAccessorType(XmlAccessType.FIELD)
@XmlElement(required = true, name = "metadata")
public class Metadata {
	protected Metadata Metadata;
}

// Plugins is The set of plugin mappings for the group represented by this directory
public class Plugins {
	@XmlElement(name = "plugin")
	protected List<Plugin> Plugin;
}

// Metadata2 is Versioning information for the artifact.
public class Metadata2 {
	@XmlAttribute(name = "modelVersion")
	protected String ModelVersionAttr;
	@XmlElement(name = "groupId")
	protected String GroupId;
	@XmlElement(name = "artifactId")
	protected String ArtifactId;
	@XmlElement(name = "version")
	protected String Version;
	@XmlElement(name = "versioning")
	protected Versioning Versioning;
	@XmlElement(name = "plugins")
	protected Plugins Plugins;
}

// Plugin is The plugin artifactId
public class Plugin {
	@XmlElement(name = "name")
	protected String Name;
	@XmlElement(name = "prefix")
	protected String Prefix;
	@XmlElement(name = "artifactId")
	protected String ArtifactId;
}

// Versions is Versions available of the artifact (both releases and snapshots)
public class Versions {
	@XmlElement(name = "version")
	protected List<String> Version;
}

// SnapshotVersions is Information for each sub-artifact available in this artifact snapshot.
public class SnapshotVersions {
	@XmlElement(name = "snapshotVersion")
	protected List<SnapshotVersion> SnapshotVersion;
}

// Versioning is The current snapshot data in use for this version (artifact snapshots only)
public class Versioning {
	@XmlElement(name = "latest")
	protected String Latest;
	@XmlElement(name = "release")
	protected String Release;
	@XmlElement(name = "snapshot")
	protected Snapshot Snapshot;
	@XmlElement(name = "versions")
	protected Versions Versions;
	@XmlElement(name = "lastUpdated")
	protected String LastUpdated;
	@XmlElement(name = "snapshotVersions")
	protected SnapshotVersions SnapshotVersions;
}

// SnapshotVersion is The timestamp when this version information was last updated. The timestamp is expressed using UTC in the format yyyyMMddHHmmss.
public class SnapshotVersion {
	@XmlElement(name = "classifier")
	protected String Classifier;
	@XmlElement(name = "extension")
	protected String Extension;
	@XmlElement(name = "value")
	protected String Value;
	@XmlElement(name = "updated")
	protected String Updated;
}

// Snapshot is Whether to use a local copy instead (with filename that includes the base version)
public class Snapshot {
	@XmlElement(name = "timestamp")
	protected String Timestamp;
	@XmlElement(name = "buildNumber")
	protected Integer BuildNumber;
	@XmlElement(name = "localCopy")
	protected Boolean LocalCopy;
}
