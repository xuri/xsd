// Code generated by xgen. DO NOT EDIT.

// DepthValueRecorded is An optional collection of elements relating to recorded sample depth.
export class DepthValueRecorded {
	DepthValue: number;
	DepthValueUnits: MandatoryStringType;
	DepthRelativeTo: MandatoryStringType;
}

// PurgedVolumeRecorded is An optional collection of elements relating to recorded sample volume.
export class PurgedVolumeRecorded {
	PurgedVolume: number;
	PurgedVolumeUnits: MandatoryStringType;
}

// Measurement is This repeating element contains the structure of a Water Quality measurement.
export class Measurement {
	DeterminandName: MandatoryStringType;
	ResultType: MandatoryStringType;
	ResultValue: number;
	ResultUnits: MandatoryStringType;
	Qualifier: MandatoryStringType;
	Comment: string;
}

// Sample is This element contains the structure of a collection of samples.
export class Sample {
	Sampler: string;
	SampleType: MandatoryStringType;
	CustomerSamplePointName: MandatoryStringType;
	SampleDateTime: string;
	PurposeTypeName: MandatoryStringType;
	MaterialName: MandatoryStringType;
	Mechanism: MandatoryStringType;
	CustomersLabSampleRef: MandatoryStringType;
	CustomersLabSampleRefSecondary: string;
	Comment: string;
	LabName: MandatoryStringType;
	AnalysisCompleteDateTime: string;
	DepthValueRecorded: DepthValueRecorded;
	PurgedVolumeRecorded: PurgedVolumeRecorded;
	Measurement: Array<Measurement>;
}

// FileUpload ...
export class FileUpload {
	Source: string;
	Sample: Array<Sample>;
	RegulatedCustomerIdentifier: MandatoryStringType;
	CustomerReference: string;
}

// CustomerReference is Customerâ€™s own reference.
export type CustomerReference = string;
