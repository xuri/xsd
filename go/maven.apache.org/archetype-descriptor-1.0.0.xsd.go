// Code generated by xgen. DO NOT EDIT.

package schema

import (
	"encoding/xml"
)

// ArchetypeDescriptor is 0.0.0+
type ArchetypeDescriptor *ArchetypeDescriptor

// RequiredProperties is List of required properties to generate a project from this archetype.
type RequiredProperties struct {
	XMLName          xml.Name            `xml:"requiredProperties"`
	RequiredProperty []*RequiredProperty `xml:"requiredProperty,omitempty"`
}

// FileSets is File sets definition.
type FileSets struct {
	XMLName xml.Name   `xml:"fileSets"`
	FileSet []*FileSet `xml:"fileSet,omitempty"`
}

// Modules is Modules definition.
type Modules struct {
	XMLName xml.Name            `xml:"modules"`
	Module  []*ModuleDescriptor `xml:"module,omitempty"`
}

// ArchetypeDescriptor is 0.0.0+
type ArchetypeDescriptor struct {
	NameAttr           string              `xml:"name,attr,omitempty"`
	PartialAttr        bool                `xml:"partial,attr,omitempty"`
	RequiredProperties *RequiredProperties `xml:"requiredProperties,omitempty"`
	FileSets           *FileSets           `xml:"fileSets,omitempty"`
	Modules            *Modules            `xml:"modules,omitempty"`
}

// Includes is Inclusion definition "à la" Ant.
type Includes struct {
	XMLName xml.Name `xml:"includes"`
	Include []string `xml:"include,omitempty"`
}

// Excludes is Exclusion definition "à la" Ant.
type Excludes struct {
	XMLName xml.Name `xml:"excludes"`
	Exclude []string `xml:"exclude,omitempty"`
}

// FileSet is The directory where the files will be searched for, which is also the directory where the
//            project's files will be generated.
type FileSet struct {
	FilteredAttr bool      `xml:"filtered,attr,omitempty"`
	PackagedAttr bool      `xml:"packaged,attr,omitempty"`
	EncodingAttr string    `xml:"encoding,attr,omitempty"`
	Directory    *string   `xml:"directory"`
	Includes     *Includes `xml:"includes,omitempty"`
	Excludes     *Excludes `xml:"excludes,omitempty"`
}

// RequiredProperty is Default value of the property.
type RequiredProperty struct {
	KeyAttr      string  `xml:"key,attr,omitempty"`
	DefaultValue *string `xml:"defaultValue"`
}

// ModuleDescriptor is 0.0.0+
type ModuleDescriptor struct {
	IdAttr   string    `xml:"id,attr,omitempty"`
	DirAttr  string    `xml:"dir,attr,omitempty"`
	NameAttr string    `xml:"name,attr,omitempty"`
	FileSets *FileSets `xml:"fileSets,omitempty"`
	Modules  *Modules  `xml:"modules,omitempty"`
}
