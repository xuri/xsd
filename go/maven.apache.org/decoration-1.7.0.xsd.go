// Code generated by xgen. DO NOT EDIT.

package schema

import (
	"encoding/xml"
)

// Project is The <code>&lt;project&gt;</code> element is the root of the site decoration descriptor.
type Project *DecorationModel

// PoweredBy is Powered by logos list.
type PoweredBy struct {
	XMLName xml.Name `xml:"poweredBy"`
	Logo    []*Logo  `xml:"logo,omitempty"`
}

// Custom is Custom configuration for use with customized Velocity templates. Data from this field are
//             accessible in Velocity template from <code>$decoration.custom</code> variable as DOM content.
//             Example: <code>$decoration.custom.getChild( 'customElement' ).getValue()</code>
type Custom struct {
	XMLName xml.Name `xml:"custom"`
}

// DecorationModel is Modify the version published display properties.
type DecorationModel struct {
	NameAttr                 *string      `xml:"name,attr"`
	CombineSelfAttr          *string      `xml:"combine.self,attr"`
	BannerLeft               *Banner      `xml:"bannerLeft,omitempty"`
	BannerRight              *Banner      `xml:"bannerRight,omitempty"`
	GoogleAdSenseClient      *string      `xml:"googleAdSenseClient"`
	GoogleAdSenseSlot        *string      `xml:"googleAdSenseSlot"`
	GoogleAnalyticsAccountId *string      `xml:"googleAnalyticsAccountId"`
	PublishDate              *PublishDate `xml:"publishDate,omitempty"`
	Version                  *Version     `xml:"version,omitempty"`
	PoweredBy                *PoweredBy   `xml:"poweredBy,omitempty"`
	Skin                     *Skin        `xml:"skin,omitempty"`
	Body                     *Body        `xml:"body,omitempty"`
	Custom                   *Custom      `xml:"custom,omitempty"`
}

// Version is Modify display properties for version published.
type Version struct {
	PositionAttr *string `xml:"position,attr"`
}

// Banner is The title for the banner image.
type Banner struct {
	Name   *string `xml:"name"`
	Src    *string `xml:"src"`
	Alt    *string `xml:"alt"`
	Href   *string `xml:"href"`
	Border *string `xml:"border"`
	Width  *string `xml:"width"`
	Height *string `xml:"height"`
	Title  *string `xml:"title"`
}

// Links is A list of links to display in the navigation.
type Links struct {
	XMLName xml.Name    `xml:"links"`
	Item    []*LinkItem `xml:"item,omitempty"`
}

// Breadcrumbs is A list of breadcrumbs to display in the navigation.
type Breadcrumbs struct {
	XMLName xml.Name    `xml:"breadcrumbs"`
	Item    []*LinkItem `xml:"item,omitempty"`
}

// Body is Additional content (like JavaScript) to include in the HEAD block of the generated pages.
type Body struct {
	Head        *string      `xml:"head"`
	Links       *Links       `xml:"links,omitempty"`
	Breadcrumbs *Breadcrumbs `xml:"breadcrumbs,omitempty"`
	Menu        []*Menu      `xml:"menu,omitempty"`
	Footer      *string      `xml:"footer"`
}

// LinkItem is A link in the navigation.
type LinkItem struct {
	NameAttr     *string `xml:"name,attr"`
	HrefAttr     *string `xml:"href,attr"`
	ImgAttr      *string `xml:"img,attr"`
	PositionAttr *string `xml:"position,attr"`
	AltAttr      *string `xml:"alt,attr"`
	BorderAttr   *string `xml:"border,attr"`
	WidthAttr    *string `xml:"width,attr"`
	HeightAttr   *string `xml:"height,attr"`
	TargetAttr   *string `xml:"target,attr"`
	TitleAttr    *string `xml:"title,attr"`
}

// Menu is A list of menu item.
type Menu struct {
	NameAttr         *string     `xml:"name,attr"`
	InheritAttr      *string     `xml:"inherit,attr"`
	InheritAsRefAttr *bool       `xml:"inheritAsRef,attr"`
	RefAttr          *string     `xml:"ref,attr"`
	ImgAttr          *string     `xml:"img,attr"`
	AltAttr          *string     `xml:"alt,attr"`
	PositionAttr     *string     `xml:"position,attr"`
	BorderAttr       *string     `xml:"border,attr"`
	WidthAttr        *string     `xml:"width,attr"`
	HeightAttr       *string     `xml:"height,attr"`
	TitleAttr        *string     `xml:"title,attr"`
	Item             []*MenuItem `xml:"item,omitempty"`
}

// MenuItem is A list of menu item.
type MenuItem struct {
	CollapseAttr *bool       `xml:"collapse,attr"`
	RefAttr      *string     `xml:"ref,attr"`
	NameAttr     *string     `xml:"name,attr"`
	HrefAttr     *string     `xml:"href,attr"`
	ImgAttr      *string     `xml:"img,attr"`
	PositionAttr *string     `xml:"position,attr"`
	AltAttr      *string     `xml:"alt,attr"`
	BorderAttr   *string     `xml:"border,attr"`
	WidthAttr    *string     `xml:"width,attr"`
	HeightAttr   *string     `xml:"height,attr"`
	TargetAttr   *string     `xml:"target,attr"`
	TitleAttr    *string     `xml:"title,attr"`
	Description  *string     `xml:"description"`
	Item         []*MenuItem `xml:"item,omitempty"`
}

// Skin is The skin version.
type Skin struct {
	GroupId    *string `xml:"groupId"`
	ArtifactId *string `xml:"artifactId"`
	Version    *string `xml:"version"`
}

// Logo is Power by logo on the navigation.
type Logo struct {
	NameAttr     *string `xml:"name,attr"`
	HrefAttr     *string `xml:"href,attr"`
	ImgAttr      *string `xml:"img,attr"`
	PositionAttr *string `xml:"position,attr"`
	AltAttr      *string `xml:"alt,attr"`
	BorderAttr   *string `xml:"border,attr"`
	WidthAttr    *string `xml:"width,attr"`
	HeightAttr   *string `xml:"height,attr"`
	TargetAttr   *string `xml:"target,attr"`
	TitleAttr    *string `xml:"title,attr"`
}

// PublishDate is Modify display properties for date published.
type PublishDate struct {
	PositionAttr *string `xml:"position,attr"`
	FormatAttr   *string `xml:"format,attr"`
}
