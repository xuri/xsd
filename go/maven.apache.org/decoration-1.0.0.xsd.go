// Code generated by xgen. DO NOT EDIT.

package schema

import (
	"encoding/xml"
)

// Project is The <code>&lt;project&gt;</code> element is the root of the site decoration descriptor.
//          The following table lists all of the possible child elements.
type Project *DecorationModel

// PoweredBy is Powered by logos list.
type PoweredBy struct {
	XMLName xml.Name `xml:"poweredBy"`
	Logo    []*Logo  `xml:"logo,omitempty"`
}

// Custom is Custom configuration for use with customised Velocity templates.
type Custom struct {
	XMLName xml.Name `xml:"custom"`
}

// DecorationModel is Modify the version published display properties.
type DecorationModel struct {
	NameAttr    string       `xml:"name,attr,omitempty"`
	BannerLeft  *Banner      `xml:"bannerLeft,omitempty"`
	BannerRight *Banner      `xml:"bannerRight,omitempty"`
	PublishDate *PublishDate `xml:"publishDate,omitempty"`
	Version     *Version     `xml:"version,omitempty"`
	PoweredBy   *PoweredBy   `xml:"poweredBy,omitempty"`
	Skin        *Skin        `xml:"skin,omitempty"`
	Body        *Body        `xml:"body,omitempty"`
	Custom      *Custom      `xml:"custom,omitempty"`
}

// Banner is The href of a link to be used for the banner image.
type Banner struct {
	Name *string `xml:"name"`
	Src  *string `xml:"src"`
	Alt  *string `xml:"alt"`
	Href *string `xml:"href"`
}

// Head is Additional content (like Javascript) to include in the HEAD block of the generated pages.
type Head struct {
	XMLName xml.Name `xml:"head"`
}

// Links is A list of links to display in the navigation.
type Links struct {
	XMLName xml.Name    `xml:"links"`
	Item    []*LinkItem `xml:"item,omitempty"`
}

// Breadcrumbs is A list of breadcrumbs to display in the navigation.
type Breadcrumbs struct {
	XMLName xml.Name    `xml:"breadcrumbs"`
	Item    []*LinkItem `xml:"item,omitempty"`
}

// Body is The main content decoration.
type Body struct {
	Head        *Head        `xml:"head,omitempty"`
	Links       *Links       `xml:"links,omitempty"`
	Breadcrumbs *Breadcrumbs `xml:"breadcrumbs,omitempty"`
	Menu        []*Menu      `xml:"menu,omitempty"`
}

// LinkItem is A link in the navigation.
type LinkItem struct {
	NameAttr string `xml:"name,attr,omitempty"`
	HrefAttr string `xml:"href,attr,omitempty"`
}

// Menu is A list of menu item.
type Menu struct {
	NameAttr         string      `xml:"name,attr,omitempty"`
	InheritAttr      string      `xml:"inherit,attr,omitempty"`
	InheritAsRefAttr bool        `xml:"inheritAsRef,attr,omitempty"`
	RefAttr          string      `xml:"ref,attr,omitempty"`
	ImgAttr          string      `xml:"img,attr,omitempty"`
	Item             []*MenuItem `xml:"item,omitempty"`
}

// MenuItem is Menu item.
type MenuItem struct {
	CollapseAttr bool        `xml:"collapse,attr,omitempty"`
	RefAttr      string      `xml:"ref,attr,omitempty"`
	NameAttr     string      `xml:"name,attr,omitempty"`
	HrefAttr     string      `xml:"href,attr,omitempty"`
	Description  *string     `xml:"description"`
	Item         []*MenuItem `xml:"item,omitempty"`
}

// Skin is The skin version.
type Skin struct {
	GroupId    *string `xml:"groupId"`
	ArtifactId *string `xml:"artifactId"`
	Version    *string `xml:"version"`
}

// Version is Modify display properties for version published.
type Version struct {
	PositionAttr string `xml:"position,attr,omitempty"`
}

// PublishDate is Modify display properties for date published.
type PublishDate struct {
	PositionAttr string `xml:"position,attr,omitempty"`
	FormatAttr   string `xml:"format,attr,omitempty"`
}

// Logo is Power by logo on the navigation.
type Logo struct {
	ImgAttr  string `xml:"img,attr,omitempty"`
	NameAttr string `xml:"name,attr,omitempty"`
	HrefAttr string `xml:"href,attr,omitempty"`
}
