// Code generated by xgen. DO NOT EDIT.

package schema

import (
	"encoding/xml"
)

// Root is 'root' can be used to distinguish serialization roots from other
//        elements that are present in a serialization but are not roots of
//        a serialized value graph
type Root bool

// CommonAttributes is Attributes common to all elements that function as accessors or
//         represent independent (multi-ref) values.  The href attribute is
//         intended to be used in a manner like CONREF.  That is, the element
//         content should be empty iff the href attribute appears
type CommonAttributes struct {
	XMLName  xml.Name `xml:"commonAttributes"`
	IdAttr   string   `xml:"id,attr,omitempty"`
	HrefAttr string   `xml:"href,attr,omitempty"`
}

// ArrayCoordinate ...
type ArrayCoordinate string

// ArrayType ...
type ArrayType string

// Offset ...
type Offset string

// ArrayAttributes ...
type ArrayAttributes struct {
	XMLName          xml.Name `xml:"arrayAttributes"`
	TnsArrayTypeAttr string   `xml:"tns:arrayType,attr,omitempty"`
	TnsOffsetAttr    string   `xml:"tns:offset,attr,omitempty"`
}

// Position ...
type Position string

// ArrayMemberAttributes ...
type ArrayMemberAttributes struct {
	XMLName         xml.Name `xml:"arrayMemberAttributes"`
	TnsPositionAttr string   `xml:"tns:position,attr,omitempty"`
}

// Array ...
type Array struct {
}

// Struct ...
type Struct *Struct

// Base64 ...
type Base64 string

// Duration ...
type Duration string

// DateTime ...
type DateTime string

// NOTATION ...
type NOTATION []string

// Time ...
type Time time.Time

// Date ...
type Date string

// GYearMonth ...
type GYearMonth string

// GYear ...
type GYear string

// GMonthDay ...
type GMonthDay string

// GDay ...
type GDay string

// GMonth ...
type GMonth string

// Boolean ...
type Boolean bool

// Base64Binary ...
type Base64Binary string

// HexBinary ...
type HexBinary string

// Float ...
type Float float32

// Double ...
type Double float64

// AnyURI ...
type AnyURI string

// QName ...
type QName xml.Name

// String ...
type String string

// NormalizedString ...
type NormalizedString string

// Token ...
type Token string

// Language ...
type Language string

// Name ...
type Name string

// NMTOKEN ...
type NMTOKEN string

// NCName ...
type NCName string

// NMTOKENS ...
type NMTOKENS []string

// ID ...
type ID string

// IDREF ...
type IDREF string

// ENTITY ...
type ENTITY string

// IDREFS ...
type IDREFS []string

// ENTITIES ...
type ENTITIES []string

// Decimal ...
type Decimal float64

// Integer ...
type Integer int

// NonPositiveInteger ...
type NonPositiveInteger int

// NegativeInteger ...
type NegativeInteger int

// Long ...
type Long int64

// Int ...
type Int int

// Short ...
type Short int16

// Byte ...
type Byte int8

// NonNegativeInteger ...
type NonNegativeInteger int

// UnsignedLong ...
type UnsignedLong uint64

// UnsignedInt ...
type UnsignedInt uint32

// UnsignedShort ...
type UnsignedShort uint16

// UnsignedByte ...
type UnsignedByte uint8

// PositiveInteger ...
type PositiveInteger int

// AnyType ...
type AnyType string
