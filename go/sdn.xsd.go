// Code generated by xgen. DO NOT EDIT.

package schema

import (
	"encoding/xml"
)

// PublshInformation ...
type PublshInformation struct {
	XMLName     xml.Name `xml:"publshInformation"`
	PublishDate string   `xml:"Publish_Date,omitempty"`
	RecordCount int      `xml:"Record_Count,omitempty"`
}

// ProgramList ...
type ProgramList struct {
	XMLName xml.Name `xml:"programList"`
	Program []string `xml:"program,omitempty"`
}

// Id ...
type Id struct {
	XMLName        xml.Name `xml:"id"`
	Uid            int      `xml:"uid"`
	IdType         string   `xml:"idType,omitempty"`
	IdNumber       string   `xml:"idNumber,omitempty"`
	IdCountry      string   `xml:"idCountry,omitempty"`
	IssueDate      string   `xml:"issueDate,omitempty"`
	ExpirationDate string   `xml:"expirationDate,omitempty"`
}

// IdList ...
type IdList struct {
	XMLName xml.Name `xml:"idList"`
	Id      []*Id    `xml:"id,omitempty"`
}

// Aka ...
type Aka struct {
	XMLName   xml.Name `xml:"aka"`
	Uid       int      `xml:"uid"`
	Type      string   `xml:"type"`
	Category  string   `xml:"category"`
	LastName  string   `xml:"lastName,omitempty"`
	FirstName string   `xml:"firstName,omitempty"`
}

// AkaList ...
type AkaList struct {
	XMLName xml.Name `xml:"akaList"`
	Aka     []*Aka   `xml:"aka,omitempty"`
}

// Address ...
type Address struct {
	XMLName         xml.Name `xml:"address"`
	Uid             int      `xml:"uid"`
	Address1        string   `xml:"address1,omitempty"`
	Address2        string   `xml:"address2,omitempty"`
	Address3        string   `xml:"address3,omitempty"`
	City            string   `xml:"city,omitempty"`
	StateOrProvince string   `xml:"stateOrProvince,omitempty"`
	PostalCode      string   `xml:"postalCode,omitempty"`
	Country         string   `xml:"country,omitempty"`
}

// AddressList ...
type AddressList struct {
	XMLName xml.Name   `xml:"addressList"`
	Address []*Address `xml:"address,omitempty"`
}

// Nationality ...
type Nationality struct {
	XMLName   xml.Name `xml:"nationality"`
	Uid       int      `xml:"uid"`
	Country   string   `xml:"country"`
	MainEntry bool     `xml:"mainEntry"`
}

// NationalityList ...
type NationalityList struct {
	XMLName     xml.Name       `xml:"nationalityList"`
	Nationality []*Nationality `xml:"nationality,omitempty"`
}

// Citizenship ...
type Citizenship struct {
	XMLName   xml.Name `xml:"citizenship"`
	Uid       int      `xml:"uid"`
	Country   string   `xml:"country"`
	MainEntry bool     `xml:"mainEntry"`
}

// CitizenshipList ...
type CitizenshipList struct {
	XMLName     xml.Name       `xml:"citizenshipList"`
	Citizenship []*Citizenship `xml:"citizenship,omitempty"`
}

// DateOfBirthItem ...
type DateOfBirthItem struct {
	XMLName     xml.Name `xml:"dateOfBirthItem"`
	Uid         int      `xml:"uid"`
	DateOfBirth string   `xml:"dateOfBirth"`
	MainEntry   bool     `xml:"mainEntry"`
}

// DateOfBirthList ...
type DateOfBirthList struct {
	XMLName         xml.Name           `xml:"dateOfBirthList"`
	DateOfBirthItem []*DateOfBirthItem `xml:"dateOfBirthItem,omitempty"`
}

// PlaceOfBirthItem ...
type PlaceOfBirthItem struct {
	XMLName      xml.Name `xml:"placeOfBirthItem"`
	Uid          int      `xml:"uid"`
	PlaceOfBirth string   `xml:"placeOfBirth"`
	MainEntry    bool     `xml:"mainEntry"`
}

// PlaceOfBirthList ...
type PlaceOfBirthList struct {
	XMLName          xml.Name            `xml:"placeOfBirthList"`
	PlaceOfBirthItem []*PlaceOfBirthItem `xml:"placeOfBirthItem,omitempty"`
}

// VesselInfo ...
type VesselInfo struct {
	XMLName                xml.Name `xml:"vesselInfo"`
	CallSign               string   `xml:"callSign,omitempty"`
	VesselType             string   `xml:"vesselType,omitempty"`
	VesselFlag             string   `xml:"vesselFlag,omitempty"`
	VesselOwner            string   `xml:"vesselOwner,omitempty"`
	Tonnage                int      `xml:"tonnage,omitempty"`
	GrossRegisteredTonnage int      `xml:"grossRegisteredTonnage,omitempty"`
}

// SdnEntry ...
type SdnEntry struct {
	XMLName          xml.Name          `xml:"sdnEntry"`
	Uid              int               `xml:"uid"`
	FirstName        string            `xml:"firstName,omitempty"`
	LastName         string            `xml:"lastName"`
	Title            string            `xml:"title,omitempty"`
	SdnType          string            `xml:"sdnType"`
	Remarks          string            `xml:"remarks,omitempty"`
	ProgramList      *ProgramList      `xml:"programList"`
	IdList           *IdList           `xml:"idList,omitempty"`
	AkaList          *AkaList          `xml:"akaList,omitempty"`
	AddressList      *AddressList      `xml:"addressList,omitempty"`
	NationalityList  *NationalityList  `xml:"nationalityList,omitempty"`
	CitizenshipList  *CitizenshipList  `xml:"citizenshipList,omitempty"`
	DateOfBirthList  *DateOfBirthList  `xml:"dateOfBirthList,omitempty"`
	PlaceOfBirthList *PlaceOfBirthList `xml:"placeOfBirthList,omitempty"`
	VesselInfo       *VesselInfo       `xml:"vesselInfo,omitempty"`
}

// SdnList ...
type SdnList struct {
	XMLName           xml.Name           `xml:"sdnList"`
	PublshInformation *PublshInformation `xml:"publshInformation"`
	SdnEntry          []*SdnEntry        `xml:"sdnEntry"`
}
