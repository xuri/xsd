// Code generated by xgen. DO NOT EDIT.

package schema

import (
	"encoding/xml"
)

// STVectorBaseType ...
type STVectorBaseType string

// STArrayBaseType ...
type STArrayBaseType string

// STCy ...
type STCy string

// STError ...
type STError string

// CTEmpty ...
type CTEmpty struct {
	XMLName xml.Name `xml:"CT_Empty"`
}

// CTNull ...
type CTNull struct {
	XMLName xml.Name `xml:"CT_Null"`
}

// CTVector ...
type CTVector struct {
	XMLName      xml.Name     `xml:"CT_Vector"`
	BaseTypeAttr string       `xml:"baseType,attr"`
	SizeAttr     uint32       `xml:"size,attr"`
	Variant      []*CTVariant `xml:"variant"`
	I1           []int8       `xml:"i1"`
	I2           []int16      `xml:"i2"`
	I4           []int        `xml:"i4"`
	I8           []int64      `xml:"i8"`
	Ui1          []uint8      `xml:"ui1"`
	Ui2          []uint16     `xml:"ui2"`
	Ui4          []uint32     `xml:"ui4"`
	Ui8          []uint64     `xml:"ui8"`
	R4           []float32    `xml:"r4"`
	R8           []float64    `xml:"r8"`
	Lpstr        []string     `xml:"lpstr"`
	Lpwstr       []string     `xml:"lpwstr"`
	Bstr         []string     `xml:"bstr"`
	Date         []string     `xml:"date"`
	Filetime     []string     `xml:"filetime"`
	Bool         []bool       `xml:"bool"`
	Cy           []string     `xml:"cy"`
	Error        []string     `xml:"error"`
	Clsid        []string     `xml:"clsid"`
}

// CTArray ...
type CTArray struct {
	XMLName      xml.Name     `xml:"CT_Array"`
	LBoundsAttr  int          `xml:"lBounds,attr"`
	UBoundsAttr  int          `xml:"uBounds,attr"`
	BaseTypeAttr string       `xml:"baseType,attr"`
	Variant      []*CTVariant `xml:"variant"`
	I1           []int8       `xml:"i1"`
	I2           []int16      `xml:"i2"`
	I4           []int        `xml:"i4"`
	Int          []int        `xml:"int"`
	Ui1          []uint8      `xml:"ui1"`
	Ui2          []uint16     `xml:"ui2"`
	Ui4          []uint32     `xml:"ui4"`
	Uint         []uint32     `xml:"uint"`
	R4           []float32    `xml:"r4"`
	R8           []float64    `xml:"r8"`
	Decimal      []float64    `xml:"decimal"`
	Bstr         []string     `xml:"bstr"`
	Date         []string     `xml:"date"`
	Bool         []bool       `xml:"bool"`
	Error        []string     `xml:"error"`
	Cy           []string     `xml:"cy"`
}

// CTVariant ...
type CTVariant struct {
	XMLName  xml.Name   `xml:"CT_Variant"`
	Variant  *CTVariant `xml:"variant"`
	Vector   *CTVector  `xml:"vector"`
	Array    *CTArray   `xml:"array"`
	Blob     string     `xml:"blob"`
	Oblob    string     `xml:"oblob"`
	Empty    *CTEmpty   `xml:"empty"`
	Null     *CTNull    `xml:"null"`
	I1       int8       `xml:"i1"`
	I2       int16      `xml:"i2"`
	I4       int        `xml:"i4"`
	I8       int64      `xml:"i8"`
	Int      int        `xml:"int"`
	Ui1      uint8      `xml:"ui1"`
	Ui2      uint16     `xml:"ui2"`
	Ui4      uint32     `xml:"ui4"`
	Ui8      uint64     `xml:"ui8"`
	Uint     uint32     `xml:"uint"`
	R4       float32    `xml:"r4"`
	R8       float64    `xml:"r8"`
	Decimal  float64    `xml:"decimal"`
	Lpstr    string     `xml:"lpstr"`
	Lpwstr   string     `xml:"lpwstr"`
	Bstr     string     `xml:"bstr"`
	Date     string     `xml:"date"`
	Filetime string     `xml:"filetime"`
	Bool     bool       `xml:"bool"`
	Cy       string     `xml:"cy"`
	Error    string     `xml:"error"`
	Stream   string     `xml:"stream"`
	Ostream  string     `xml:"ostream"`
	Storage  string     `xml:"storage"`
	Ostorage string     `xml:"ostorage"`
	Vstream  *CTVstream `xml:"vstream"`
	Clsid    string     `xml:"clsid"`
}

// CTVstream ...
type CTVstream struct {
	XMLName     xml.Name `xml:"CT_Vstream"`
	VersionAttr string   `xml:"version,attr,omitempty"`
	Value       string   `xml:",chardata"`
}

// Variant ...
type Variant *CTVariant

// Vector ...
type Vector *CTVector

// Array ...
type Array *CTArray

// Blob ...
type Blob string

// Oblob ...
type Oblob string

// Empty ...
type Empty *CTEmpty

// Null ...
type Null *CTNull

// I1 ...
type I1 int8

// I2 ...
type I2 int16

// I4 ...
type I4 int

// I8 ...
type I8 int64

// Int ...
type Int int

// Ui1 ...
type Ui1 uint8

// Ui2 ...
type Ui2 uint16

// Ui4 ...
type Ui4 uint32

// Ui8 ...
type Ui8 uint64

// Uint ...
type Uint uint32

// R4 ...
type R4 float32

// R8 ...
type R8 float64

// Decimal ...
type Decimal float64

// Lpstr ...
type Lpstr string

// Lpwstr ...
type Lpwstr string

// Bstr ...
type Bstr string

// Date ...
type Date string

// Filetime ...
type Filetime string

// Bool ...
type Bool bool

// Cy ...
type Cy string

// Error ...
type Error string

// Stream ...
type Stream string

// Ostream ...
type Ostream string

// Storage ...
type Storage string

// Ostorage ...
type Ostorage string

// Vstream ...
type Vstream *CTVstream

// Clsid ...
type Clsid string
