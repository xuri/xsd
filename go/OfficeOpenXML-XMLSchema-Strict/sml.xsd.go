// Code generated by xgen. DO NOT EDIT.

package schema

import (
	"encoding/xml"
)

// CTAutoFilter ...
type CTAutoFilter struct {
	XMLName      xml.Name          `xml:"CT_AutoFilter"`
	RefAttr      string            `xml:"ref,attr,omitempty"`
	FilterColumn []*CTFilterColumn `xml:"filterColumn"`
	SortState    *CTSortState      `xml:"sortState"`
	ExtLst       *CTExtensionList  `xml:"extLst"`
}

// CTFilterColumn ...
type CTFilterColumn struct {
	XMLName          xml.Name         `xml:"CT_FilterColumn"`
	ColIdAttr        uint32           `xml:"colId,attr"`
	HiddenButtonAttr bool             `xml:"hiddenButton,attr,omitempty"`
	ShowButtonAttr   bool             `xml:"showButton,attr,omitempty"`
	Filters          *CTFilters       `xml:"filters"`
	Top10            *CTTop10         `xml:"top10"`
	CustomFilters    *CTCustomFilters `xml:"customFilters"`
	DynamicFilter    *CTDynamicFilter `xml:"dynamicFilter"`
	ColorFilter      *CTColorFilter   `xml:"colorFilter"`
	IconFilter       *CTIconFilter    `xml:"iconFilter"`
	ExtLst           *CTExtensionList `xml:"extLst"`
}

// CTFilters ...
type CTFilters struct {
	XMLName          xml.Name           `xml:"CT_Filters"`
	BlankAttr        bool               `xml:"blank,attr,omitempty"`
	CalendarTypeAttr string             `xml:"calendarType,attr,omitempty"`
	Filter           []*CTFilter        `xml:"filter"`
	DateGroupItem    []*CTDateGroupItem `xml:"dateGroupItem"`
}

// CTFilter ...
type CTFilter struct {
	XMLName xml.Name `xml:"CT_Filter"`
	ValAttr string   `xml:"val,attr,omitempty"`
}

// CTCustomFilters ...
type CTCustomFilters struct {
	XMLName      xml.Name          `xml:"CT_CustomFilters"`
	AndAttr      bool              `xml:"and,attr,omitempty"`
	CustomFilter []*CTCustomFilter `xml:"customFilter"`
}

// CTCustomFilter ...
type CTCustomFilter struct {
	XMLName      xml.Name `xml:"CT_CustomFilter"`
	OperatorAttr string   `xml:"operator,attr,omitempty"`
	ValAttr      string   `xml:"val,attr,omitempty"`
}

// CTTop10 ...
type CTTop10 struct {
	XMLName       xml.Name `xml:"CT_Top10"`
	TopAttr       bool     `xml:"top,attr,omitempty"`
	PercentAttr   bool     `xml:"percent,attr,omitempty"`
	ValAttr       float64  `xml:"val,attr"`
	FilterValAttr float64  `xml:"filterVal,attr,omitempty"`
}

// CTColorFilter ...
type CTColorFilter struct {
	XMLName       xml.Name `xml:"CT_ColorFilter"`
	DxfIdAttr     uint32   `xml:"dxfId,attr,omitempty"`
	CellColorAttr bool     `xml:"cellColor,attr,omitempty"`
}

// CTIconFilter ...
type CTIconFilter struct {
	XMLName     xml.Name `xml:"CT_IconFilter"`
	IconSetAttr string   `xml:"iconSet,attr"`
	IconIdAttr  uint32   `xml:"iconId,attr,omitempty"`
}

// STFilterOperator ...
type STFilterOperator string

// CTDynamicFilter ...
type CTDynamicFilter struct {
	XMLName       xml.Name `xml:"CT_DynamicFilter"`
	TypeAttr      string   `xml:"type,attr"`
	ValAttr       float64  `xml:"val,attr,omitempty"`
	ValIsoAttr    string   `xml:"valIso,attr,omitempty"`
	MaxValIsoAttr string   `xml:"maxValIso,attr,omitempty"`
}

// STDynamicFilterType ...
type STDynamicFilterType string

// STIconSetType ...
type STIconSetType string

// CTSortState ...
type CTSortState struct {
	XMLName           xml.Name           `xml:"CT_SortState"`
	ColumnSortAttr    bool               `xml:"columnSort,attr,omitempty"`
	CaseSensitiveAttr bool               `xml:"caseSensitive,attr,omitempty"`
	SortMethodAttr    string             `xml:"sortMethod,attr,omitempty"`
	RefAttr           string             `xml:"ref,attr"`
	SortCondition     []*CTSortCondition `xml:"sortCondition"`
	ExtLst            *CTExtensionList   `xml:"extLst"`
}

// CTSortCondition ...
type CTSortCondition struct {
	XMLName        xml.Name `xml:"CT_SortCondition"`
	DescendingAttr bool     `xml:"descending,attr,omitempty"`
	SortByAttr     string   `xml:"sortBy,attr,omitempty"`
	RefAttr        string   `xml:"ref,attr"`
	CustomListAttr string   `xml:"customList,attr,omitempty"`
	DxfIdAttr      uint32   `xml:"dxfId,attr,omitempty"`
	IconSetAttr    string   `xml:"iconSet,attr,omitempty"`
	IconIdAttr     uint32   `xml:"iconId,attr,omitempty"`
}

// STSortBy ...
type STSortBy string

// STSortMethod ...
type STSortMethod string

// CTDateGroupItem ...
type CTDateGroupItem struct {
	XMLName              xml.Name `xml:"CT_DateGroupItem"`
	YearAttr             uint16   `xml:"year,attr"`
	MonthAttr            uint16   `xml:"month,attr,omitempty"`
	DayAttr              uint16   `xml:"day,attr,omitempty"`
	HourAttr             uint16   `xml:"hour,attr,omitempty"`
	MinuteAttr           uint16   `xml:"minute,attr,omitempty"`
	SecondAttr           uint16   `xml:"second,attr,omitempty"`
	DateTimeGroupingAttr string   `xml:"dateTimeGrouping,attr"`
}

// STDateTimeGrouping ...
type STDateTimeGrouping string

// STCellRef ...
type STCellRef string

// STRef ...
type STRef string

// STRefA ...
type STRefA string

// STSqref ...
type STSqref []string

// STFormula ...
type STFormula string

// STUnsignedIntHex ...
type STUnsignedIntHex string

// CTXStringElement ...
type CTXStringElement struct {
	XMLName xml.Name `xml:"CT_XStringElement"`
	VAttr   string   `xml:"v,attr"`
}

// CTExtension ...
type CTExtension struct {
	XMLName xml.Name `xml:"CT_Extension"`
	UriAttr string   `xml:"uri,attr,omitempty"`
}

// CTObjectAnchor ...
type CTObjectAnchor struct {
	XMLName           xml.Name  `xml:"CT_ObjectAnchor"`
	MoveWithCellsAttr bool      `xml:"moveWithCells,attr,omitempty"`
	SizeWithCellsAttr bool      `xml:"sizeWithCells,attr,omitempty"`
	XdrFrom           *CTMarker `xml:"xdr:from"`
	XdrTo             *CTMarker `xml:"xdr:to"`
}

// EGExtensionList ...
type EGExtensionList struct {
	XMLName xml.Name `xml:"EG_ExtensionList"`
	Ext     []*CTExtension
}

// CTExtensionList ...
type CTExtensionList struct {
	XMLName         xml.Name `xml:"CT_ExtensionList"`
	EGExtensionList *EGExtensionList
}

// CalcChain ...
type CalcChain *CTCalcChain

// CTCalcChain ...
type CTCalcChain struct {
	XMLName xml.Name         `xml:"CT_CalcChain"`
	C       []*CTCalcCell    `xml:"c"`
	ExtLst  *CTExtensionList `xml:"extLst"`
}

// CTCalcCell ...
type CTCalcCell struct {
	XMLName xml.Name `xml:"CT_CalcCell"`
	RAttr   string   `xml:"r,attr"`
	IAttr   int      `xml:"i,attr,omitempty"`
	SAttr   bool     `xml:"s,attr,omitempty"`
	LAttr   bool     `xml:"l,attr,omitempty"`
	TAttr   bool     `xml:"t,attr,omitempty"`
	AAttr   bool     `xml:"a,attr,omitempty"`
}

// Comments ...
type Comments *CTComments

// CTComments ...
type CTComments struct {
	XMLName     xml.Name         `xml:"CT_Comments"`
	Authors     *CTAuthors       `xml:"authors"`
	CommentList *CTCommentList   `xml:"commentList"`
	ExtLst      *CTExtensionList `xml:"extLst"`
}

// CTAuthors ...
type CTAuthors struct {
	XMLName xml.Name `xml:"CT_Authors"`
	Author  []string `xml:"author"`
}

// CTCommentList ...
type CTCommentList struct {
	XMLName xml.Name     `xml:"CT_CommentList"`
	Comment []*CTComment `xml:"comment"`
}

// CTComment ...
type CTComment struct {
	XMLName      xml.Name     `xml:"CT_Comment"`
	RefAttr      string       `xml:"ref,attr"`
	AuthorIdAttr uint32       `xml:"authorId,attr"`
	GuidAttr     string       `xml:"guid,attr,omitempty"`
	ShapeIdAttr  uint32       `xml:"shapeId,attr,omitempty"`
	Text         *CTRst       `xml:"text"`
	CommentPr    *CTCommentPr `xml:"commentPr"`
}

// CTCommentPr ...
type CTCommentPr struct {
	XMLName         xml.Name        `xml:"CT_CommentPr"`
	LockedAttr      bool            `xml:"locked,attr,omitempty"`
	DefaultSizeAttr bool            `xml:"defaultSize,attr,omitempty"`
	PrintAttr       bool            `xml:"print,attr,omitempty"`
	DisabledAttr    bool            `xml:"disabled,attr,omitempty"`
	AutoFillAttr    bool            `xml:"autoFill,attr,omitempty"`
	AutoLineAttr    bool            `xml:"autoLine,attr,omitempty"`
	AltTextAttr     string          `xml:"altText,attr,omitempty"`
	TextHAlignAttr  string          `xml:"textHAlign,attr,omitempty"`
	TextVAlignAttr  string          `xml:"textVAlign,attr,omitempty"`
	LockTextAttr    bool            `xml:"lockText,attr,omitempty"`
	JustLastXAttr   bool            `xml:"justLastX,attr,omitempty"`
	AutoScaleAttr   bool            `xml:"autoScale,attr,omitempty"`
	Anchor          *CTObjectAnchor `xml:"anchor"`
}

// STTextHAlign ...
type STTextHAlign string

// STTextVAlign ...
type STTextVAlign string

// MapInfo ...
type MapInfo *CTMapInfo

// CTMapInfo ...
type CTMapInfo struct {
	XMLName                 xml.Name    `xml:"CT_MapInfo"`
	SelectionNamespacesAttr string      `xml:"SelectionNamespaces,attr"`
	Schema                  []*CTSchema `xml:"Schema"`
	Map                     []*CTMap    `xml:"Map"`
}

// CTSchema ...
type CTSchema struct {
	XMLName            xml.Name `xml:"CT_Schema"`
	IDAttr             string   `xml:"ID,attr"`
	SchemaRefAttr      string   `xml:"SchemaRef,attr,omitempty"`
	NamespaceAttr      string   `xml:"Namespace,attr,omitempty"`
	SchemaLanguageAttr string   `xml:"SchemaLanguage,attr,omitempty"`
}

// CTMap ...
type CTMap struct {
	XMLName                              xml.Name       `xml:"CT_Map"`
	IDAttr                               uint32         `xml:"ID,attr"`
	NameAttr                             string         `xml:"Name,attr"`
	RootElementAttr                      string         `xml:"RootElement,attr"`
	SchemaIDAttr                         string         `xml:"SchemaID,attr"`
	ShowImportExportValidationErrorsAttr bool           `xml:"ShowImportExportValidationErrors,attr"`
	AutoFitAttr                          bool           `xml:"AutoFit,attr"`
	AppendAttr                           bool           `xml:"Append,attr"`
	PreserveSortAFLayoutAttr             bool           `xml:"PreserveSortAFLayout,attr"`
	PreserveFormatAttr                   bool           `xml:"PreserveFormat,attr"`
	DataBinding                          *CTDataBinding `xml:"DataBinding"`
}

// CTDataBinding ...
type CTDataBinding struct {
	XMLName                 xml.Name `xml:"CT_DataBinding"`
	DataBindingNameAttr     string   `xml:"DataBindingName,attr,omitempty"`
	FileBindingAttr         bool     `xml:"FileBinding,attr,omitempty"`
	ConnectionIDAttr        uint32   `xml:"ConnectionID,attr,omitempty"`
	FileBindingNameAttr     string   `xml:"FileBindingName,attr,omitempty"`
	DataBindingLoadModeAttr uint32   `xml:"DataBindingLoadMode,attr"`
}

// Connections ...
type Connections *CTConnections

// CTConnections ...
type CTConnections struct {
	XMLName    xml.Name        `xml:"CT_Connections"`
	Connection []*CTConnection `xml:"connection"`
}

// CTConnection ...
type CTConnection struct {
	XMLName                   xml.Name         `xml:"CT_Connection"`
	IdAttr                    uint32           `xml:"id,attr"`
	SourceFileAttr            string           `xml:"sourceFile,attr,omitempty"`
	OdcFileAttr               string           `xml:"odcFile,attr,omitempty"`
	KeepAliveAttr             bool             `xml:"keepAlive,attr,omitempty"`
	IntervalAttr              uint32           `xml:"interval,attr,omitempty"`
	NameAttr                  string           `xml:"name,attr,omitempty"`
	DescriptionAttr           string           `xml:"description,attr,omitempty"`
	TypeAttr                  uint32           `xml:"type,attr,omitempty"`
	ReconnectionMethodAttr    uint32           `xml:"reconnectionMethod,attr,omitempty"`
	RefreshedVersionAttr      uint8            `xml:"refreshedVersion,attr"`
	MinRefreshableVersionAttr uint8            `xml:"minRefreshableVersion,attr,omitempty"`
	SavePasswordAttr          bool             `xml:"savePassword,attr,omitempty"`
	NewAttr                   bool             `xml:"new,attr,omitempty"`
	DeletedAttr               bool             `xml:"deleted,attr,omitempty"`
	OnlyUseConnectionFileAttr bool             `xml:"onlyUseConnectionFile,attr,omitempty"`
	BackgroundAttr            bool             `xml:"background,attr,omitempty"`
	RefreshOnLoadAttr         bool             `xml:"refreshOnLoad,attr,omitempty"`
	SaveDataAttr              bool             `xml:"saveData,attr,omitempty"`
	CredentialsAttr           string           `xml:"credentials,attr,omitempty"`
	SingleSignOnIdAttr        string           `xml:"singleSignOnId,attr,omitempty"`
	DbPr                      *CTDbPr          `xml:"dbPr"`
	OlapPr                    *CTOlapPr        `xml:"olapPr"`
	WebPr                     *CTWebPr         `xml:"webPr"`
	TextPr                    *CTTextPr        `xml:"textPr"`
	Parameters                *CTParameters    `xml:"parameters"`
	ExtLst                    *CTExtensionList `xml:"extLst"`
}

// STCredMethod ...
type STCredMethod string

// CTDbPr ...
type CTDbPr struct {
	XMLName           xml.Name `xml:"CT_DbPr"`
	ConnectionAttr    string   `xml:"connection,attr"`
	CommandAttr       string   `xml:"command,attr,omitempty"`
	ServerCommandAttr string   `xml:"serverCommand,attr,omitempty"`
	CommandTypeAttr   uint32   `xml:"commandType,attr,omitempty"`
}

// CTOlapPr ...
type CTOlapPr struct {
	XMLName                xml.Name `xml:"CT_OlapPr"`
	LocalAttr              bool     `xml:"local,attr,omitempty"`
	LocalConnectionAttr    string   `xml:"localConnection,attr,omitempty"`
	LocalRefreshAttr       bool     `xml:"localRefresh,attr,omitempty"`
	SendLocaleAttr         bool     `xml:"sendLocale,attr,omitempty"`
	RowDrillCountAttr      uint32   `xml:"rowDrillCount,attr,omitempty"`
	ServerFillAttr         bool     `xml:"serverFill,attr,omitempty"`
	ServerNumberFormatAttr bool     `xml:"serverNumberFormat,attr,omitempty"`
	ServerFontAttr         bool     `xml:"serverFont,attr,omitempty"`
	ServerFontColorAttr    bool     `xml:"serverFontColor,attr,omitempty"`
}

// CTWebPr ...
type CTWebPr struct {
	XMLName         xml.Name  `xml:"CT_WebPr"`
	XmlAttr         bool      `xml:"xml,attr,omitempty"`
	SourceDataAttr  bool      `xml:"sourceData,attr,omitempty"`
	ParsePreAttr    bool      `xml:"parsePre,attr,omitempty"`
	ConsecutiveAttr bool      `xml:"consecutive,attr,omitempty"`
	FirstRowAttr    bool      `xml:"firstRow,attr,omitempty"`
	Xl97Attr        bool      `xml:"xl97,attr,omitempty"`
	TextDatesAttr   bool      `xml:"textDates,attr,omitempty"`
	Xl2000Attr      bool      `xml:"xl2000,attr,omitempty"`
	UrlAttr         string    `xml:"url,attr,omitempty"`
	PostAttr        string    `xml:"post,attr,omitempty"`
	HtmlTablesAttr  bool      `xml:"htmlTables,attr,omitempty"`
	HtmlFormatAttr  string    `xml:"htmlFormat,attr,omitempty"`
	EditPageAttr    string    `xml:"editPage,attr,omitempty"`
	Tables          *CTTables `xml:"tables"`
}

// STHtmlFmt ...
type STHtmlFmt string

// CTParameters ...
type CTParameters struct {
	XMLName   xml.Name       `xml:"CT_Parameters"`
	CountAttr uint32         `xml:"count,attr,omitempty"`
	Parameter []*CTParameter `xml:"parameter"`
}

// CTParameter ...
type CTParameter struct {
	XMLName             xml.Name `xml:"CT_Parameter"`
	NameAttr            string   `xml:"name,attr,omitempty"`
	SqlTypeAttr         int      `xml:"sqlType,attr,omitempty"`
	ParameterTypeAttr   string   `xml:"parameterType,attr,omitempty"`
	RefreshOnChangeAttr bool     `xml:"refreshOnChange,attr,omitempty"`
	PromptAttr          string   `xml:"prompt,attr,omitempty"`
	BooleanAttr         bool     `xml:"boolean,attr,omitempty"`
	DoubleAttr          float64  `xml:"double,attr,omitempty"`
	IntegerAttr         int      `xml:"integer,attr,omitempty"`
	StringAttr          string   `xml:"string,attr,omitempty"`
	CellAttr            string   `xml:"cell,attr,omitempty"`
}

// STParameterType ...
type STParameterType string

// CTTables ...
type CTTables struct {
	XMLName   xml.Name            `xml:"CT_Tables"`
	CountAttr uint32              `xml:"count,attr,omitempty"`
	M         []*CTTableMissing   `xml:"m"`
	S         []*CTXStringElement `xml:"s"`
	X         []*CTIndex          `xml:"x"`
}

// CTTableMissing ...
type CTTableMissing struct {
	XMLName xml.Name `xml:"CT_TableMissing"`
}

// CTTextPr ...
type CTTextPr struct {
	XMLName          xml.Name      `xml:"CT_TextPr"`
	PromptAttr       bool          `xml:"prompt,attr,omitempty"`
	FileTypeAttr     string        `xml:"fileType,attr,omitempty"`
	CharacterSetAttr string        `xml:"characterSet,attr,omitempty"`
	FirstRowAttr     uint32        `xml:"firstRow,attr,omitempty"`
	SourceFileAttr   string        `xml:"sourceFile,attr,omitempty"`
	DelimitedAttr    bool          `xml:"delimited,attr,omitempty"`
	DecimalAttr      string        `xml:"decimal,attr,omitempty"`
	ThousandsAttr    string        `xml:"thousands,attr,omitempty"`
	TabAttr          bool          `xml:"tab,attr,omitempty"`
	SpaceAttr        bool          `xml:"space,attr,omitempty"`
	CommaAttr        bool          `xml:"comma,attr,omitempty"`
	SemicolonAttr    bool          `xml:"semicolon,attr,omitempty"`
	ConsecutiveAttr  bool          `xml:"consecutive,attr,omitempty"`
	QualifierAttr    string        `xml:"qualifier,attr,omitempty"`
	DelimiterAttr    string        `xml:"delimiter,attr,omitempty"`
	TextFields       *CTTextFields `xml:"textFields"`
}

// STFileType ...
type STFileType string

// STQualifier ...
type STQualifier string

// CTTextFields ...
type CTTextFields struct {
	XMLName   xml.Name       `xml:"CT_TextFields"`
	CountAttr uint32         `xml:"count,attr,omitempty"`
	TextField []*CTTextField `xml:"textField"`
}

// CTTextField ...
type CTTextField struct {
	XMLName      xml.Name `xml:"CT_TextField"`
	TypeAttr     string   `xml:"type,attr,omitempty"`
	PositionAttr uint32   `xml:"position,attr,omitempty"`
}

// STExternalConnectionType ...
type STExternalConnectionType string

// PivotCacheDefinition ...
type PivotCacheDefinition *CTPivotCacheDefinition

// PivotCacheRecords ...
type PivotCacheRecords *CTPivotCacheRecords

// PivotTableDefinition ...
type PivotTableDefinition *CTpivotTableDefinition

// CTPivotCacheDefinition ...
type CTPivotCacheDefinition struct {
	XMLName                   xml.Name                `xml:"CT_PivotCacheDefinition"`
	RIdAttr                   string                  `xml:"r:id,attr,omitempty"`
	InvalidAttr               bool                    `xml:"invalid,attr,omitempty"`
	SaveDataAttr              bool                    `xml:"saveData,attr,omitempty"`
	RefreshOnLoadAttr         bool                    `xml:"refreshOnLoad,attr,omitempty"`
	OptimizeMemoryAttr        bool                    `xml:"optimizeMemory,attr,omitempty"`
	EnableRefreshAttr         bool                    `xml:"enableRefresh,attr,omitempty"`
	RefreshedByAttr           string                  `xml:"refreshedBy,attr,omitempty"`
	RefreshedDateIsoAttr      string                  `xml:"refreshedDateIso,attr,omitempty"`
	BackgroundQueryAttr       bool                    `xml:"backgroundQuery,attr,omitempty"`
	MissingItemsLimitAttr     uint32                  `xml:"missingItemsLimit,attr,omitempty"`
	CreatedVersionAttr        uint8                   `xml:"createdVersion,attr,omitempty"`
	RefreshedVersionAttr      uint8                   `xml:"refreshedVersion,attr,omitempty"`
	MinRefreshableVersionAttr uint8                   `xml:"minRefreshableVersion,attr,omitempty"`
	RecordCountAttr           uint32                  `xml:"recordCount,attr,omitempty"`
	UpgradeOnRefreshAttr      bool                    `xml:"upgradeOnRefresh,attr,omitempty"`
	TupleCacheAttr            bool                    `xml:"tupleCache,attr,omitempty"`
	SupportSubqueryAttr       bool                    `xml:"supportSubquery,attr,omitempty"`
	SupportAdvancedDrillAttr  bool                    `xml:"supportAdvancedDrill,attr,omitempty"`
	CacheSource               *CTCacheSource          `xml:"cacheSource"`
	CacheFields               *CTCacheFields          `xml:"cacheFields"`
	CacheHierarchies          *CTCacheHierarchies     `xml:"cacheHierarchies"`
	Kpis                      *CTPCDKPIs              `xml:"kpis"`
	TupleCache                *CTTupleCache           `xml:"tupleCache"`
	CalculatedItems           *CTCalculatedItems      `xml:"calculatedItems"`
	CalculatedMembers         *CTCalculatedMembers    `xml:"calculatedMembers"`
	Dimensions                *CTDimensions           `xml:"dimensions"`
	MeasureGroups             *CTMeasureGroups        `xml:"measureGroups"`
	Maps                      *CTMeasureDimensionMaps `xml:"maps"`
	ExtLst                    *CTExtensionList        `xml:"extLst"`
}

// CTCacheFields ...
type CTCacheFields struct {
	XMLName    xml.Name        `xml:"CT_CacheFields"`
	CountAttr  uint32          `xml:"count,attr,omitempty"`
	CacheField []*CTCacheField `xml:"cacheField"`
}

// CTCacheField ...
type CTCacheField struct {
	XMLName                 xml.Name         `xml:"CT_CacheField"`
	NameAttr                string           `xml:"name,attr"`
	CaptionAttr             string           `xml:"caption,attr,omitempty"`
	PropertyNameAttr        string           `xml:"propertyName,attr,omitempty"`
	ServerFieldAttr         bool             `xml:"serverField,attr,omitempty"`
	UniqueListAttr          bool             `xml:"uniqueList,attr,omitempty"`
	NumFmtIdAttr            uint32           `xml:"numFmtId,attr,omitempty"`
	FormulaAttr             string           `xml:"formula,attr,omitempty"`
	SqlTypeAttr             int              `xml:"sqlType,attr,omitempty"`
	HierarchyAttr           int              `xml:"hierarchy,attr,omitempty"`
	LevelAttr               uint32           `xml:"level,attr,omitempty"`
	DatabaseFieldAttr       bool             `xml:"databaseField,attr,omitempty"`
	MappingCountAttr        uint32           `xml:"mappingCount,attr,omitempty"`
	MemberPropertyFieldAttr bool             `xml:"memberPropertyField,attr,omitempty"`
	SharedItems             *CTSharedItems   `xml:"sharedItems"`
	FieldGroup              *CTFieldGroup    `xml:"fieldGroup"`
	MpMap                   []*CTX           `xml:"mpMap"`
	ExtLst                  *CTExtensionList `xml:"extLst"`
}

// CTCacheSource ...
type CTCacheSource struct {
	XMLName          xml.Name           `xml:"CT_CacheSource"`
	TypeAttr         string             `xml:"type,attr"`
	ConnectionIdAttr uint32             `xml:"connectionId,attr,omitempty"`
	WorksheetSource  *CTWorksheetSource `xml:"worksheetSource"`
	Consolidation    *CTConsolidation   `xml:"consolidation"`
	ExtLst           *CTExtensionList   `xml:"extLst"`
}

// STSourceType ...
type STSourceType string

// CTWorksheetSource ...
type CTWorksheetSource struct {
	XMLName   xml.Name `xml:"CT_WorksheetSource"`
	RefAttr   string   `xml:"ref,attr,omitempty"`
	NameAttr  string   `xml:"name,attr,omitempty"`
	SheetAttr string   `xml:"sheet,attr,omitempty"`
	RIdAttr   string   `xml:"r:id,attr,omitempty"`
}

// CTConsolidation ...
type CTConsolidation struct {
	XMLName      xml.Name     `xml:"CT_Consolidation"`
	AutoPageAttr bool         `xml:"autoPage,attr,omitempty"`
	Pages        *CTPages     `xml:"pages"`
	RangeSets    *CTRangeSets `xml:"rangeSets"`
}

// CTPages ...
type CTPages struct {
	XMLName   xml.Name       `xml:"CT_Pages"`
	CountAttr uint32         `xml:"count,attr,omitempty"`
	Page      []*CTPCDSCPage `xml:"page"`
}

// CTPCDSCPage ...
type CTPCDSCPage struct {
	XMLName   xml.Name      `xml:"CT_PCDSCPage"`
	CountAttr uint32        `xml:"count,attr,omitempty"`
	PageItem  []*CTPageItem `xml:"pageItem"`
}

// CTPageItem ...
type CTPageItem struct {
	XMLName  xml.Name `xml:"CT_PageItem"`
	NameAttr string   `xml:"name,attr"`
}

// CTRangeSets ...
type CTRangeSets struct {
	XMLName   xml.Name      `xml:"CT_RangeSets"`
	CountAttr uint32        `xml:"count,attr,omitempty"`
	RangeSet  []*CTRangeSet `xml:"rangeSet"`
}

// CTRangeSet ...
type CTRangeSet struct {
	XMLName   xml.Name `xml:"CT_RangeSet"`
	I1Attr    uint32   `xml:"i1,attr,omitempty"`
	I2Attr    uint32   `xml:"i2,attr,omitempty"`
	I3Attr    uint32   `xml:"i3,attr,omitempty"`
	I4Attr    uint32   `xml:"i4,attr,omitempty"`
	RefAttr   string   `xml:"ref,attr,omitempty"`
	NameAttr  string   `xml:"name,attr,omitempty"`
	SheetAttr string   `xml:"sheet,attr,omitempty"`
	RIdAttr   string   `xml:"r:id,attr,omitempty"`
}

// CTSharedItems ...
type CTSharedItems struct {
	XMLName                    xml.Name      `xml:"CT_SharedItems"`
	ContainsSemiMixedTypesAttr bool          `xml:"containsSemiMixedTypes,attr,omitempty"`
	ContainsNonDateAttr        bool          `xml:"containsNonDate,attr,omitempty"`
	ContainsDateAttr           bool          `xml:"containsDate,attr,omitempty"`
	ContainsStringAttr         bool          `xml:"containsString,attr,omitempty"`
	ContainsBlankAttr          bool          `xml:"containsBlank,attr,omitempty"`
	ContainsMixedTypesAttr     bool          `xml:"containsMixedTypes,attr,omitempty"`
	ContainsNumberAttr         bool          `xml:"containsNumber,attr,omitempty"`
	ContainsIntegerAttr        bool          `xml:"containsInteger,attr,omitempty"`
	MinValueAttr               float64       `xml:"minValue,attr,omitempty"`
	MaxValueAttr               float64       `xml:"maxValue,attr,omitempty"`
	MinDateAttr                string        `xml:"minDate,attr,omitempty"`
	MaxDateAttr                string        `xml:"maxDate,attr,omitempty"`
	CountAttr                  uint32        `xml:"count,attr,omitempty"`
	LongTextAttr               bool          `xml:"longText,attr,omitempty"`
	M                          []*CTMissing  `xml:"m"`
	N                          []*CTNumber   `xml:"n"`
	B                          []*CTBoolean  `xml:"b"`
	E                          []*CTError    `xml:"e"`
	S                          []*CTString   `xml:"s"`
	D                          []*CTDateTime `xml:"d"`
}

// CTMissing ...
type CTMissing struct {
	XMLName xml.Name    `xml:"CT_Missing"`
	UAttr   bool        `xml:"u,attr,omitempty"`
	FAttr   bool        `xml:"f,attr,omitempty"`
	CAttr   string      `xml:"c,attr,omitempty"`
	CpAttr  uint32      `xml:"cp,attr,omitempty"`
	InAttr  uint32      `xml:"in,attr,omitempty"`
	BcAttr  string      `xml:"bc,attr,omitempty"`
	FcAttr  string      `xml:"fc,attr,omitempty"`
	IAttr   bool        `xml:"i,attr,omitempty"`
	UnAttr  bool        `xml:"un,attr,omitempty"`
	StAttr  bool        `xml:"st,attr,omitempty"`
	BAttr   bool        `xml:"b,attr,omitempty"`
	Tpls    []*CTTuples `xml:"tpls"`
	X       []*CTX      `xml:"x"`
}

// CTNumber ...
type CTNumber struct {
	XMLName xml.Name    `xml:"CT_Number"`
	VAttr   float64     `xml:"v,attr"`
	UAttr   bool        `xml:"u,attr,omitempty"`
	FAttr   bool        `xml:"f,attr,omitempty"`
	CAttr   string      `xml:"c,attr,omitempty"`
	CpAttr  uint32      `xml:"cp,attr,omitempty"`
	InAttr  uint32      `xml:"in,attr,omitempty"`
	BcAttr  string      `xml:"bc,attr,omitempty"`
	FcAttr  string      `xml:"fc,attr,omitempty"`
	IAttr   bool        `xml:"i,attr,omitempty"`
	UnAttr  bool        `xml:"un,attr,omitempty"`
	StAttr  bool        `xml:"st,attr,omitempty"`
	BAttr   bool        `xml:"b,attr,omitempty"`
	Tpls    []*CTTuples `xml:"tpls"`
	X       []*CTX      `xml:"x"`
}

// CTBoolean ...
type CTBoolean struct {
	XMLName xml.Name `xml:"CT_Boolean"`
	VAttr   bool     `xml:"v,attr"`
	UAttr   bool     `xml:"u,attr,omitempty"`
	FAttr   bool     `xml:"f,attr,omitempty"`
	CAttr   string   `xml:"c,attr,omitempty"`
	CpAttr  uint32   `xml:"cp,attr,omitempty"`
	X       []*CTX   `xml:"x"`
}

// CTError ...
type CTError struct {
	XMLName xml.Name  `xml:"CT_Error"`
	VAttr   string    `xml:"v,attr"`
	UAttr   bool      `xml:"u,attr,omitempty"`
	FAttr   bool      `xml:"f,attr,omitempty"`
	CAttr   string    `xml:"c,attr,omitempty"`
	CpAttr  uint32    `xml:"cp,attr,omitempty"`
	InAttr  uint32    `xml:"in,attr,omitempty"`
	BcAttr  string    `xml:"bc,attr,omitempty"`
	FcAttr  string    `xml:"fc,attr,omitempty"`
	IAttr   bool      `xml:"i,attr,omitempty"`
	UnAttr  bool      `xml:"un,attr,omitempty"`
	StAttr  bool      `xml:"st,attr,omitempty"`
	BAttr   bool      `xml:"b,attr,omitempty"`
	Tpls    *CTTuples `xml:"tpls"`
	X       []*CTX    `xml:"x"`
}

// CTString ...
type CTString struct {
	XMLName xml.Name    `xml:"CT_String"`
	VAttr   string      `xml:"v,attr"`
	UAttr   bool        `xml:"u,attr,omitempty"`
	FAttr   bool        `xml:"f,attr,omitempty"`
	CAttr   string      `xml:"c,attr,omitempty"`
	CpAttr  uint32      `xml:"cp,attr,omitempty"`
	InAttr  uint32      `xml:"in,attr,omitempty"`
	BcAttr  string      `xml:"bc,attr,omitempty"`
	FcAttr  string      `xml:"fc,attr,omitempty"`
	IAttr   bool        `xml:"i,attr,omitempty"`
	UnAttr  bool        `xml:"un,attr,omitempty"`
	StAttr  bool        `xml:"st,attr,omitempty"`
	BAttr   bool        `xml:"b,attr,omitempty"`
	Tpls    []*CTTuples `xml:"tpls"`
	X       []*CTX      `xml:"x"`
}

// CTDateTime ...
type CTDateTime struct {
	XMLName xml.Name `xml:"CT_DateTime"`
	VAttr   string   `xml:"v,attr"`
	UAttr   bool     `xml:"u,attr,omitempty"`
	FAttr   bool     `xml:"f,attr,omitempty"`
	CAttr   string   `xml:"c,attr,omitempty"`
	CpAttr  uint32   `xml:"cp,attr,omitempty"`
	X       []*CTX   `xml:"x"`
}

// CTFieldGroup ...
type CTFieldGroup struct {
	XMLName    xml.Name      `xml:"CT_FieldGroup"`
	ParAttr    uint32        `xml:"par,attr,omitempty"`
	BaseAttr   uint32        `xml:"base,attr,omitempty"`
	RangePr    *CTRangePr    `xml:"rangePr"`
	DiscretePr *CTDiscretePr `xml:"discretePr"`
	GroupItems *CTGroupItems `xml:"groupItems"`
}

// CTRangePr ...
type CTRangePr struct {
	XMLName           xml.Name `xml:"CT_RangePr"`
	AutoStartAttr     bool     `xml:"autoStart,attr,omitempty"`
	AutoEndAttr       bool     `xml:"autoEnd,attr,omitempty"`
	GroupByAttr       string   `xml:"groupBy,attr,omitempty"`
	StartNumAttr      float64  `xml:"startNum,attr,omitempty"`
	EndNumAttr        float64  `xml:"endNum,attr,omitempty"`
	StartDateAttr     string   `xml:"startDate,attr,omitempty"`
	EndDateAttr       string   `xml:"endDate,attr,omitempty"`
	GroupIntervalAttr float64  `xml:"groupInterval,attr,omitempty"`
}

// STGroupBy ...
type STGroupBy string

// CTDiscretePr ...
type CTDiscretePr struct {
	XMLName   xml.Name   `xml:"CT_DiscretePr"`
	CountAttr uint32     `xml:"count,attr,omitempty"`
	X         []*CTIndex `xml:"x"`
}

// CTGroupItems ...
type CTGroupItems struct {
	XMLName   xml.Name      `xml:"CT_GroupItems"`
	CountAttr uint32        `xml:"count,attr,omitempty"`
	M         []*CTMissing  `xml:"m"`
	N         []*CTNumber   `xml:"n"`
	B         []*CTBoolean  `xml:"b"`
	E         []*CTError    `xml:"e"`
	S         []*CTString   `xml:"s"`
	D         []*CTDateTime `xml:"d"`
}

// CTPivotCacheRecords ...
type CTPivotCacheRecords struct {
	XMLName   xml.Name         `xml:"CT_PivotCacheRecords"`
	CountAttr uint32           `xml:"count,attr,omitempty"`
	R         []*CTRecord      `xml:"r"`
	ExtLst    *CTExtensionList `xml:"extLst"`
}

// CTRecord ...
type CTRecord struct {
	XMLName xml.Name      `xml:"CT_Record"`
	M       []*CTMissing  `xml:"m"`
	N       []*CTNumber   `xml:"n"`
	B       []*CTBoolean  `xml:"b"`
	E       []*CTError    `xml:"e"`
	S       []*CTString   `xml:"s"`
	D       []*CTDateTime `xml:"d"`
	X       []*CTIndex    `xml:"x"`
}

// CTPCDKPIs ...
type CTPCDKPIs struct {
	XMLName   xml.Name    `xml:"CT_PCDKPIs"`
	CountAttr uint32      `xml:"count,attr,omitempty"`
	Kpi       []*CTPCDKPI `xml:"kpi"`
}

// CTPCDKPI ...
type CTPCDKPI struct {
	XMLName           xml.Name `xml:"CT_PCDKPI"`
	UniqueNameAttr    string   `xml:"uniqueName,attr"`
	CaptionAttr       string   `xml:"caption,attr,omitempty"`
	DisplayFolderAttr string   `xml:"displayFolder,attr,omitempty"`
	MeasureGroupAttr  string   `xml:"measureGroup,attr,omitempty"`
	ParentAttr        string   `xml:"parent,attr,omitempty"`
	ValueAttr         string   `xml:"value,attr"`
	GoalAttr          string   `xml:"goal,attr,omitempty"`
	StatusAttr        string   `xml:"status,attr,omitempty"`
	TrendAttr         string   `xml:"trend,attr,omitempty"`
	WeightAttr        string   `xml:"weight,attr,omitempty"`
	TimeAttr          string   `xml:"time,attr,omitempty"`
}

// CTCacheHierarchies ...
type CTCacheHierarchies struct {
	XMLName        xml.Name            `xml:"CT_CacheHierarchies"`
	CountAttr      uint32              `xml:"count,attr,omitempty"`
	CacheHierarchy []*CTCacheHierarchy `xml:"cacheHierarchy"`
}

// CTCacheHierarchy ...
type CTCacheHierarchy struct {
	XMLName                     xml.Name         `xml:"CT_CacheHierarchy"`
	UniqueNameAttr              string           `xml:"uniqueName,attr"`
	CaptionAttr                 string           `xml:"caption,attr,omitempty"`
	MeasureAttr                 bool             `xml:"measure,attr,omitempty"`
	SetAttr                     bool             `xml:"set,attr,omitempty"`
	ParentSetAttr               uint32           `xml:"parentSet,attr,omitempty"`
	IconSetAttr                 int              `xml:"iconSet,attr,omitempty"`
	AttributeAttr               bool             `xml:"attribute,attr,omitempty"`
	TimeAttr                    bool             `xml:"time,attr,omitempty"`
	KeyAttributeAttr            bool             `xml:"keyAttribute,attr,omitempty"`
	DefaultMemberUniqueNameAttr string           `xml:"defaultMemberUniqueName,attr,omitempty"`
	AllUniqueNameAttr           string           `xml:"allUniqueName,attr,omitempty"`
	AllCaptionAttr              string           `xml:"allCaption,attr,omitempty"`
	DimensionUniqueNameAttr     string           `xml:"dimensionUniqueName,attr,omitempty"`
	DisplayFolderAttr           string           `xml:"displayFolder,attr,omitempty"`
	MeasureGroupAttr            string           `xml:"measureGroup,attr,omitempty"`
	MeasuresAttr                bool             `xml:"measures,attr,omitempty"`
	CountAttr                   uint32           `xml:"count,attr"`
	OneFieldAttr                bool             `xml:"oneField,attr,omitempty"`
	MemberValueDatatypeAttr     uint16           `xml:"memberValueDatatype,attr,omitempty"`
	UnbalancedAttr              bool             `xml:"unbalanced,attr,omitempty"`
	UnbalancedGroupAttr         bool             `xml:"unbalancedGroup,attr,omitempty"`
	HiddenAttr                  bool             `xml:"hidden,attr,omitempty"`
	FieldsUsage                 *CTFieldsUsage   `xml:"fieldsUsage"`
	GroupLevels                 *CTGroupLevels   `xml:"groupLevels"`
	ExtLst                      *CTExtensionList `xml:"extLst"`
}

// CTFieldsUsage ...
type CTFieldsUsage struct {
	XMLName    xml.Name        `xml:"CT_FieldsUsage"`
	CountAttr  uint32          `xml:"count,attr,omitempty"`
	FieldUsage []*CTFieldUsage `xml:"fieldUsage"`
}

// CTFieldUsage ...
type CTFieldUsage struct {
	XMLName xml.Name `xml:"CT_FieldUsage"`
	XAttr   int      `xml:"x,attr"`
}

// CTGroupLevels ...
type CTGroupLevels struct {
	XMLName    xml.Name        `xml:"CT_GroupLevels"`
	CountAttr  uint32          `xml:"count,attr,omitempty"`
	GroupLevel []*CTGroupLevel `xml:"groupLevel"`
}

// CTGroupLevel ...
type CTGroupLevel struct {
	XMLName          xml.Name         `xml:"CT_GroupLevel"`
	UniqueNameAttr   string           `xml:"uniqueName,attr"`
	CaptionAttr      string           `xml:"caption,attr"`
	UserAttr         bool             `xml:"user,attr,omitempty"`
	CustomRollUpAttr bool             `xml:"customRollUp,attr,omitempty"`
	Groups           *CTGroups        `xml:"groups"`
	ExtLst           *CTExtensionList `xml:"extLst"`
}

// CTGroups ...
type CTGroups struct {
	XMLName   xml.Name        `xml:"CT_Groups"`
	CountAttr uint32          `xml:"count,attr,omitempty"`
	Group     []*CTLevelGroup `xml:"group"`
}

// CTLevelGroup ...
type CTLevelGroup struct {
	XMLName          xml.Name        `xml:"CT_LevelGroup"`
	NameAttr         string          `xml:"name,attr"`
	UniqueNameAttr   string          `xml:"uniqueName,attr"`
	CaptionAttr      string          `xml:"caption,attr"`
	UniqueParentAttr string          `xml:"uniqueParent,attr,omitempty"`
	IdAttr           int             `xml:"id,attr,omitempty"`
	GroupMembers     *CTGroupMembers `xml:"groupMembers"`
}

// CTGroupMembers ...
type CTGroupMembers struct {
	XMLName     xml.Name         `xml:"CT_GroupMembers"`
	CountAttr   uint32           `xml:"count,attr,omitempty"`
	GroupMember []*CTGroupMember `xml:"groupMember"`
}

// CTGroupMember ...
type CTGroupMember struct {
	XMLName        xml.Name `xml:"CT_GroupMember"`
	UniqueNameAttr string   `xml:"uniqueName,attr"`
	GroupAttr      bool     `xml:"group,attr,omitempty"`
}

// CTTupleCache ...
type CTTupleCache struct {
	XMLName       xml.Name          `xml:"CT_TupleCache"`
	Entries       *CTPCDSDTCEntries `xml:"entries"`
	Sets          *CTSets           `xml:"sets"`
	QueryCache    *CTQueryCache     `xml:"queryCache"`
	ServerFormats *CTServerFormats  `xml:"serverFormats"`
	ExtLst        *CTExtensionList  `xml:"extLst"`
}

// CTServerFormat ...
type CTServerFormat struct {
	XMLName     xml.Name `xml:"CT_ServerFormat"`
	CultureAttr string   `xml:"culture,attr,omitempty"`
	FormatAttr  string   `xml:"format,attr,omitempty"`
}

// CTServerFormats ...
type CTServerFormats struct {
	XMLName      xml.Name          `xml:"CT_ServerFormats"`
	CountAttr    uint32            `xml:"count,attr,omitempty"`
	ServerFormat []*CTServerFormat `xml:"serverFormat"`
}

// CTPCDSDTCEntries ...
type CTPCDSDTCEntries struct {
	XMLName   xml.Name     `xml:"CT_PCDSDTCEntries"`
	CountAttr uint32       `xml:"count,attr,omitempty"`
	M         []*CTMissing `xml:"m"`
	N         []*CTNumber  `xml:"n"`
	E         []*CTError   `xml:"e"`
	S         []*CTString  `xml:"s"`
}

// CTTuples ...
type CTTuples struct {
	XMLName xml.Name   `xml:"CT_Tuples"`
	CAttr   uint32     `xml:"c,attr,omitempty"`
	Tpl     []*CTTuple `xml:"tpl"`
}

// CTTuple ...
type CTTuple struct {
	XMLName  xml.Name `xml:"CT_Tuple"`
	FldAttr  uint32   `xml:"fld,attr,omitempty"`
	HierAttr uint32   `xml:"hier,attr,omitempty"`
	ItemAttr uint32   `xml:"item,attr"`
}

// CTSets ...
type CTSets struct {
	XMLName   xml.Name `xml:"CT_Sets"`
	CountAttr uint32   `xml:"count,attr,omitempty"`
	Set       []*CTSet `xml:"set"`
}

// CTSet ...
type CTSet struct {
	XMLName           xml.Name    `xml:"CT_Set"`
	CountAttr         uint32      `xml:"count,attr,omitempty"`
	MaxRankAttr       int         `xml:"maxRank,attr"`
	SetDefinitionAttr string      `xml:"setDefinition,attr"`
	SortTypeAttr      string      `xml:"sortType,attr,omitempty"`
	QueryFailedAttr   bool        `xml:"queryFailed,attr,omitempty"`
	Tpls              []*CTTuples `xml:"tpls"`
	SortByTuple       *CTTuples   `xml:"sortByTuple"`
}

// STSortType ...
type STSortType string

// CTQueryCache ...
type CTQueryCache struct {
	XMLName   xml.Name   `xml:"CT_QueryCache"`
	CountAttr uint32     `xml:"count,attr,omitempty"`
	Query     []*CTQuery `xml:"query"`
}

// CTQuery ...
type CTQuery struct {
	XMLName xml.Name  `xml:"CT_Query"`
	MdxAttr string    `xml:"mdx,attr"`
	Tpls    *CTTuples `xml:"tpls"`
}

// CTCalculatedItems ...
type CTCalculatedItems struct {
	XMLName        xml.Name            `xml:"CT_CalculatedItems"`
	CountAttr      uint32              `xml:"count,attr,omitempty"`
	CalculatedItem []*CTCalculatedItem `xml:"calculatedItem"`
}

// CTCalculatedItem ...
type CTCalculatedItem struct {
	XMLName     xml.Name         `xml:"CT_CalculatedItem"`
	FieldAttr   uint32           `xml:"field,attr,omitempty"`
	FormulaAttr string           `xml:"formula,attr,omitempty"`
	PivotArea   *CTPivotArea     `xml:"pivotArea"`
	ExtLst      *CTExtensionList `xml:"extLst"`
}

// CTCalculatedMembers ...
type CTCalculatedMembers struct {
	XMLName          xml.Name              `xml:"CT_CalculatedMembers"`
	CountAttr        uint32                `xml:"count,attr,omitempty"`
	CalculatedMember []*CTCalculatedMember `xml:"calculatedMember"`
}

// CTCalculatedMember ...
type CTCalculatedMember struct {
	XMLName        xml.Name         `xml:"CT_CalculatedMember"`
	NameAttr       string           `xml:"name,attr"`
	MdxAttr        string           `xml:"mdx,attr"`
	MemberNameAttr string           `xml:"memberName,attr,omitempty"`
	HierarchyAttr  string           `xml:"hierarchy,attr,omitempty"`
	ParentAttr     string           `xml:"parent,attr,omitempty"`
	SolveOrderAttr int              `xml:"solveOrder,attr,omitempty"`
	SetAttr        bool             `xml:"set,attr,omitempty"`
	ExtLst         *CTExtensionList `xml:"extLst"`
}

// CTpivotTableDefinition ...
type CTpivotTableDefinition struct {
	XMLName                    xml.Name `xml:"CT_pivotTableDefinition"`
	AGAutoFormat               *AGAutoFormat
	NameAttr                   string                 `xml:"name,attr"`
	CacheIdAttr                uint32                 `xml:"cacheId,attr"`
	DataOnRowsAttr             bool                   `xml:"dataOnRows,attr,omitempty"`
	DataPositionAttr           uint32                 `xml:"dataPosition,attr,omitempty"`
	DataCaptionAttr            string                 `xml:"dataCaption,attr"`
	GrandTotalCaptionAttr      string                 `xml:"grandTotalCaption,attr,omitempty"`
	ErrorCaptionAttr           string                 `xml:"errorCaption,attr,omitempty"`
	ShowErrorAttr              bool                   `xml:"showError,attr,omitempty"`
	MissingCaptionAttr         string                 `xml:"missingCaption,attr,omitempty"`
	ShowMissingAttr            bool                   `xml:"showMissing,attr,omitempty"`
	PageStyleAttr              string                 `xml:"pageStyle,attr,omitempty"`
	PivotTableStyleAttr        string                 `xml:"pivotTableStyle,attr,omitempty"`
	VacatedStyleAttr           string                 `xml:"vacatedStyle,attr,omitempty"`
	TagAttr                    string                 `xml:"tag,attr,omitempty"`
	UpdatedVersionAttr         uint8                  `xml:"updatedVersion,attr,omitempty"`
	MinRefreshableVersionAttr  uint8                  `xml:"minRefreshableVersion,attr,omitempty"`
	AsteriskTotalsAttr         bool                   `xml:"asteriskTotals,attr,omitempty"`
	ShowItemsAttr              bool                   `xml:"showItems,attr,omitempty"`
	EditDataAttr               bool                   `xml:"editData,attr,omitempty"`
	DisableFieldListAttr       bool                   `xml:"disableFieldList,attr,omitempty"`
	ShowCalcMbrsAttr           bool                   `xml:"showCalcMbrs,attr,omitempty"`
	VisualTotalsAttr           bool                   `xml:"visualTotals,attr,omitempty"`
	ShowMultipleLabelAttr      bool                   `xml:"showMultipleLabel,attr,omitempty"`
	ShowDataDropDownAttr       bool                   `xml:"showDataDropDown,attr,omitempty"`
	ShowDrillAttr              bool                   `xml:"showDrill,attr,omitempty"`
	PrintDrillAttr             bool                   `xml:"printDrill,attr,omitempty"`
	ShowMemberPropertyTipsAttr bool                   `xml:"showMemberPropertyTips,attr,omitempty"`
	ShowDataTipsAttr           bool                   `xml:"showDataTips,attr,omitempty"`
	EnableWizardAttr           bool                   `xml:"enableWizard,attr,omitempty"`
	EnableDrillAttr            bool                   `xml:"enableDrill,attr,omitempty"`
	EnableFieldPropertiesAttr  bool                   `xml:"enableFieldProperties,attr,omitempty"`
	PreserveFormattingAttr     bool                   `xml:"preserveFormatting,attr,omitempty"`
	UseAutoFormattingAttr      bool                   `xml:"useAutoFormatting,attr,omitempty"`
	PageWrapAttr               uint32                 `xml:"pageWrap,attr,omitempty"`
	PageOverThenDownAttr       bool                   `xml:"pageOverThenDown,attr,omitempty"`
	SubtotalHiddenItemsAttr    bool                   `xml:"subtotalHiddenItems,attr,omitempty"`
	RowGrandTotalsAttr         bool                   `xml:"rowGrandTotals,attr,omitempty"`
	ColGrandTotalsAttr         bool                   `xml:"colGrandTotals,attr,omitempty"`
	FieldPrintTitlesAttr       bool                   `xml:"fieldPrintTitles,attr,omitempty"`
	ItemPrintTitlesAttr        bool                   `xml:"itemPrintTitles,attr,omitempty"`
	MergeItemAttr              bool                   `xml:"mergeItem,attr,omitempty"`
	ShowDropZonesAttr          bool                   `xml:"showDropZones,attr,omitempty"`
	CreatedVersionAttr         uint8                  `xml:"createdVersion,attr,omitempty"`
	IndentAttr                 uint32                 `xml:"indent,attr,omitempty"`
	ShowEmptyRowAttr           bool                   `xml:"showEmptyRow,attr,omitempty"`
	ShowEmptyColAttr           bool                   `xml:"showEmptyCol,attr,omitempty"`
	ShowHeadersAttr            bool                   `xml:"showHeaders,attr,omitempty"`
	CompactAttr                bool                   `xml:"compact,attr,omitempty"`
	OutlineAttr                bool                   `xml:"outline,attr,omitempty"`
	OutlineDataAttr            bool                   `xml:"outlineData,attr,omitempty"`
	CompactDataAttr            bool                   `xml:"compactData,attr,omitempty"`
	PublishedAttr              bool                   `xml:"published,attr,omitempty"`
	GridDropZonesAttr          bool                   `xml:"gridDropZones,attr,omitempty"`
	ImmersiveAttr              bool                   `xml:"immersive,attr,omitempty"`
	MultipleFieldFiltersAttr   bool                   `xml:"multipleFieldFilters,attr,omitempty"`
	ChartFormatAttr            uint32                 `xml:"chartFormat,attr,omitempty"`
	RowHeaderCaptionAttr       string                 `xml:"rowHeaderCaption,attr,omitempty"`
	ColHeaderCaptionAttr       string                 `xml:"colHeaderCaption,attr,omitempty"`
	FieldListSortAscendingAttr bool                   `xml:"fieldListSortAscending,attr,omitempty"`
	MdxSubqueriesAttr          bool                   `xml:"mdxSubqueries,attr,omitempty"`
	CustomListSortAttr         bool                   `xml:"customListSort,attr,omitempty"`
	Location                   *CTLocation            `xml:"location"`
	PivotFields                *CTPivotFields         `xml:"pivotFields"`
	RowFields                  *CTRowFields           `xml:"rowFields"`
	RowItems                   *CTrowItems            `xml:"rowItems"`
	ColFields                  *CTColFields           `xml:"colFields"`
	ColItems                   *CTcolItems            `xml:"colItems"`
	PageFields                 *CTPageFields          `xml:"pageFields"`
	DataFields                 *CTDataFields          `xml:"dataFields"`
	Formats                    *CTFormats             `xml:"formats"`
	ConditionalFormats         *CTConditionalFormats  `xml:"conditionalFormats"`
	ChartFormats               *CTChartFormats        `xml:"chartFormats"`
	PivotHierarchies           *CTPivotHierarchies    `xml:"pivotHierarchies"`
	PivotTableStyleInfo        *CTPivotTableStyle     `xml:"pivotTableStyleInfo"`
	Filters                    *CTPivotFilters        `xml:"filters"`
	RowHierarchiesUsage        *CTRowHierarchiesUsage `xml:"rowHierarchiesUsage"`
	ColHierarchiesUsage        *CTColHierarchiesUsage `xml:"colHierarchiesUsage"`
	ExtLst                     *CTExtensionList       `xml:"extLst"`
}

// CTLocation ...
type CTLocation struct {
	XMLName            xml.Name `xml:"CT_Location"`
	RefAttr            string   `xml:"ref,attr"`
	FirstHeaderRowAttr uint32   `xml:"firstHeaderRow,attr"`
	FirstDataRowAttr   uint32   `xml:"firstDataRow,attr"`
	FirstDataColAttr   uint32   `xml:"firstDataCol,attr"`
	RowPageCountAttr   uint32   `xml:"rowPageCount,attr,omitempty"`
	ColPageCountAttr   uint32   `xml:"colPageCount,attr,omitempty"`
}

// CTPivotFields ...
type CTPivotFields struct {
	XMLName    xml.Name        `xml:"CT_PivotFields"`
	CountAttr  uint32          `xml:"count,attr,omitempty"`
	PivotField []*CTPivotField `xml:"pivotField"`
}

// CTPivotField ...
type CTPivotField struct {
	XMLName                          xml.Name         `xml:"CT_PivotField"`
	NameAttr                         string           `xml:"name,attr,omitempty"`
	AxisAttr                         string           `xml:"axis,attr,omitempty"`
	DataFieldAttr                    bool             `xml:"dataField,attr,omitempty"`
	SubtotalCaptionAttr              string           `xml:"subtotalCaption,attr,omitempty"`
	ShowDropDownsAttr                bool             `xml:"showDropDowns,attr,omitempty"`
	HiddenLevelAttr                  bool             `xml:"hiddenLevel,attr,omitempty"`
	UniqueMemberPropertyAttr         string           `xml:"uniqueMemberProperty,attr,omitempty"`
	CompactAttr                      bool             `xml:"compact,attr,omitempty"`
	AllDrilledAttr                   bool             `xml:"allDrilled,attr,omitempty"`
	NumFmtIdAttr                     uint32           `xml:"numFmtId,attr,omitempty"`
	OutlineAttr                      bool             `xml:"outline,attr,omitempty"`
	SubtotalTopAttr                  bool             `xml:"subtotalTop,attr,omitempty"`
	DragToRowAttr                    bool             `xml:"dragToRow,attr,omitempty"`
	DragToColAttr                    bool             `xml:"dragToCol,attr,omitempty"`
	MultipleItemSelectionAllowedAttr bool             `xml:"multipleItemSelectionAllowed,attr,omitempty"`
	DragToPageAttr                   bool             `xml:"dragToPage,attr,omitempty"`
	DragToDataAttr                   bool             `xml:"dragToData,attr,omitempty"`
	DragOffAttr                      bool             `xml:"dragOff,attr,omitempty"`
	ShowAllAttr                      bool             `xml:"showAll,attr,omitempty"`
	InsertBlankRowAttr               bool             `xml:"insertBlankRow,attr,omitempty"`
	ServerFieldAttr                  bool             `xml:"serverField,attr,omitempty"`
	InsertPageBreakAttr              bool             `xml:"insertPageBreak,attr,omitempty"`
	AutoShowAttr                     bool             `xml:"autoShow,attr,omitempty"`
	TopAutoShowAttr                  bool             `xml:"topAutoShow,attr,omitempty"`
	HideNewItemsAttr                 bool             `xml:"hideNewItems,attr,omitempty"`
	MeasureFilterAttr                bool             `xml:"measureFilter,attr,omitempty"`
	IncludeNewItemsInFilterAttr      bool             `xml:"includeNewItemsInFilter,attr,omitempty"`
	ItemPageCountAttr                uint32           `xml:"itemPageCount,attr,omitempty"`
	SortTypeAttr                     string           `xml:"sortType,attr,omitempty"`
	DataSourceSortAttr               bool             `xml:"dataSourceSort,attr,omitempty"`
	NonAutoSortDefaultAttr           bool             `xml:"nonAutoSortDefault,attr,omitempty"`
	RankByAttr                       uint32           `xml:"rankBy,attr,omitempty"`
	DefaultSubtotalAttr              bool             `xml:"defaultSubtotal,attr,omitempty"`
	SumSubtotalAttr                  bool             `xml:"sumSubtotal,attr,omitempty"`
	CountASubtotalAttr               bool             `xml:"countASubtotal,attr,omitempty"`
	AvgSubtotalAttr                  bool             `xml:"avgSubtotal,attr,omitempty"`
	MaxSubtotalAttr                  bool             `xml:"maxSubtotal,attr,omitempty"`
	MinSubtotalAttr                  bool             `xml:"minSubtotal,attr,omitempty"`
	ProductSubtotalAttr              bool             `xml:"productSubtotal,attr,omitempty"`
	CountSubtotalAttr                bool             `xml:"countSubtotal,attr,omitempty"`
	StdDevSubtotalAttr               bool             `xml:"stdDevSubtotal,attr,omitempty"`
	StdDevPSubtotalAttr              bool             `xml:"stdDevPSubtotal,attr,omitempty"`
	VarSubtotalAttr                  bool             `xml:"varSubtotal,attr,omitempty"`
	VarPSubtotalAttr                 bool             `xml:"varPSubtotal,attr,omitempty"`
	ShowPropCellAttr                 bool             `xml:"showPropCell,attr,omitempty"`
	ShowPropTipAttr                  bool             `xml:"showPropTip,attr,omitempty"`
	ShowPropAsCaptionAttr            bool             `xml:"showPropAsCaption,attr,omitempty"`
	DefaultAttributeDrillStateAttr   bool             `xml:"defaultAttributeDrillState,attr,omitempty"`
	Items                            *CTItems         `xml:"items"`
	AutoSortScope                    *CTAutoSortScope `xml:"autoSortScope"`
	ExtLst                           *CTExtensionList `xml:"extLst"`
}

// CTAutoSortScope ...
type CTAutoSortScope struct {
	XMLName   xml.Name     `xml:"CT_AutoSortScope"`
	PivotArea *CTPivotArea `xml:"pivotArea"`
}

// CTItems ...
type CTItems struct {
	XMLName   xml.Name  `xml:"CT_Items"`
	CountAttr uint32    `xml:"count,attr,omitempty"`
	Item      []*CTItem `xml:"item"`
}

// CTItem ...
type CTItem struct {
	XMLName xml.Name `xml:"CT_Item"`
	NAttr   string   `xml:"n,attr,omitempty"`
	TAttr   string   `xml:"t,attr,omitempty"`
	HAttr   bool     `xml:"h,attr,omitempty"`
	SAttr   bool     `xml:"s,attr,omitempty"`
	SdAttr  bool     `xml:"sd,attr,omitempty"`
	FAttr   bool     `xml:"f,attr,omitempty"`
	MAttr   bool     `xml:"m,attr,omitempty"`
	CAttr   bool     `xml:"c,attr,omitempty"`
	XAttr   uint32   `xml:"x,attr,omitempty"`
	DAttr   bool     `xml:"d,attr,omitempty"`
	EAttr   bool     `xml:"e,attr,omitempty"`
}

// CTPageFields ...
type CTPageFields struct {
	XMLName   xml.Name       `xml:"CT_PageFields"`
	CountAttr uint32         `xml:"count,attr,omitempty"`
	PageField []*CTPageField `xml:"pageField"`
}

// CTPageField ...
type CTPageField struct {
	XMLName  xml.Name         `xml:"CT_PageField"`
	FldAttr  int              `xml:"fld,attr"`
	ItemAttr uint32           `xml:"item,attr,omitempty"`
	HierAttr int              `xml:"hier,attr,omitempty"`
	NameAttr string           `xml:"name,attr,omitempty"`
	CapAttr  string           `xml:"cap,attr,omitempty"`
	ExtLst   *CTExtensionList `xml:"extLst"`
}

// CTDataFields ...
type CTDataFields struct {
	XMLName   xml.Name       `xml:"CT_DataFields"`
	CountAttr uint32         `xml:"count,attr,omitempty"`
	DataField []*CTDataField `xml:"dataField"`
}

// CTDataField ...
type CTDataField struct {
	XMLName        xml.Name         `xml:"CT_DataField"`
	NameAttr       string           `xml:"name,attr,omitempty"`
	FldAttr        uint32           `xml:"fld,attr"`
	SubtotalAttr   string           `xml:"subtotal,attr,omitempty"`
	ShowDataAsAttr string           `xml:"showDataAs,attr,omitempty"`
	BaseFieldAttr  int              `xml:"baseField,attr,omitempty"`
	BaseItemAttr   uint32           `xml:"baseItem,attr,omitempty"`
	NumFmtIdAttr   uint32           `xml:"numFmtId,attr,omitempty"`
	ExtLst         *CTExtensionList `xml:"extLst"`
}

// CTrowItems ...
type CTrowItems struct {
	XMLName   xml.Name `xml:"CT_rowItems"`
	CountAttr uint32   `xml:"count,attr,omitempty"`
	I         []*CTI   `xml:"i"`
}

// CTcolItems ...
type CTcolItems struct {
	XMLName   xml.Name `xml:"CT_colItems"`
	CountAttr uint32   `xml:"count,attr,omitempty"`
	I         []*CTI   `xml:"i"`
}

// CTI ...
type CTI struct {
	XMLName xml.Name `xml:"CT_I"`
	TAttr   string   `xml:"t,attr,omitempty"`
	RAttr   uint32   `xml:"r,attr,omitempty"`
	IAttr   uint32   `xml:"i,attr,omitempty"`
	X       []*CTX   `xml:"x"`
}

// CTX ...
type CTX struct {
	XMLName xml.Name `xml:"CT_X"`
	VAttr   int      `xml:"v,attr,omitempty"`
}

// CTRowFields ...
type CTRowFields struct {
	XMLName   xml.Name   `xml:"CT_RowFields"`
	CountAttr uint32     `xml:"count,attr,omitempty"`
	Field     []*CTField `xml:"field"`
}

// CTColFields ...
type CTColFields struct {
	XMLName   xml.Name   `xml:"CT_ColFields"`
	CountAttr uint32     `xml:"count,attr,omitempty"`
	Field     []*CTField `xml:"field"`
}

// CTField ...
type CTField struct {
	XMLName xml.Name `xml:"CT_Field"`
	XAttr   int      `xml:"x,attr"`
}

// CTFormats ...
type CTFormats struct {
	XMLName   xml.Name    `xml:"CT_Formats"`
	CountAttr uint32      `xml:"count,attr,omitempty"`
	Format    []*CTFormat `xml:"format"`
}

// CTFormat ...
type CTFormat struct {
	XMLName    xml.Name         `xml:"CT_Format"`
	ActionAttr string           `xml:"action,attr,omitempty"`
	DxfIdAttr  uint32           `xml:"dxfId,attr,omitempty"`
	PivotArea  *CTPivotArea     `xml:"pivotArea"`
	ExtLst     *CTExtensionList `xml:"extLst"`
}

// CTConditionalFormats ...
type CTConditionalFormats struct {
	XMLName           xml.Name               `xml:"CT_ConditionalFormats"`
	CountAttr         uint32                 `xml:"count,attr,omitempty"`
	ConditionalFormat []*CTConditionalFormat `xml:"conditionalFormat"`
}

// CTConditionalFormat ...
type CTConditionalFormat struct {
	XMLName      xml.Name         `xml:"CT_ConditionalFormat"`
	ScopeAttr    string           `xml:"scope,attr,omitempty"`
	TypeAttr     string           `xml:"type,attr,omitempty"`
	PriorityAttr uint32           `xml:"priority,attr"`
	PivotAreas   *CTPivotAreas    `xml:"pivotAreas"`
	ExtLst       *CTExtensionList `xml:"extLst"`
}

// CTPivotAreas ...
type CTPivotAreas struct {
	XMLName   xml.Name       `xml:"CT_PivotAreas"`
	CountAttr uint32         `xml:"count,attr,omitempty"`
	PivotArea []*CTPivotArea `xml:"pivotArea"`
}

// STScope ...
type STScope string

// STType ...
type STType string

// CTChartFormats ...
type CTChartFormats struct {
	XMLName     xml.Name         `xml:"CT_ChartFormats"`
	CountAttr   uint32           `xml:"count,attr,omitempty"`
	ChartFormat []*CTChartFormat `xml:"chartFormat"`
}

// CTChartFormat ...
type CTChartFormat struct {
	XMLName    xml.Name     `xml:"CT_ChartFormat"`
	ChartAttr  uint32       `xml:"chart,attr"`
	FormatAttr uint32       `xml:"format,attr"`
	SeriesAttr bool         `xml:"series,attr,omitempty"`
	PivotArea  *CTPivotArea `xml:"pivotArea"`
}

// CTPivotHierarchies ...
type CTPivotHierarchies struct {
	XMLName        xml.Name            `xml:"CT_PivotHierarchies"`
	CountAttr      uint32              `xml:"count,attr,omitempty"`
	PivotHierarchy []*CTPivotHierarchy `xml:"pivotHierarchy"`
}

// CTPivotHierarchy ...
type CTPivotHierarchy struct {
	XMLName                          xml.Name            `xml:"CT_PivotHierarchy"`
	OutlineAttr                      bool                `xml:"outline,attr,omitempty"`
	MultipleItemSelectionAllowedAttr bool                `xml:"multipleItemSelectionAllowed,attr,omitempty"`
	SubtotalTopAttr                  bool                `xml:"subtotalTop,attr,omitempty"`
	ShowInFieldListAttr              bool                `xml:"showInFieldList,attr,omitempty"`
	DragToRowAttr                    bool                `xml:"dragToRow,attr,omitempty"`
	DragToColAttr                    bool                `xml:"dragToCol,attr,omitempty"`
	DragToPageAttr                   bool                `xml:"dragToPage,attr,omitempty"`
	DragToDataAttr                   bool                `xml:"dragToData,attr,omitempty"`
	DragOffAttr                      bool                `xml:"dragOff,attr,omitempty"`
	IncludeNewItemsInFilterAttr      bool                `xml:"includeNewItemsInFilter,attr,omitempty"`
	CaptionAttr                      string              `xml:"caption,attr,omitempty"`
	Mps                              *CTMemberProperties `xml:"mps"`
	Members                          []*CTMembers        `xml:"members"`
	ExtLst                           *CTExtensionList    `xml:"extLst"`
}

// CTRowHierarchiesUsage ...
type CTRowHierarchiesUsage struct {
	XMLName           xml.Name            `xml:"CT_RowHierarchiesUsage"`
	CountAttr         uint32              `xml:"count,attr,omitempty"`
	RowHierarchyUsage []*CTHierarchyUsage `xml:"rowHierarchyUsage"`
}

// CTColHierarchiesUsage ...
type CTColHierarchiesUsage struct {
	XMLName           xml.Name            `xml:"CT_ColHierarchiesUsage"`
	CountAttr         uint32              `xml:"count,attr,omitempty"`
	ColHierarchyUsage []*CTHierarchyUsage `xml:"colHierarchyUsage"`
}

// CTHierarchyUsage ...
type CTHierarchyUsage struct {
	XMLName            xml.Name `xml:"CT_HierarchyUsage"`
	HierarchyUsageAttr int      `xml:"hierarchyUsage,attr"`
}

// CTMemberProperties ...
type CTMemberProperties struct {
	XMLName   xml.Name            `xml:"CT_MemberProperties"`
	CountAttr uint32              `xml:"count,attr,omitempty"`
	Mp        []*CTMemberProperty `xml:"mp"`
}

// CTMemberProperty ...
type CTMemberProperty struct {
	XMLName           xml.Name `xml:"CT_MemberProperty"`
	NameAttr          string   `xml:"name,attr,omitempty"`
	ShowCellAttr      bool     `xml:"showCell,attr,omitempty"`
	ShowTipAttr       bool     `xml:"showTip,attr,omitempty"`
	ShowAsCaptionAttr bool     `xml:"showAsCaption,attr,omitempty"`
	NameLenAttr       uint32   `xml:"nameLen,attr,omitempty"`
	PPosAttr          uint32   `xml:"pPos,attr,omitempty"`
	PLenAttr          uint32   `xml:"pLen,attr,omitempty"`
	LevelAttr         uint32   `xml:"level,attr,omitempty"`
	FieldAttr         uint32   `xml:"field,attr"`
}

// CTMembers ...
type CTMembers struct {
	XMLName   xml.Name    `xml:"CT_Members"`
	CountAttr uint32      `xml:"count,attr,omitempty"`
	LevelAttr uint32      `xml:"level,attr,omitempty"`
	Member    []*CTMember `xml:"member"`
}

// CTMember ...
type CTMember struct {
	XMLName  xml.Name `xml:"CT_Member"`
	NameAttr string   `xml:"name,attr"`
}

// CTDimensions ...
type CTDimensions struct {
	XMLName   xml.Name            `xml:"CT_Dimensions"`
	CountAttr uint32              `xml:"count,attr,omitempty"`
	Dimension []*CTPivotDimension `xml:"dimension"`
}

// CTPivotDimension ...
type CTPivotDimension struct {
	XMLName        xml.Name `xml:"CT_PivotDimension"`
	MeasureAttr    bool     `xml:"measure,attr,omitempty"`
	NameAttr       string   `xml:"name,attr"`
	UniqueNameAttr string   `xml:"uniqueName,attr"`
	CaptionAttr    string   `xml:"caption,attr"`
}

// CTMeasureGroups ...
type CTMeasureGroups struct {
	XMLName      xml.Name          `xml:"CT_MeasureGroups"`
	CountAttr    uint32            `xml:"count,attr,omitempty"`
	MeasureGroup []*CTMeasureGroup `xml:"measureGroup"`
}

// CTMeasureDimensionMaps ...
type CTMeasureDimensionMaps struct {
	XMLName   xml.Name                 `xml:"CT_MeasureDimensionMaps"`
	CountAttr uint32                   `xml:"count,attr,omitempty"`
	Map       []*CTMeasureDimensionMap `xml:"map"`
}

// CTMeasureGroup ...
type CTMeasureGroup struct {
	XMLName     xml.Name `xml:"CT_MeasureGroup"`
	NameAttr    string   `xml:"name,attr"`
	CaptionAttr string   `xml:"caption,attr"`
}

// CTMeasureDimensionMap ...
type CTMeasureDimensionMap struct {
	XMLName          xml.Name `xml:"CT_MeasureDimensionMap"`
	MeasureGroupAttr uint32   `xml:"measureGroup,attr,omitempty"`
	DimensionAttr    uint32   `xml:"dimension,attr,omitempty"`
}

// CTPivotTableStyle ...
type CTPivotTableStyle struct {
	XMLName            xml.Name `xml:"CT_PivotTableStyle"`
	NameAttr           string   `xml:"name,attr,omitempty"`
	ShowRowHeadersAttr bool     `xml:"showRowHeaders,attr,omitempty"`
	ShowColHeadersAttr bool     `xml:"showColHeaders,attr,omitempty"`
	ShowRowStripesAttr bool     `xml:"showRowStripes,attr,omitempty"`
	ShowColStripesAttr bool     `xml:"showColStripes,attr,omitempty"`
	ShowLastColumnAttr bool     `xml:"showLastColumn,attr,omitempty"`
}

// CTPivotFilters ...
type CTPivotFilters struct {
	XMLName   xml.Name         `xml:"CT_PivotFilters"`
	CountAttr uint32           `xml:"count,attr,omitempty"`
	Filter    []*CTPivotFilter `xml:"filter"`
}

// CTPivotFilter ...
type CTPivotFilter struct {
	XMLName          xml.Name         `xml:"CT_PivotFilter"`
	FldAttr          uint32           `xml:"fld,attr"`
	MpFldAttr        uint32           `xml:"mpFld,attr,omitempty"`
	TypeAttr         string           `xml:"type,attr"`
	EvalOrderAttr    int              `xml:"evalOrder,attr,omitempty"`
	IdAttr           uint32           `xml:"id,attr"`
	IMeasureHierAttr uint32           `xml:"iMeasureHier,attr,omitempty"`
	IMeasureFldAttr  uint32           `xml:"iMeasureFld,attr,omitempty"`
	NameAttr         string           `xml:"name,attr,omitempty"`
	DescriptionAttr  string           `xml:"description,attr,omitempty"`
	StringValue1Attr string           `xml:"stringValue1,attr,omitempty"`
	StringValue2Attr string           `xml:"stringValue2,attr,omitempty"`
	AutoFilter       *CTAutoFilter    `xml:"autoFilter"`
	ExtLst           *CTExtensionList `xml:"extLst"`
}

// STShowDataAs ...
type STShowDataAs string

// STItemType ...
type STItemType string

// STFormatAction ...
type STFormatAction string

// STFieldSortType ...
type STFieldSortType string

// STPivotFilterType ...
type STPivotFilterType string

// CTPivotArea ...
type CTPivotArea struct {
	XMLName                         xml.Name               `xml:"CT_PivotArea"`
	FieldAttr                       int                    `xml:"field,attr,omitempty"`
	TypeAttr                        string                 `xml:"type,attr,omitempty"`
	DataOnlyAttr                    bool                   `xml:"dataOnly,attr,omitempty"`
	LabelOnlyAttr                   bool                   `xml:"labelOnly,attr,omitempty"`
	GrandRowAttr                    bool                   `xml:"grandRow,attr,omitempty"`
	GrandColAttr                    bool                   `xml:"grandCol,attr,omitempty"`
	CacheIndexAttr                  bool                   `xml:"cacheIndex,attr,omitempty"`
	OutlineAttr                     bool                   `xml:"outline,attr,omitempty"`
	OffsetAttr                      string                 `xml:"offset,attr,omitempty"`
	CollapsedLevelsAreSubtotalsAttr bool                   `xml:"collapsedLevelsAreSubtotals,attr,omitempty"`
	AxisAttr                        string                 `xml:"axis,attr,omitempty"`
	FieldPositionAttr               uint32                 `xml:"fieldPosition,attr,omitempty"`
	References                      *CTPivotAreaReferences `xml:"references"`
	ExtLst                          *CTExtensionList       `xml:"extLst"`
}

// STPivotAreaType ...
type STPivotAreaType string

// CTPivotAreaReferences ...
type CTPivotAreaReferences struct {
	XMLName   xml.Name                `xml:"CT_PivotAreaReferences"`
	CountAttr uint32                  `xml:"count,attr,omitempty"`
	Reference []*CTPivotAreaReference `xml:"reference"`
}

// CTPivotAreaReference ...
type CTPivotAreaReference struct {
	XMLName             xml.Name         `xml:"CT_PivotAreaReference"`
	FieldAttr           uint32           `xml:"field,attr,omitempty"`
	CountAttr           uint32           `xml:"count,attr,omitempty"`
	SelectedAttr        bool             `xml:"selected,attr,omitempty"`
	ByPositionAttr      bool             `xml:"byPosition,attr,omitempty"`
	RelativeAttr        bool             `xml:"relative,attr,omitempty"`
	DefaultSubtotalAttr bool             `xml:"defaultSubtotal,attr,omitempty"`
	SumSubtotalAttr     bool             `xml:"sumSubtotal,attr,omitempty"`
	CountASubtotalAttr  bool             `xml:"countASubtotal,attr,omitempty"`
	AvgSubtotalAttr     bool             `xml:"avgSubtotal,attr,omitempty"`
	MaxSubtotalAttr     bool             `xml:"maxSubtotal,attr,omitempty"`
	MinSubtotalAttr     bool             `xml:"minSubtotal,attr,omitempty"`
	ProductSubtotalAttr bool             `xml:"productSubtotal,attr,omitempty"`
	CountSubtotalAttr   bool             `xml:"countSubtotal,attr,omitempty"`
	StdDevSubtotalAttr  bool             `xml:"stdDevSubtotal,attr,omitempty"`
	StdDevPSubtotalAttr bool             `xml:"stdDevPSubtotal,attr,omitempty"`
	VarSubtotalAttr     bool             `xml:"varSubtotal,attr,omitempty"`
	VarPSubtotalAttr    bool             `xml:"varPSubtotal,attr,omitempty"`
	X                   []*CTIndex       `xml:"x"`
	ExtLst              *CTExtensionList `xml:"extLst"`
}

// CTIndex ...
type CTIndex struct {
	XMLName xml.Name `xml:"CT_Index"`
	VAttr   uint32   `xml:"v,attr"`
}

// STAxis ...
type STAxis string

// QueryTable ...
type QueryTable *CTQueryTable

// CTQueryTable ...
type CTQueryTable struct {
	XMLName                    xml.Name `xml:"CT_QueryTable"`
	AGAutoFormat               *AGAutoFormat
	NameAttr                   string               `xml:"name,attr"`
	HeadersAttr                bool                 `xml:"headers,attr,omitempty"`
	RowNumbersAttr             bool                 `xml:"rowNumbers,attr,omitempty"`
	DisableRefreshAttr         bool                 `xml:"disableRefresh,attr,omitempty"`
	BackgroundRefreshAttr      bool                 `xml:"backgroundRefresh,attr,omitempty"`
	FirstBackgroundRefreshAttr bool                 `xml:"firstBackgroundRefresh,attr,omitempty"`
	RefreshOnLoadAttr          bool                 `xml:"refreshOnLoad,attr,omitempty"`
	GrowShrinkTypeAttr         string               `xml:"growShrinkType,attr,omitempty"`
	FillFormulasAttr           bool                 `xml:"fillFormulas,attr,omitempty"`
	RemoveDataOnSaveAttr       bool                 `xml:"removeDataOnSave,attr,omitempty"`
	DisableEditAttr            bool                 `xml:"disableEdit,attr,omitempty"`
	PreserveFormattingAttr     bool                 `xml:"preserveFormatting,attr,omitempty"`
	AdjustColumnWidthAttr      bool                 `xml:"adjustColumnWidth,attr,omitempty"`
	IntermediateAttr           bool                 `xml:"intermediate,attr,omitempty"`
	ConnectionIdAttr           uint32               `xml:"connectionId,attr"`
	QueryTableRefresh          *CTQueryTableRefresh `xml:"queryTableRefresh"`
	ExtLst                     *CTExtensionList     `xml:"extLst"`
}

// CTQueryTableRefresh ...
type CTQueryTableRefresh struct {
	XMLName                      xml.Name                   `xml:"CT_QueryTableRefresh"`
	PreserveSortFilterLayoutAttr bool                       `xml:"preserveSortFilterLayout,attr,omitempty"`
	FieldIdWrappedAttr           bool                       `xml:"fieldIdWrapped,attr,omitempty"`
	HeadersInLastRefreshAttr     bool                       `xml:"headersInLastRefresh,attr,omitempty"`
	MinimumVersionAttr           uint8                      `xml:"minimumVersion,attr,omitempty"`
	NextIdAttr                   uint32                     `xml:"nextId,attr,omitempty"`
	UnboundColumnsLeftAttr       uint32                     `xml:"unboundColumnsLeft,attr,omitempty"`
	UnboundColumnsRightAttr      uint32                     `xml:"unboundColumnsRight,attr,omitempty"`
	QueryTableFields             *CTQueryTableFields        `xml:"queryTableFields"`
	QueryTableDeletedFields      *CTQueryTableDeletedFields `xml:"queryTableDeletedFields"`
	SortState                    *CTSortState               `xml:"sortState"`
	ExtLst                       *CTExtensionList           `xml:"extLst"`
}

// CTQueryTableDeletedFields ...
type CTQueryTableDeletedFields struct {
	XMLName      xml.Name          `xml:"CT_QueryTableDeletedFields"`
	CountAttr    uint32            `xml:"count,attr,omitempty"`
	DeletedField []*CTDeletedField `xml:"deletedField"`
}

// CTDeletedField ...
type CTDeletedField struct {
	XMLName  xml.Name `xml:"CT_DeletedField"`
	NameAttr string   `xml:"name,attr"`
}

// CTQueryTableFields ...
type CTQueryTableFields struct {
	XMLName         xml.Name             `xml:"CT_QueryTableFields"`
	CountAttr       uint32               `xml:"count,attr,omitempty"`
	QueryTableField []*CTQueryTableField `xml:"queryTableField"`
}

// CTQueryTableField ...
type CTQueryTableField struct {
	XMLName           xml.Name         `xml:"CT_QueryTableField"`
	IdAttr            uint32           `xml:"id,attr"`
	NameAttr          string           `xml:"name,attr,omitempty"`
	DataBoundAttr     bool             `xml:"dataBound,attr,omitempty"`
	RowNumbersAttr    bool             `xml:"rowNumbers,attr,omitempty"`
	FillFormulasAttr  bool             `xml:"fillFormulas,attr,omitempty"`
	ClippedAttr       bool             `xml:"clipped,attr,omitempty"`
	TableColumnIdAttr uint32           `xml:"tableColumnId,attr,omitempty"`
	ExtLst            *CTExtensionList `xml:"extLst"`
}

// STGrowShrinkType ...
type STGrowShrinkType string

// Sst ...
type Sst *CTSst

// CTSst ...
type CTSst struct {
	XMLName         xml.Name         `xml:"CT_Sst"`
	CountAttr       uint32           `xml:"count,attr,omitempty"`
	UniqueCountAttr uint32           `xml:"uniqueCount,attr,omitempty"`
	Si              []*CTRst         `xml:"si"`
	ExtLst          *CTExtensionList `xml:"extLst"`
}

// STPhoneticType ...
type STPhoneticType string

// STPhoneticAlignment ...
type STPhoneticAlignment string

// CTPhoneticRun ...
type CTPhoneticRun struct {
	XMLName xml.Name `xml:"CT_PhoneticRun"`
	SbAttr  uint32   `xml:"sb,attr"`
	EbAttr  uint32   `xml:"eb,attr"`
	T       string   `xml:"t"`
}

// CTRElt ...
type CTRElt struct {
	XMLName xml.Name  `xml:"CT_RElt"`
	RPr     *CTRPrElt `xml:"rPr"`
	T       string    `xml:"t"`
}

// CTRPrElt ...
type CTRPrElt struct {
	XMLName   xml.Name                       `xml:"CT_RPrElt"`
	RFont     []*CTFontName                  `xml:"rFont"`
	Charset   []*CTIntProperty               `xml:"charset"`
	Family    []*CTIntProperty               `xml:"family"`
	B         []*CTBooleanProperty           `xml:"b"`
	I         []*CTBooleanProperty           `xml:"i"`
	Strike    []*CTBooleanProperty           `xml:"strike"`
	Outline   []*CTBooleanProperty           `xml:"outline"`
	Shadow    []*CTBooleanProperty           `xml:"shadow"`
	Condense  []*CTBooleanProperty           `xml:"condense"`
	Extend    []*CTBooleanProperty           `xml:"extend"`
	Color     []*CTColor                     `xml:"color"`
	Sz        []*CTFontSize                  `xml:"sz"`
	U         []*CTUnderlineProperty         `xml:"u"`
	VertAlign []*CTVerticalAlignFontProperty `xml:"vertAlign"`
	Scheme    []*CTFontScheme                `xml:"scheme"`
}

// CTRst ...
type CTRst struct {
	XMLName    xml.Name         `xml:"CT_Rst"`
	T          string           `xml:"t"`
	R          []*CTRElt        `xml:"r"`
	RPh        []*CTPhoneticRun `xml:"rPh"`
	PhoneticPr *CTPhoneticPr    `xml:"phoneticPr"`
}

// CTPhoneticPr ...
type CTPhoneticPr struct {
	XMLName       xml.Name `xml:"CT_PhoneticPr"`
	FontIdAttr    uint32   `xml:"fontId,attr"`
	TypeAttr      string   `xml:"type,attr,omitempty"`
	AlignmentAttr string   `xml:"alignment,attr,omitempty"`
}

// Headers ...
type Headers *CTRevisionHeaders

// Revisions ...
type Revisions *CTRevisions

// CTRevisionHeaders ...
type CTRevisionHeaders struct {
	XMLName               xml.Name            `xml:"CT_RevisionHeaders"`
	GuidAttr              string              `xml:"guid,attr"`
	LastGuidAttr          string              `xml:"lastGuid,attr,omitempty"`
	SharedAttr            bool                `xml:"shared,attr,omitempty"`
	DiskRevisionsAttr     bool                `xml:"diskRevisions,attr,omitempty"`
	HistoryAttr           bool                `xml:"history,attr,omitempty"`
	TrackRevisionsAttr    bool                `xml:"trackRevisions,attr,omitempty"`
	ExclusiveAttr         bool                `xml:"exclusive,attr,omitempty"`
	RevisionIdAttr        uint32              `xml:"revisionId,attr,omitempty"`
	VersionAttr           int                 `xml:"version,attr,omitempty"`
	KeepChangeHistoryAttr bool                `xml:"keepChangeHistory,attr,omitempty"`
	ProtectedAttr         bool                `xml:"protected,attr,omitempty"`
	PreserveHistoryAttr   uint32              `xml:"preserveHistory,attr,omitempty"`
	Header                []*CTRevisionHeader `xml:"header"`
}

// CTRevisions ...
type CTRevisions struct {
	XMLName xml.Name                     `xml:"CT_Revisions"`
	Rrc     []*CTRevisionRowColumn       `xml:"rrc"`
	Rm      []*CTRevisionMove            `xml:"rm"`
	Rcv     []*CTRevisionCustomView      `xml:"rcv"`
	Rsnm    []*CTRevisionSheetRename     `xml:"rsnm"`
	Ris     []*CTRevisionInsertSheet     `xml:"ris"`
	Rcc     []*CTRevisionCellChange      `xml:"rcc"`
	Rfmt    []*CTRevisionFormatting      `xml:"rfmt"`
	Raf     []*CTRevisionAutoFormatting  `xml:"raf"`
	Rdn     []*CTRevisionDefinedName     `xml:"rdn"`
	Rcmt    []*CTRevisionComment         `xml:"rcmt"`
	Rqt     []*CTRevisionQueryTableField `xml:"rqt"`
	Rcft    []*CTRevisionConflict        `xml:"rcft"`
}

// AGRevData ...
type AGRevData struct {
	XMLName xml.Name `xml:"AG_RevData"`
	RIdAttr uint32   `xml:"rId,attr"`
	UaAttr  bool     `xml:"ua,attr,omitempty"`
	RaAttr  bool     `xml:"ra,attr,omitempty"`
}

// CTRevisionHeader ...
type CTRevisionHeader struct {
	XMLName        xml.Name             `xml:"CT_RevisionHeader"`
	GuidAttr       string               `xml:"guid,attr"`
	DateTimeAttr   string               `xml:"dateTime,attr"`
	MaxSheetIdAttr uint32               `xml:"maxSheetId,attr"`
	UserNameAttr   string               `xml:"userName,attr"`
	RIdAttr        string               `xml:"r:id,attr"`
	MinRIdAttr     uint32               `xml:"minRId,attr,omitempty"`
	MaxRIdAttr     uint32               `xml:"maxRId,attr,omitempty"`
	SheetIdMap     *CTSheetIdMap        `xml:"sheetIdMap"`
	ReviewedList   *CTReviewedRevisions `xml:"reviewedList"`
	ExtLst         *CTExtensionList     `xml:"extLst"`
}

// CTSheetIdMap ...
type CTSheetIdMap struct {
	XMLName   xml.Name     `xml:"CT_SheetIdMap"`
	CountAttr uint32       `xml:"count,attr,omitempty"`
	SheetId   []*CTSheetId `xml:"sheetId"`
}

// CTSheetId ...
type CTSheetId struct {
	XMLName xml.Name `xml:"CT_SheetId"`
	ValAttr uint32   `xml:"val,attr"`
}

// CTReviewedRevisions ...
type CTReviewedRevisions struct {
	XMLName   xml.Name      `xml:"CT_ReviewedRevisions"`
	CountAttr uint32        `xml:"count,attr,omitempty"`
	Reviewed  []*CTReviewed `xml:"reviewed"`
}

// CTReviewed ...
type CTReviewed struct {
	XMLName xml.Name `xml:"CT_Reviewed"`
	RIdAttr uint32   `xml:"rId,attr"`
}

// CTUndoInfo ...
type CTUndoInfo struct {
	XMLName   xml.Name `xml:"CT_UndoInfo"`
	IndexAttr uint32   `xml:"index,attr"`
	ExpAttr   string   `xml:"exp,attr"`
	Ref3DAttr bool     `xml:"ref3D,attr,omitempty"`
	ArrayAttr bool     `xml:"array,attr,omitempty"`
	VAttr     bool     `xml:"v,attr,omitempty"`
	NfAttr    bool     `xml:"nf,attr,omitempty"`
	CsAttr    bool     `xml:"cs,attr,omitempty"`
	DrAttr    string   `xml:"dr,attr"`
	DnAttr    string   `xml:"dn,attr,omitempty"`
	RAttr     string   `xml:"r,attr,omitempty"`
	SIdAttr   uint32   `xml:"sId,attr,omitempty"`
}

// CTRevisionRowColumn ...
type CTRevisionRowColumn struct {
	XMLName    xml.Name `xml:"CT_RevisionRowColumn"`
	AGRevData  *AGRevData
	SIdAttr    uint32                  `xml:"sId,attr"`
	EolAttr    bool                    `xml:"eol,attr,omitempty"`
	RefAttr    string                  `xml:"ref,attr"`
	ActionAttr string                  `xml:"action,attr"`
	EdgeAttr   bool                    `xml:"edge,attr,omitempty"`
	Undo       []*CTUndoInfo           `xml:"undo"`
	Rcc        []*CTRevisionCellChange `xml:"rcc"`
	Rfmt       []*CTRevisionFormatting `xml:"rfmt"`
}

// CTRevisionMove ...
type CTRevisionMove struct {
	XMLName           xml.Name `xml:"CT_RevisionMove"`
	AGRevData         *AGRevData
	SheetIdAttr       uint32                  `xml:"sheetId,attr"`
	SourceAttr        string                  `xml:"source,attr"`
	DestinationAttr   string                  `xml:"destination,attr"`
	SourceSheetIdAttr uint32                  `xml:"sourceSheetId,attr,omitempty"`
	Undo              []*CTUndoInfo           `xml:"undo"`
	Rcc               []*CTRevisionCellChange `xml:"rcc"`
	Rfmt              []*CTRevisionFormatting `xml:"rfmt"`
}

// CTRevisionCustomView ...
type CTRevisionCustomView struct {
	XMLName    xml.Name `xml:"CT_RevisionCustomView"`
	GuidAttr   string   `xml:"guid,attr"`
	ActionAttr string   `xml:"action,attr"`
}

// CTRevisionSheetRename ...
type CTRevisionSheetRename struct {
	XMLName     xml.Name `xml:"CT_RevisionSheetRename"`
	AGRevData   *AGRevData
	SheetIdAttr uint32           `xml:"sheetId,attr"`
	OldNameAttr string           `xml:"oldName,attr"`
	NewNameAttr string           `xml:"newName,attr"`
	ExtLst      *CTExtensionList `xml:"extLst"`
}

// CTRevisionInsertSheet ...
type CTRevisionInsertSheet struct {
	XMLName           xml.Name `xml:"CT_RevisionInsertSheet"`
	AGRevData         *AGRevData
	SheetIdAttr       uint32 `xml:"sheetId,attr"`
	NameAttr          string `xml:"name,attr"`
	SheetPositionAttr uint32 `xml:"sheetPosition,attr"`
}

// CTRevisionCellChange ...
type CTRevisionCellChange struct {
	XMLName                    xml.Name `xml:"CT_RevisionCellChange"`
	AGRevData                  *AGRevData
	SIdAttr                    uint32           `xml:"sId,attr"`
	OdxfAttr                   bool             `xml:"odxf,attr,omitempty"`
	XfDxfAttr                  bool             `xml:"xfDxf,attr,omitempty"`
	SAttr                      bool             `xml:"s,attr,omitempty"`
	DxfAttr                    bool             `xml:"dxf,attr,omitempty"`
	NumFmtIdAttr               uint32           `xml:"numFmtId,attr,omitempty"`
	QuotePrefixAttr            bool             `xml:"quotePrefix,attr,omitempty"`
	OldQuotePrefixAttr         bool             `xml:"oldQuotePrefix,attr,omitempty"`
	PhAttr                     bool             `xml:"ph,attr,omitempty"`
	OldPhAttr                  bool             `xml:"oldPh,attr,omitempty"`
	EndOfListFormulaUpdateAttr bool             `xml:"endOfListFormulaUpdate,attr,omitempty"`
	Oc                         *CTCell          `xml:"oc"`
	Nc                         *CTCell          `xml:"nc"`
	Odxf                       *CTDxf           `xml:"odxf"`
	Ndxf                       *CTDxf           `xml:"ndxf"`
	ExtLst                     *CTExtensionList `xml:"extLst"`
}

// CTRevisionFormatting ...
type CTRevisionFormatting struct {
	XMLName     xml.Name         `xml:"CT_RevisionFormatting"`
	SheetIdAttr uint32           `xml:"sheetId,attr"`
	XfDxfAttr   bool             `xml:"xfDxf,attr,omitempty"`
	SAttr       bool             `xml:"s,attr,omitempty"`
	SqrefAttr   *STSqref         `xml:"sqref,attr"`
	StartAttr   uint32           `xml:"start,attr,omitempty"`
	LengthAttr  uint32           `xml:"length,attr,omitempty"`
	Dxf         *CTDxf           `xml:"dxf"`
	ExtLst      *CTExtensionList `xml:"extLst"`
}

// CTRevisionAutoFormatting ...
type CTRevisionAutoFormatting struct {
	XMLName      xml.Name `xml:"CT_RevisionAutoFormatting"`
	AGAutoFormat *AGAutoFormat
	SheetIdAttr  uint32 `xml:"sheetId,attr"`
	RefAttr      string `xml:"ref,attr"`
}

// CTRevisionComment ...
type CTRevisionComment struct {
	XMLName          xml.Name `xml:"CT_RevisionComment"`
	SheetIdAttr      uint32   `xml:"sheetId,attr"`
	CellAttr         string   `xml:"cell,attr"`
	GuidAttr         string   `xml:"guid,attr"`
	ActionAttr       string   `xml:"action,attr,omitempty"`
	AlwaysShowAttr   bool     `xml:"alwaysShow,attr,omitempty"`
	OldAttr          bool     `xml:"old,attr,omitempty"`
	HiddenRowAttr    bool     `xml:"hiddenRow,attr,omitempty"`
	HiddenColumnAttr bool     `xml:"hiddenColumn,attr,omitempty"`
	AuthorAttr       string   `xml:"author,attr"`
	OldLengthAttr    uint32   `xml:"oldLength,attr,omitempty"`
	NewLengthAttr    uint32   `xml:"newLength,attr,omitempty"`
}

// CTRevisionDefinedName ...
type CTRevisionDefinedName struct {
	XMLName                xml.Name `xml:"CT_RevisionDefinedName"`
	AGRevData              *AGRevData
	LocalSheetIdAttr       uint32           `xml:"localSheetId,attr,omitempty"`
	CustomViewAttr         bool             `xml:"customView,attr,omitempty"`
	NameAttr               string           `xml:"name,attr"`
	FunctionAttr           bool             `xml:"function,attr,omitempty"`
	OldFunctionAttr        bool             `xml:"oldFunction,attr,omitempty"`
	FunctionGroupIdAttr    uint8            `xml:"functionGroupId,attr,omitempty"`
	OldFunctionGroupIdAttr uint8            `xml:"oldFunctionGroupId,attr,omitempty"`
	ShortcutKeyAttr        uint8            `xml:"shortcutKey,attr,omitempty"`
	OldShortcutKeyAttr     uint8            `xml:"oldShortcutKey,attr,omitempty"`
	HiddenAttr             bool             `xml:"hidden,attr,omitempty"`
	OldHiddenAttr          bool             `xml:"oldHidden,attr,omitempty"`
	CustomMenuAttr         string           `xml:"customMenu,attr,omitempty"`
	OldCustomMenuAttr      string           `xml:"oldCustomMenu,attr,omitempty"`
	DescriptionAttr        string           `xml:"description,attr,omitempty"`
	OldDescriptionAttr     string           `xml:"oldDescription,attr,omitempty"`
	HelpAttr               string           `xml:"help,attr,omitempty"`
	OldHelpAttr            string           `xml:"oldHelp,attr,omitempty"`
	StatusBarAttr          string           `xml:"statusBar,attr,omitempty"`
	OldStatusBarAttr       string           `xml:"oldStatusBar,attr,omitempty"`
	CommentAttr            string           `xml:"comment,attr,omitempty"`
	OldCommentAttr         string           `xml:"oldComment,attr,omitempty"`
	Formula                string           `xml:"formula"`
	OldFormula             string           `xml:"oldFormula"`
	ExtLst                 *CTExtensionList `xml:"extLst"`
}

// CTRevisionConflict ...
type CTRevisionConflict struct {
	XMLName     xml.Name `xml:"CT_RevisionConflict"`
	AGRevData   *AGRevData
	SheetIdAttr uint32 `xml:"sheetId,attr,omitempty"`
}

// CTRevisionQueryTableField ...
type CTRevisionQueryTableField struct {
	XMLName     xml.Name `xml:"CT_RevisionQueryTableField"`
	SheetIdAttr uint32   `xml:"sheetId,attr"`
	RefAttr     string   `xml:"ref,attr"`
	FieldIdAttr uint32   `xml:"fieldId,attr"`
}

// STrwColActionType ...
type STrwColActionType string

// STRevisionAction ...
type STRevisionAction string

// STFormulaExpression ...
type STFormulaExpression string

// Users ...
type Users *CTUsers

// CTUsers ...
type CTUsers struct {
	XMLName   xml.Name        `xml:"CT_Users"`
	CountAttr uint32          `xml:"count,attr,omitempty"`
	UserInfo  []*CTSharedUser `xml:"userInfo"`
}

// CTSharedUser ...
type CTSharedUser struct {
	XMLName      xml.Name         `xml:"CT_SharedUser"`
	GuidAttr     string           `xml:"guid,attr"`
	NameAttr     string           `xml:"name,attr"`
	IdAttr       int              `xml:"id,attr"`
	DateTimeAttr string           `xml:"dateTime,attr"`
	ExtLst       *CTExtensionList `xml:"extLst"`
}

// Worksheet ...
type Worksheet *CTWorksheet

// Chartsheet ...
type Chartsheet *CTChartsheet

// Dialogsheet ...
type Dialogsheet *CTDialogsheet

// CTMacrosheet ...
type CTMacrosheet struct {
	XMLName               xml.Name                   `xml:"CT_Macrosheet"`
	SheetPr               *CTSheetPr                 `xml:"sheetPr"`
	Dimension             *CTSheetDimension          `xml:"dimension"`
	SheetViews            *CTSheetViews              `xml:"sheetViews"`
	SheetFormatPr         *CTSheetFormatPr           `xml:"sheetFormatPr"`
	Cols                  []*CTCols                  `xml:"cols"`
	SheetData             *CTSheetData               `xml:"sheetData"`
	SheetProtection       *CTSheetProtection         `xml:"sheetProtection"`
	AutoFilter            *CTAutoFilter              `xml:"autoFilter"`
	SortState             *CTSortState               `xml:"sortState"`
	DataConsolidate       *CTDataConsolidate         `xml:"dataConsolidate"`
	CustomSheetViews      *CTCustomSheetViews        `xml:"customSheetViews"`
	PhoneticPr            *CTPhoneticPr              `xml:"phoneticPr"`
	ConditionalFormatting []*CTConditionalFormatting `xml:"conditionalFormatting"`
	PrintOptions          *CTPrintOptions            `xml:"printOptions"`
	PageMargins           *CTPageMargins             `xml:"pageMargins"`
	PageSetup             *CTPageSetup               `xml:"pageSetup"`
	HeaderFooter          *CTHeaderFooter            `xml:"headerFooter"`
	RowBreaks             *CTPageBreak               `xml:"rowBreaks"`
	ColBreaks             *CTPageBreak               `xml:"colBreaks"`
	CustomProperties      *CTCustomProperties        `xml:"customProperties"`
	Drawing               *CTDrawing                 `xml:"drawing"`
	DrawingHF             *CTDrawingHF               `xml:"drawingHF"`
	Picture               *CTSheetBackgroundPicture  `xml:"picture"`
	OleObjects            *CTOleObjects              `xml:"oleObjects"`
	ExtLst                *CTExtensionList           `xml:"extLst"`
}

// CTDialogsheet ...
type CTDialogsheet struct {
	XMLName          xml.Name            `xml:"CT_Dialogsheet"`
	SheetPr          *CTSheetPr          `xml:"sheetPr"`
	SheetViews       *CTSheetViews       `xml:"sheetViews"`
	SheetFormatPr    *CTSheetFormatPr    `xml:"sheetFormatPr"`
	SheetProtection  *CTSheetProtection  `xml:"sheetProtection"`
	CustomSheetViews *CTCustomSheetViews `xml:"customSheetViews"`
	PrintOptions     *CTPrintOptions     `xml:"printOptions"`
	PageMargins      *CTPageMargins      `xml:"pageMargins"`
	PageSetup        *CTPageSetup        `xml:"pageSetup"`
	HeaderFooter     *CTHeaderFooter     `xml:"headerFooter"`
	Drawing          *CTDrawing          `xml:"drawing"`
	DrawingHF        *CTDrawingHF        `xml:"drawingHF"`
	OleObjects       *CTOleObjects       `xml:"oleObjects"`
	Controls         *CTControls         `xml:"controls"`
	ExtLst           *CTExtensionList    `xml:"extLst"`
}

// CTWorksheet ...
type CTWorksheet struct {
	XMLName               xml.Name                   `xml:"CT_Worksheet"`
	SheetPr               *CTSheetPr                 `xml:"sheetPr"`
	Dimension             *CTSheetDimension          `xml:"dimension"`
	SheetViews            *CTSheetViews              `xml:"sheetViews"`
	SheetFormatPr         *CTSheetFormatPr           `xml:"sheetFormatPr"`
	Cols                  []*CTCols                  `xml:"cols"`
	SheetData             *CTSheetData               `xml:"sheetData"`
	SheetCalcPr           *CTSheetCalcPr             `xml:"sheetCalcPr"`
	SheetProtection       *CTSheetProtection         `xml:"sheetProtection"`
	ProtectedRanges       *CTProtectedRanges         `xml:"protectedRanges"`
	Scenarios             *CTScenarios               `xml:"scenarios"`
	AutoFilter            *CTAutoFilter              `xml:"autoFilter"`
	SortState             *CTSortState               `xml:"sortState"`
	DataConsolidate       *CTDataConsolidate         `xml:"dataConsolidate"`
	CustomSheetViews      *CTCustomSheetViews        `xml:"customSheetViews"`
	MergeCells            *CTMergeCells              `xml:"mergeCells"`
	PhoneticPr            *CTPhoneticPr              `xml:"phoneticPr"`
	ConditionalFormatting []*CTConditionalFormatting `xml:"conditionalFormatting"`
	DataValidations       *CTDataValidations         `xml:"dataValidations"`
	Hyperlinks            *CTHyperlinks              `xml:"hyperlinks"`
	PrintOptions          *CTPrintOptions            `xml:"printOptions"`
	PageMargins           *CTPageMargins             `xml:"pageMargins"`
	PageSetup             *CTPageSetup               `xml:"pageSetup"`
	HeaderFooter          *CTHeaderFooter            `xml:"headerFooter"`
	RowBreaks             *CTPageBreak               `xml:"rowBreaks"`
	ColBreaks             *CTPageBreak               `xml:"colBreaks"`
	CustomProperties      *CTCustomProperties        `xml:"customProperties"`
	CellWatches           *CTCellWatches             `xml:"cellWatches"`
	IgnoredErrors         *CTIgnoredErrors           `xml:"ignoredErrors"`
	SmartTags             *CTSmartTags               `xml:"smartTags"`
	Drawing               *CTDrawing                 `xml:"drawing"`
	DrawingHF             *CTDrawingHF               `xml:"drawingHF"`
	Picture               *CTSheetBackgroundPicture  `xml:"picture"`
	OleObjects            *CTOleObjects              `xml:"oleObjects"`
	Controls              *CTControls                `xml:"controls"`
	WebPublishItems       *CTWebPublishItems         `xml:"webPublishItems"`
	TableParts            *CTTableParts              `xml:"tableParts"`
	ExtLst                *CTExtensionList           `xml:"extLst"`
}

// CTSheetData ...
type CTSheetData struct {
	XMLName xml.Name `xml:"CT_SheetData"`
	Row     []*CTRow `xml:"row"`
}

// CTSheetCalcPr ...
type CTSheetCalcPr struct {
	XMLName            xml.Name `xml:"CT_SheetCalcPr"`
	FullCalcOnLoadAttr bool     `xml:"fullCalcOnLoad,attr,omitempty"`
}

// CTSheetFormatPr ...
type CTSheetFormatPr struct {
	XMLName              xml.Name `xml:"CT_SheetFormatPr"`
	BaseColWidthAttr     uint32   `xml:"baseColWidth,attr,omitempty"`
	DefaultColWidthAttr  float64  `xml:"defaultColWidth,attr,omitempty"`
	DefaultRowHeightAttr float64  `xml:"defaultRowHeight,attr"`
	CustomHeightAttr     bool     `xml:"customHeight,attr,omitempty"`
	ZeroHeightAttr       bool     `xml:"zeroHeight,attr,omitempty"`
	ThickTopAttr         bool     `xml:"thickTop,attr,omitempty"`
	ThickBottomAttr      bool     `xml:"thickBottom,attr,omitempty"`
	OutlineLevelRowAttr  uint8    `xml:"outlineLevelRow,attr,omitempty"`
	OutlineLevelColAttr  uint8    `xml:"outlineLevelCol,attr,omitempty"`
}

// CTCols ...
type CTCols struct {
	XMLName xml.Name `xml:"CT_Cols"`
	Col     []*CTCol `xml:"col"`
}

// CTCol ...
type CTCol struct {
	XMLName          xml.Name `xml:"CT_Col"`
	MinAttr          uint32   `xml:"min,attr"`
	MaxAttr          uint32   `xml:"max,attr"`
	WidthAttr        float64  `xml:"width,attr,omitempty"`
	StyleAttr        uint32   `xml:"style,attr,omitempty"`
	HiddenAttr       bool     `xml:"hidden,attr,omitempty"`
	BestFitAttr      bool     `xml:"bestFit,attr,omitempty"`
	CustomWidthAttr  bool     `xml:"customWidth,attr,omitempty"`
	PhoneticAttr     bool     `xml:"phonetic,attr,omitempty"`
	OutlineLevelAttr uint8    `xml:"outlineLevel,attr,omitempty"`
	CollapsedAttr    bool     `xml:"collapsed,attr,omitempty"`
}

// STCellSpan ...
type STCellSpan string

// STCellSpans ...
type STCellSpans []string

// CTRow ...
type CTRow struct {
	XMLName          xml.Name         `xml:"CT_Row"`
	RAttr            uint32           `xml:"r,attr,omitempty"`
	SpansAttr        *STCellSpans     `xml:"spans,attr,omitempty"`
	SAttr            uint32           `xml:"s,attr,omitempty"`
	CustomFormatAttr bool             `xml:"customFormat,attr,omitempty"`
	HtAttr           float64          `xml:"ht,attr,omitempty"`
	HiddenAttr       bool             `xml:"hidden,attr,omitempty"`
	CustomHeightAttr bool             `xml:"customHeight,attr,omitempty"`
	OutlineLevelAttr uint8            `xml:"outlineLevel,attr,omitempty"`
	CollapsedAttr    bool             `xml:"collapsed,attr,omitempty"`
	ThickTopAttr     bool             `xml:"thickTop,attr,omitempty"`
	ThickBotAttr     bool             `xml:"thickBot,attr,omitempty"`
	PhAttr           bool             `xml:"ph,attr,omitempty"`
	C                []*CTCell        `xml:"c"`
	ExtLst           *CTExtensionList `xml:"extLst"`
}

// CTCell ...
type CTCell struct {
	XMLName xml.Name         `xml:"CT_Cell"`
	RAttr   string           `xml:"r,attr,omitempty"`
	SAttr   uint32           `xml:"s,attr,omitempty"`
	TAttr   string           `xml:"t,attr,omitempty"`
	CmAttr  uint32           `xml:"cm,attr,omitempty"`
	VmAttr  uint32           `xml:"vm,attr,omitempty"`
	PhAttr  bool             `xml:"ph,attr,omitempty"`
	F       *CTCellFormula   `xml:"f"`
	V       string           `xml:"v"`
	Is      *CTRst           `xml:"is"`
	ExtLst  *CTExtensionList `xml:"extLst"`
}

// STCellType ...
type STCellType string

// STCellFormulaType ...
type STCellFormulaType string

// CTSheetPr ...
type CTSheetPr struct {
	XMLName                               xml.Name       `xml:"CT_SheetPr"`
	SyncHorizontalAttr                    bool           `xml:"syncHorizontal,attr,omitempty"`
	SyncVerticalAttr                      bool           `xml:"syncVertical,attr,omitempty"`
	SyncRefAttr                           string         `xml:"syncRef,attr,omitempty"`
	TransitionEvaluationAttr              bool           `xml:"transitionEvaluation,attr,omitempty"`
	TransitionEntryAttr                   bool           `xml:"transitionEntry,attr,omitempty"`
	PublishedAttr                         bool           `xml:"published,attr,omitempty"`
	CodeNameAttr                          string         `xml:"codeName,attr,omitempty"`
	FilterModeAttr                        bool           `xml:"filterMode,attr,omitempty"`
	EnableFormatConditionsCalculationAttr bool           `xml:"enableFormatConditionsCalculation,attr,omitempty"`
	TabColor                              *CTColor       `xml:"tabColor"`
	OutlinePr                             *CTOutlinePr   `xml:"outlinePr"`
	PageSetUpPr                           *CTPageSetUpPr `xml:"pageSetUpPr"`
}

// CTSheetDimension ...
type CTSheetDimension struct {
	XMLName xml.Name `xml:"CT_SheetDimension"`
	RefAttr string   `xml:"ref,attr"`
}

// CTSheetViews ...
type CTSheetViews struct {
	XMLName   xml.Name         `xml:"CT_SheetViews"`
	SheetView []*CTSheetView   `xml:"sheetView"`
	ExtLst    *CTExtensionList `xml:"extLst"`
}

// CTSheetView ...
type CTSheetView struct {
	XMLName                      xml.Name            `xml:"CT_SheetView"`
	WindowProtectionAttr         bool                `xml:"windowProtection,attr,omitempty"`
	ShowFormulasAttr             bool                `xml:"showFormulas,attr,omitempty"`
	ShowGridLinesAttr            bool                `xml:"showGridLines,attr,omitempty"`
	ShowRowColHeadersAttr        bool                `xml:"showRowColHeaders,attr,omitempty"`
	ShowZerosAttr                bool                `xml:"showZeros,attr,omitempty"`
	RightToLeftAttr              bool                `xml:"rightToLeft,attr,omitempty"`
	TabSelectedAttr              bool                `xml:"tabSelected,attr,omitempty"`
	ShowRulerAttr                bool                `xml:"showRuler,attr,omitempty"`
	ShowOutlineSymbolsAttr       bool                `xml:"showOutlineSymbols,attr,omitempty"`
	DefaultGridColorAttr         bool                `xml:"defaultGridColor,attr,omitempty"`
	ShowWhiteSpaceAttr           bool                `xml:"showWhiteSpace,attr,omitempty"`
	ViewAttr                     string              `xml:"view,attr,omitempty"`
	TopLeftCellAttr              string              `xml:"topLeftCell,attr,omitempty"`
	ColorIdAttr                  uint32              `xml:"colorId,attr,omitempty"`
	ZoomScaleAttr                uint32              `xml:"zoomScale,attr,omitempty"`
	ZoomScaleNormalAttr          uint32              `xml:"zoomScaleNormal,attr,omitempty"`
	ZoomScaleSheetLayoutViewAttr uint32              `xml:"zoomScaleSheetLayoutView,attr,omitempty"`
	ZoomScalePageLayoutViewAttr  uint32              `xml:"zoomScalePageLayoutView,attr,omitempty"`
	WorkbookViewIdAttr           uint32              `xml:"workbookViewId,attr"`
	Pane                         *CTPane             `xml:"pane"`
	Selection                    []*CTSelection      `xml:"selection"`
	PivotSelection               []*CTPivotSelection `xml:"pivotSelection"`
	ExtLst                       *CTExtensionList    `xml:"extLst"`
}

// CTPane ...
type CTPane struct {
	XMLName         xml.Name `xml:"CT_Pane"`
	XSplitAttr      float64  `xml:"xSplit,attr,omitempty"`
	YSplitAttr      float64  `xml:"ySplit,attr,omitempty"`
	TopLeftCellAttr string   `xml:"topLeftCell,attr,omitempty"`
	ActivePaneAttr  string   `xml:"activePane,attr,omitempty"`
	StateAttr       string   `xml:"state,attr,omitempty"`
}

// CTPivotSelection ...
type CTPivotSelection struct {
	XMLName         xml.Name     `xml:"CT_PivotSelection"`
	PaneAttr        string       `xml:"pane,attr,omitempty"`
	ShowHeaderAttr  bool         `xml:"showHeader,attr,omitempty"`
	LabelAttr       bool         `xml:"label,attr,omitempty"`
	DataAttr        bool         `xml:"data,attr,omitempty"`
	ExtendableAttr  bool         `xml:"extendable,attr,omitempty"`
	CountAttr       uint32       `xml:"count,attr,omitempty"`
	AxisAttr        string       `xml:"axis,attr,omitempty"`
	DimensionAttr   uint32       `xml:"dimension,attr,omitempty"`
	StartAttr       uint32       `xml:"start,attr,omitempty"`
	MinAttr         uint32       `xml:"min,attr,omitempty"`
	MaxAttr         uint32       `xml:"max,attr,omitempty"`
	ActiveRowAttr   uint32       `xml:"activeRow,attr,omitempty"`
	ActiveColAttr   uint32       `xml:"activeCol,attr,omitempty"`
	PreviousRowAttr uint32       `xml:"previousRow,attr,omitempty"`
	PreviousColAttr uint32       `xml:"previousCol,attr,omitempty"`
	ClickAttr       uint32       `xml:"click,attr,omitempty"`
	RIdAttr         string       `xml:"r:id,attr,omitempty"`
	PivotArea       *CTPivotArea `xml:"pivotArea"`
}

// CTSelection ...
type CTSelection struct {
	XMLName          xml.Name `xml:"CT_Selection"`
	PaneAttr         string   `xml:"pane,attr,omitempty"`
	ActiveCellAttr   string   `xml:"activeCell,attr,omitempty"`
	ActiveCellIdAttr uint32   `xml:"activeCellId,attr,omitempty"`
	SqrefAttr        *STSqref `xml:"sqref,attr,omitempty"`
}

// STPane ...
type STPane string

// CTPageBreak ...
type CTPageBreak struct {
	XMLName              xml.Name   `xml:"CT_PageBreak"`
	CountAttr            uint32     `xml:"count,attr,omitempty"`
	ManualBreakCountAttr uint32     `xml:"manualBreakCount,attr,omitempty"`
	Brk                  []*CTBreak `xml:"brk"`
}

// CTBreak ...
type CTBreak struct {
	XMLName xml.Name `xml:"CT_Break"`
	IdAttr  uint32   `xml:"id,attr,omitempty"`
	MinAttr uint32   `xml:"min,attr,omitempty"`
	MaxAttr uint32   `xml:"max,attr,omitempty"`
	ManAttr bool     `xml:"man,attr,omitempty"`
	PtAttr  bool     `xml:"pt,attr,omitempty"`
}

// STSheetViewType ...
type STSheetViewType string

// CTOutlinePr ...
type CTOutlinePr struct {
	XMLName                xml.Name `xml:"CT_OutlinePr"`
	ApplyStylesAttr        bool     `xml:"applyStyles,attr,omitempty"`
	SummaryBelowAttr       bool     `xml:"summaryBelow,attr,omitempty"`
	SummaryRightAttr       bool     `xml:"summaryRight,attr,omitempty"`
	ShowOutlineSymbolsAttr bool     `xml:"showOutlineSymbols,attr,omitempty"`
}

// CTPageSetUpPr ...
type CTPageSetUpPr struct {
	XMLName            xml.Name `xml:"CT_PageSetUpPr"`
	AutoPageBreaksAttr bool     `xml:"autoPageBreaks,attr,omitempty"`
	FitToPageAttr      bool     `xml:"fitToPage,attr,omitempty"`
}

// CTDataConsolidate ...
type CTDataConsolidate struct {
	XMLName         xml.Name    `xml:"CT_DataConsolidate"`
	FunctionAttr    string      `xml:"function,attr,omitempty"`
	StartLabelsAttr bool        `xml:"startLabels,attr,omitempty"`
	TopLabelsAttr   bool        `xml:"topLabels,attr,omitempty"`
	LinkAttr        bool        `xml:"link,attr,omitempty"`
	DataRefs        *CTDataRefs `xml:"dataRefs"`
}

// STDataConsolidateFunction ...
type STDataConsolidateFunction string

// CTDataRefs ...
type CTDataRefs struct {
	XMLName   xml.Name     `xml:"CT_DataRefs"`
	CountAttr uint32       `xml:"count,attr,omitempty"`
	DataRef   []*CTDataRef `xml:"dataRef"`
}

// CTDataRef ...
type CTDataRef struct {
	XMLName   xml.Name `xml:"CT_DataRef"`
	RefAttr   string   `xml:"ref,attr,omitempty"`
	NameAttr  string   `xml:"name,attr,omitempty"`
	SheetAttr string   `xml:"sheet,attr,omitempty"`
	RIdAttr   string   `xml:"r:id,attr,omitempty"`
}

// CTMergeCells ...
type CTMergeCells struct {
	XMLName   xml.Name       `xml:"CT_MergeCells"`
	CountAttr uint32         `xml:"count,attr,omitempty"`
	MergeCell []*CTMergeCell `xml:"mergeCell"`
}

// CTMergeCell ...
type CTMergeCell struct {
	XMLName xml.Name `xml:"CT_MergeCell"`
	RefAttr string   `xml:"ref,attr"`
}

// CTSmartTags ...
type CTSmartTags struct {
	XMLName       xml.Name           `xml:"CT_SmartTags"`
	CellSmartTags []*CTCellSmartTags `xml:"cellSmartTags"`
}

// CTCellSmartTags ...
type CTCellSmartTags struct {
	XMLName      xml.Name          `xml:"CT_CellSmartTags"`
	RAttr        string            `xml:"r,attr"`
	CellSmartTag []*CTCellSmartTag `xml:"cellSmartTag"`
}

// CTCellSmartTag ...
type CTCellSmartTag struct {
	XMLName        xml.Name            `xml:"CT_CellSmartTag"`
	TypeAttr       uint32              `xml:"type,attr"`
	DeletedAttr    bool                `xml:"deleted,attr,omitempty"`
	XmlBasedAttr   bool                `xml:"xmlBased,attr,omitempty"`
	CellSmartTagPr []*CTCellSmartTagPr `xml:"cellSmartTagPr"`
}

// CTCellSmartTagPr ...
type CTCellSmartTagPr struct {
	XMLName xml.Name `xml:"CT_CellSmartTagPr"`
	KeyAttr string   `xml:"key,attr"`
	ValAttr string   `xml:"val,attr"`
}

// CTDrawing ...
type CTDrawing struct {
	XMLName xml.Name `xml:"CT_Drawing"`
	RIdAttr string   `xml:"r:id,attr"`
}

// CTDrawingHF ...
type CTDrawingHF struct {
	XMLName xml.Name `xml:"CT_DrawingHF"`
	RIdAttr string   `xml:"r:id,attr"`
	LhoAttr uint32   `xml:"lho,attr,omitempty"`
	LheAttr uint32   `xml:"lhe,attr,omitempty"`
	LhfAttr uint32   `xml:"lhf,attr,omitempty"`
	ChoAttr uint32   `xml:"cho,attr,omitempty"`
	CheAttr uint32   `xml:"che,attr,omitempty"`
	ChfAttr uint32   `xml:"chf,attr,omitempty"`
	RhoAttr uint32   `xml:"rho,attr,omitempty"`
	RheAttr uint32   `xml:"rhe,attr,omitempty"`
	RhfAttr uint32   `xml:"rhf,attr,omitempty"`
	LfoAttr uint32   `xml:"lfo,attr,omitempty"`
	LfeAttr uint32   `xml:"lfe,attr,omitempty"`
	LffAttr uint32   `xml:"lff,attr,omitempty"`
	CfoAttr uint32   `xml:"cfo,attr,omitempty"`
	CfeAttr uint32   `xml:"cfe,attr,omitempty"`
	CffAttr uint32   `xml:"cff,attr,omitempty"`
	RfoAttr uint32   `xml:"rfo,attr,omitempty"`
	RfeAttr uint32   `xml:"rfe,attr,omitempty"`
	RffAttr uint32   `xml:"rff,attr,omitempty"`
}

// CTCustomSheetViews ...
type CTCustomSheetViews struct {
	XMLName         xml.Name             `xml:"CT_CustomSheetViews"`
	CustomSheetView []*CTCustomSheetView `xml:"customSheetView"`
}

// CTCustomSheetView ...
type CTCustomSheetView struct {
	XMLName            xml.Name         `xml:"CT_CustomSheetView"`
	GuidAttr           string           `xml:"guid,attr"`
	ScaleAttr          uint32           `xml:"scale,attr,omitempty"`
	ColorIdAttr        uint32           `xml:"colorId,attr,omitempty"`
	ShowPageBreaksAttr bool             `xml:"showPageBreaks,attr,omitempty"`
	ShowFormulasAttr   bool             `xml:"showFormulas,attr,omitempty"`
	ShowGridLinesAttr  bool             `xml:"showGridLines,attr,omitempty"`
	ShowRowColAttr     bool             `xml:"showRowCol,attr,omitempty"`
	OutlineSymbolsAttr bool             `xml:"outlineSymbols,attr,omitempty"`
	ZeroValuesAttr     bool             `xml:"zeroValues,attr,omitempty"`
	FitToPageAttr      bool             `xml:"fitToPage,attr,omitempty"`
	PrintAreaAttr      bool             `xml:"printArea,attr,omitempty"`
	FilterAttr         bool             `xml:"filter,attr,omitempty"`
	ShowAutoFilterAttr bool             `xml:"showAutoFilter,attr,omitempty"`
	HiddenRowsAttr     bool             `xml:"hiddenRows,attr,omitempty"`
	HiddenColumnsAttr  bool             `xml:"hiddenColumns,attr,omitempty"`
	StateAttr          string           `xml:"state,attr,omitempty"`
	FilterUniqueAttr   bool             `xml:"filterUnique,attr,omitempty"`
	ViewAttr           string           `xml:"view,attr,omitempty"`
	ShowRulerAttr      bool             `xml:"showRuler,attr,omitempty"`
	TopLeftCellAttr    string           `xml:"topLeftCell,attr,omitempty"`
	Pane               *CTPane          `xml:"pane"`
	Selection          *CTSelection     `xml:"selection"`
	RowBreaks          *CTPageBreak     `xml:"rowBreaks"`
	ColBreaks          *CTPageBreak     `xml:"colBreaks"`
	PageMargins        *CTPageMargins   `xml:"pageMargins"`
	PrintOptions       *CTPrintOptions  `xml:"printOptions"`
	PageSetup          *CTPageSetup     `xml:"pageSetup"`
	HeaderFooter       *CTHeaderFooter  `xml:"headerFooter"`
	AutoFilter         *CTAutoFilter    `xml:"autoFilter"`
	ExtLst             *CTExtensionList `xml:"extLst"`
}

// CTDataValidations ...
type CTDataValidations struct {
	XMLName            xml.Name            `xml:"CT_DataValidations"`
	DisablePromptsAttr bool                `xml:"disablePrompts,attr,omitempty"`
	XWindowAttr        uint32              `xml:"xWindow,attr,omitempty"`
	YWindowAttr        uint32              `xml:"yWindow,attr,omitempty"`
	CountAttr          uint32              `xml:"count,attr,omitempty"`
	DataValidation     []*CTDataValidation `xml:"dataValidation"`
}

// CTDataValidation ...
type CTDataValidation struct {
	XMLName              xml.Name `xml:"CT_DataValidation"`
	TypeAttr             string   `xml:"type,attr,omitempty"`
	ErrorStyleAttr       string   `xml:"errorStyle,attr,omitempty"`
	ImeModeAttr          string   `xml:"imeMode,attr,omitempty"`
	OperatorAttr         string   `xml:"operator,attr,omitempty"`
	AllowBlankAttr       bool     `xml:"allowBlank,attr,omitempty"`
	ShowDropDownAttr     bool     `xml:"showDropDown,attr,omitempty"`
	ShowInputMessageAttr bool     `xml:"showInputMessage,attr,omitempty"`
	ShowErrorMessageAttr bool     `xml:"showErrorMessage,attr,omitempty"`
	ErrorTitleAttr       string   `xml:"errorTitle,attr,omitempty"`
	ErrorAttr            string   `xml:"error,attr,omitempty"`
	PromptTitleAttr      string   `xml:"promptTitle,attr,omitempty"`
	PromptAttr           string   `xml:"prompt,attr,omitempty"`
	SqrefAttr            *STSqref `xml:"sqref,attr"`
	Formula1             string   `xml:"formula1"`
	Formula2             string   `xml:"formula2"`
}

// STDataValidationType ...
type STDataValidationType string

// STDataValidationOperator ...
type STDataValidationOperator string

// STDataValidationErrorStyle ...
type STDataValidationErrorStyle string

// STDataValidationImeMode ...
type STDataValidationImeMode string

// STCfType ...
type STCfType string

// STTimePeriod ...
type STTimePeriod string

// STConditionalFormattingOperator ...
type STConditionalFormattingOperator string

// STCfvoType ...
type STCfvoType string

// CTConditionalFormatting ...
type CTConditionalFormatting struct {
	XMLName   xml.Name         `xml:"CT_ConditionalFormatting"`
	PivotAttr bool             `xml:"pivot,attr,omitempty"`
	SqrefAttr *STSqref         `xml:"sqref,attr,omitempty"`
	CfRule    []*CTCfRule      `xml:"cfRule"`
	ExtLst    *CTExtensionList `xml:"extLst"`
}

// CTCfRule ...
type CTCfRule struct {
	XMLName          xml.Name         `xml:"CT_CfRule"`
	TypeAttr         string           `xml:"type,attr,omitempty"`
	DxfIdAttr        uint32           `xml:"dxfId,attr,omitempty"`
	PriorityAttr     int              `xml:"priority,attr"`
	StopIfTrueAttr   bool             `xml:"stopIfTrue,attr,omitempty"`
	AboveAverageAttr bool             `xml:"aboveAverage,attr,omitempty"`
	PercentAttr      bool             `xml:"percent,attr,omitempty"`
	BottomAttr       bool             `xml:"bottom,attr,omitempty"`
	OperatorAttr     string           `xml:"operator,attr,omitempty"`
	TextAttr         string           `xml:"text,attr,omitempty"`
	TimePeriodAttr   string           `xml:"timePeriod,attr,omitempty"`
	RankAttr         uint32           `xml:"rank,attr,omitempty"`
	StdDevAttr       int              `xml:"stdDev,attr,omitempty"`
	EqualAverageAttr bool             `xml:"equalAverage,attr,omitempty"`
	Formula          []string         `xml:"formula"`
	ColorScale       *CTColorScale    `xml:"colorScale"`
	DataBar          *CTDataBar       `xml:"dataBar"`
	IconSet          *CTIconSet       `xml:"iconSet"`
	ExtLst           *CTExtensionList `xml:"extLst"`
}

// CTHyperlinks ...
type CTHyperlinks struct {
	XMLName   xml.Name       `xml:"CT_Hyperlinks"`
	Hyperlink []*CTHyperlink `xml:"hyperlink"`
}

// CTHyperlink ...
type CTHyperlink struct {
	XMLName      xml.Name `xml:"CT_Hyperlink"`
	RefAttr      string   `xml:"ref,attr"`
	RIdAttr      string   `xml:"r:id,attr,omitempty"`
	LocationAttr string   `xml:"location,attr,omitempty"`
	TooltipAttr  string   `xml:"tooltip,attr,omitempty"`
	DisplayAttr  string   `xml:"display,attr,omitempty"`
}

// CTCellFormula ...
type CTCellFormula struct {
	XMLName  xml.Name `xml:"CT_CellFormula"`
	TAttr    string   `xml:"t,attr,omitempty"`
	AcaAttr  bool     `xml:"aca,attr,omitempty"`
	RefAttr  string   `xml:"ref,attr,omitempty"`
	Dt2DAttr bool     `xml:"dt2D,attr,omitempty"`
	DtrAttr  bool     `xml:"dtr,attr,omitempty"`
	Del1Attr bool     `xml:"del1,attr,omitempty"`
	Del2Attr bool     `xml:"del2,attr,omitempty"`
	R1Attr   string   `xml:"r1,attr,omitempty"`
	R2Attr   string   `xml:"r2,attr,omitempty"`
	CaAttr   bool     `xml:"ca,attr,omitempty"`
	SiAttr   uint32   `xml:"si,attr,omitempty"`
	BxAttr   bool     `xml:"bx,attr,omitempty"`
	Value    string   `xml:",chardata"`
}

// CTColorScale ...
type CTColorScale struct {
	XMLName xml.Name   `xml:"CT_ColorScale"`
	Cfvo    []*CTCfvo  `xml:"cfvo"`
	Color   []*CTColor `xml:"color"`
}

// CTDataBar ...
type CTDataBar struct {
	XMLName       xml.Name  `xml:"CT_DataBar"`
	MinLengthAttr uint32    `xml:"minLength,attr,omitempty"`
	MaxLengthAttr uint32    `xml:"maxLength,attr,omitempty"`
	ShowValueAttr bool      `xml:"showValue,attr,omitempty"`
	Cfvo          []*CTCfvo `xml:"cfvo"`
	Color         *CTColor  `xml:"color"`
}

// CTIconSet ...
type CTIconSet struct {
	XMLName       xml.Name  `xml:"CT_IconSet"`
	IconSetAttr   string    `xml:"iconSet,attr,omitempty"`
	ShowValueAttr bool      `xml:"showValue,attr,omitempty"`
	PercentAttr   bool      `xml:"percent,attr,omitempty"`
	ReverseAttr   bool      `xml:"reverse,attr,omitempty"`
	Cfvo          []*CTCfvo `xml:"cfvo"`
}

// CTCfvo ...
type CTCfvo struct {
	XMLName  xml.Name         `xml:"CT_Cfvo"`
	TypeAttr string           `xml:"type,attr"`
	ValAttr  string           `xml:"val,attr,omitempty"`
	GteAttr  bool             `xml:"gte,attr,omitempty"`
	ExtLst   *CTExtensionList `xml:"extLst"`
}

// CTPageMargins ...
type CTPageMargins struct {
	XMLName    xml.Name `xml:"CT_PageMargins"`
	LeftAttr   float64  `xml:"left,attr"`
	RightAttr  float64  `xml:"right,attr"`
	TopAttr    float64  `xml:"top,attr"`
	BottomAttr float64  `xml:"bottom,attr"`
	HeaderAttr float64  `xml:"header,attr"`
	FooterAttr float64  `xml:"footer,attr"`
}

// CTPrintOptions ...
type CTPrintOptions struct {
	XMLName                xml.Name `xml:"CT_PrintOptions"`
	HorizontalCenteredAttr bool     `xml:"horizontalCentered,attr,omitempty"`
	VerticalCenteredAttr   bool     `xml:"verticalCentered,attr,omitempty"`
	HeadingsAttr           bool     `xml:"headings,attr,omitempty"`
	GridLinesAttr          bool     `xml:"gridLines,attr,omitempty"`
	GridLinesSetAttr       bool     `xml:"gridLinesSet,attr,omitempty"`
}

// CTPageSetup ...
type CTPageSetup struct {
	XMLName                xml.Name `xml:"CT_PageSetup"`
	PaperSizeAttr          uint32   `xml:"paperSize,attr,omitempty"`
	PaperHeightAttr        string   `xml:"paperHeight,attr,omitempty"`
	PaperWidthAttr         string   `xml:"paperWidth,attr,omitempty"`
	ScaleAttr              uint32   `xml:"scale,attr,omitempty"`
	FirstPageNumberAttr    uint32   `xml:"firstPageNumber,attr,omitempty"`
	FitToWidthAttr         uint32   `xml:"fitToWidth,attr,omitempty"`
	FitToHeightAttr        uint32   `xml:"fitToHeight,attr,omitempty"`
	PageOrderAttr          string   `xml:"pageOrder,attr,omitempty"`
	OrientationAttr        string   `xml:"orientation,attr,omitempty"`
	UsePrinterDefaultsAttr bool     `xml:"usePrinterDefaults,attr,omitempty"`
	BlackAndWhiteAttr      bool     `xml:"blackAndWhite,attr,omitempty"`
	DraftAttr              bool     `xml:"draft,attr,omitempty"`
	CellCommentsAttr       string   `xml:"cellComments,attr,omitempty"`
	UseFirstPageNumberAttr bool     `xml:"useFirstPageNumber,attr,omitempty"`
	ErrorsAttr             string   `xml:"errors,attr,omitempty"`
	HorizontalDpiAttr      uint32   `xml:"horizontalDpi,attr,omitempty"`
	VerticalDpiAttr        uint32   `xml:"verticalDpi,attr,omitempty"`
	CopiesAttr             uint32   `xml:"copies,attr,omitempty"`
	RIdAttr                string   `xml:"r:id,attr,omitempty"`
}

// STPageOrder ...
type STPageOrder string

// STOrientation ...
type STOrientation string

// STCellComments ...
type STCellComments string

// CTHeaderFooter ...
type CTHeaderFooter struct {
	XMLName              xml.Name `xml:"CT_HeaderFooter"`
	DifferentOddEvenAttr bool     `xml:"differentOddEven,attr,omitempty"`
	DifferentFirstAttr   bool     `xml:"differentFirst,attr,omitempty"`
	ScaleWithDocAttr     bool     `xml:"scaleWithDoc,attr,omitempty"`
	AlignWithMarginsAttr bool     `xml:"alignWithMargins,attr,omitempty"`
	OddHeader            string   `xml:"oddHeader"`
	OddFooter            string   `xml:"oddFooter"`
	EvenHeader           string   `xml:"evenHeader"`
	EvenFooter           string   `xml:"evenFooter"`
	FirstHeader          string   `xml:"firstHeader"`
	FirstFooter          string   `xml:"firstFooter"`
}

// STPrintError ...
type STPrintError string

// CTScenarios ...
type CTScenarios struct {
	XMLName     xml.Name      `xml:"CT_Scenarios"`
	CurrentAttr uint32        `xml:"current,attr,omitempty"`
	ShowAttr    uint32        `xml:"show,attr,omitempty"`
	SqrefAttr   *STSqref      `xml:"sqref,attr,omitempty"`
	Scenario    []*CTScenario `xml:"scenario"`
}

// CTSheetProtection ...
type CTSheetProtection struct {
	XMLName                 xml.Name `xml:"CT_SheetProtection"`
	AlgorithmNameAttr       string   `xml:"algorithmName,attr,omitempty"`
	HashValueAttr           string   `xml:"hashValue,attr,omitempty"`
	SaltValueAttr           string   `xml:"saltValue,attr,omitempty"`
	SpinCountAttr           uint32   `xml:"spinCount,attr,omitempty"`
	SheetAttr               bool     `xml:"sheet,attr,omitempty"`
	ObjectsAttr             bool     `xml:"objects,attr,omitempty"`
	ScenariosAttr           bool     `xml:"scenarios,attr,omitempty"`
	FormatCellsAttr         bool     `xml:"formatCells,attr,omitempty"`
	FormatColumnsAttr       bool     `xml:"formatColumns,attr,omitempty"`
	FormatRowsAttr          bool     `xml:"formatRows,attr,omitempty"`
	InsertColumnsAttr       bool     `xml:"insertColumns,attr,omitempty"`
	InsertRowsAttr          bool     `xml:"insertRows,attr,omitempty"`
	InsertHyperlinksAttr    bool     `xml:"insertHyperlinks,attr,omitempty"`
	DeleteColumnsAttr       bool     `xml:"deleteColumns,attr,omitempty"`
	DeleteRowsAttr          bool     `xml:"deleteRows,attr,omitempty"`
	SelectLockedCellsAttr   bool     `xml:"selectLockedCells,attr,omitempty"`
	SortAttr                bool     `xml:"sort,attr,omitempty"`
	AutoFilterAttr          bool     `xml:"autoFilter,attr,omitempty"`
	PivotTablesAttr         bool     `xml:"pivotTables,attr,omitempty"`
	SelectUnlockedCellsAttr bool     `xml:"selectUnlockedCells,attr,omitempty"`
}

// CTProtectedRanges ...
type CTProtectedRanges struct {
	XMLName        xml.Name            `xml:"CT_ProtectedRanges"`
	ProtectedRange []*CTProtectedRange `xml:"protectedRange"`
}

// CTProtectedRange ...
type CTProtectedRange struct {
	XMLName            xml.Name `xml:"CT_ProtectedRange"`
	SqrefAttr          *STSqref `xml:"sqref,attr"`
	NameAttr           string   `xml:"name,attr"`
	AlgorithmNameAttr  string   `xml:"algorithmName,attr,omitempty"`
	HashValueAttr      string   `xml:"hashValue,attr,omitempty"`
	SaltValueAttr      string   `xml:"saltValue,attr,omitempty"`
	SpinCountAttr      uint32   `xml:"spinCount,attr,omitempty"`
	SecurityDescriptor []string `xml:"securityDescriptor"`
}

// CTScenario ...
type CTScenario struct {
	XMLName     xml.Name        `xml:"CT_Scenario"`
	NameAttr    string          `xml:"name,attr"`
	LockedAttr  bool            `xml:"locked,attr,omitempty"`
	HiddenAttr  bool            `xml:"hidden,attr,omitempty"`
	CountAttr   uint32          `xml:"count,attr,omitempty"`
	UserAttr    string          `xml:"user,attr,omitempty"`
	CommentAttr string          `xml:"comment,attr,omitempty"`
	InputCells  []*CTInputCells `xml:"inputCells"`
}

// CTInputCells ...
type CTInputCells struct {
	XMLName      xml.Name `xml:"CT_InputCells"`
	RAttr        string   `xml:"r,attr"`
	DeletedAttr  bool     `xml:"deleted,attr,omitempty"`
	UndoneAttr   bool     `xml:"undone,attr,omitempty"`
	ValAttr      string   `xml:"val,attr"`
	NumFmtIdAttr uint32   `xml:"numFmtId,attr,omitempty"`
}

// CTCellWatches ...
type CTCellWatches struct {
	XMLName   xml.Name       `xml:"CT_CellWatches"`
	CellWatch []*CTCellWatch `xml:"cellWatch"`
}

// CTCellWatch ...
type CTCellWatch struct {
	XMLName xml.Name `xml:"CT_CellWatch"`
	RAttr   string   `xml:"r,attr"`
}

// CTChartsheet ...
type CTChartsheet struct {
	XMLName          xml.Name                  `xml:"CT_Chartsheet"`
	SheetPr          *CTChartsheetPr           `xml:"sheetPr"`
	SheetViews       *CTChartsheetViews        `xml:"sheetViews"`
	SheetProtection  *CTChartsheetProtection   `xml:"sheetProtection"`
	CustomSheetViews *CTCustomChartsheetViews  `xml:"customSheetViews"`
	PageMargins      *CTPageMargins            `xml:"pageMargins"`
	PageSetup        *CTCsPageSetup            `xml:"pageSetup"`
	HeaderFooter     *CTHeaderFooter           `xml:"headerFooter"`
	Drawing          *CTDrawing                `xml:"drawing"`
	DrawingHF        *CTDrawingHF              `xml:"drawingHF"`
	Picture          *CTSheetBackgroundPicture `xml:"picture"`
	WebPublishItems  *CTWebPublishItems        `xml:"webPublishItems"`
	ExtLst           *CTExtensionList          `xml:"extLst"`
}

// CTChartsheetPr ...
type CTChartsheetPr struct {
	XMLName       xml.Name `xml:"CT_ChartsheetPr"`
	PublishedAttr bool     `xml:"published,attr,omitempty"`
	CodeNameAttr  string   `xml:"codeName,attr,omitempty"`
	TabColor      *CTColor `xml:"tabColor"`
}

// CTChartsheetViews ...
type CTChartsheetViews struct {
	XMLName   xml.Name            `xml:"CT_ChartsheetViews"`
	SheetView []*CTChartsheetView `xml:"sheetView"`
	ExtLst    *CTExtensionList    `xml:"extLst"`
}

// CTChartsheetView ...
type CTChartsheetView struct {
	XMLName            xml.Name         `xml:"CT_ChartsheetView"`
	TabSelectedAttr    bool             `xml:"tabSelected,attr,omitempty"`
	ZoomScaleAttr      uint32           `xml:"zoomScale,attr,omitempty"`
	WorkbookViewIdAttr uint32           `xml:"workbookViewId,attr"`
	ZoomToFitAttr      bool             `xml:"zoomToFit,attr,omitempty"`
	ExtLst             *CTExtensionList `xml:"extLst"`
}

// CTChartsheetProtection ...
type CTChartsheetProtection struct {
	XMLName           xml.Name `xml:"CT_ChartsheetProtection"`
	AlgorithmNameAttr string   `xml:"algorithmName,attr,omitempty"`
	HashValueAttr     string   `xml:"hashValue,attr,omitempty"`
	SaltValueAttr     string   `xml:"saltValue,attr,omitempty"`
	SpinCountAttr     uint32   `xml:"spinCount,attr,omitempty"`
	ContentAttr       bool     `xml:"content,attr,omitempty"`
	ObjectsAttr       bool     `xml:"objects,attr,omitempty"`
}

// CTCsPageSetup ...
type CTCsPageSetup struct {
	XMLName                xml.Name `xml:"CT_CsPageSetup"`
	PaperSizeAttr          uint32   `xml:"paperSize,attr,omitempty"`
	PaperHeightAttr        string   `xml:"paperHeight,attr,omitempty"`
	PaperWidthAttr         string   `xml:"paperWidth,attr,omitempty"`
	FirstPageNumberAttr    uint32   `xml:"firstPageNumber,attr,omitempty"`
	OrientationAttr        string   `xml:"orientation,attr,omitempty"`
	UsePrinterDefaultsAttr bool     `xml:"usePrinterDefaults,attr,omitempty"`
	BlackAndWhiteAttr      bool     `xml:"blackAndWhite,attr,omitempty"`
	DraftAttr              bool     `xml:"draft,attr,omitempty"`
	UseFirstPageNumberAttr bool     `xml:"useFirstPageNumber,attr,omitempty"`
	HorizontalDpiAttr      uint32   `xml:"horizontalDpi,attr,omitempty"`
	VerticalDpiAttr        uint32   `xml:"verticalDpi,attr,omitempty"`
	CopiesAttr             uint32   `xml:"copies,attr,omitempty"`
	RIdAttr                string   `xml:"r:id,attr,omitempty"`
}

// CTCustomChartsheetViews ...
type CTCustomChartsheetViews struct {
	XMLName         xml.Name                  `xml:"CT_CustomChartsheetViews"`
	CustomSheetView []*CTCustomChartsheetView `xml:"customSheetView"`
}

// CTCustomChartsheetView ...
type CTCustomChartsheetView struct {
	XMLName       xml.Name        `xml:"CT_CustomChartsheetView"`
	GuidAttr      string          `xml:"guid,attr"`
	ScaleAttr     uint32          `xml:"scale,attr,omitempty"`
	StateAttr     string          `xml:"state,attr,omitempty"`
	ZoomToFitAttr bool            `xml:"zoomToFit,attr,omitempty"`
	PageMargins   *CTPageMargins  `xml:"pageMargins"`
	PageSetup     *CTCsPageSetup  `xml:"pageSetup"`
	HeaderFooter  *CTHeaderFooter `xml:"headerFooter"`
}

// CTCustomProperties ...
type CTCustomProperties struct {
	XMLName  xml.Name            `xml:"CT_CustomProperties"`
	CustomPr []*CTCustomProperty `xml:"customPr"`
}

// CTCustomProperty ...
type CTCustomProperty struct {
	XMLName  xml.Name `xml:"CT_CustomProperty"`
	NameAttr string   `xml:"name,attr"`
	RIdAttr  string   `xml:"r:id,attr"`
}

// CTOleObjects ...
type CTOleObjects struct {
	XMLName   xml.Name       `xml:"CT_OleObjects"`
	OleObject []*CTOleObject `xml:"oleObject"`
}

// CTOleObject ...
type CTOleObject struct {
	XMLName       xml.Name    `xml:"CT_OleObject"`
	ProgIdAttr    string      `xml:"progId,attr,omitempty"`
	DvAspectAttr  string      `xml:"dvAspect,attr,omitempty"`
	LinkAttr      string      `xml:"link,attr,omitempty"`
	OleUpdateAttr string      `xml:"oleUpdate,attr,omitempty"`
	AutoLoadAttr  bool        `xml:"autoLoad,attr,omitempty"`
	ShapeIdAttr   uint32      `xml:"shapeId,attr"`
	RIdAttr       string      `xml:"r:id,attr,omitempty"`
	ObjectPr      *CTObjectPr `xml:"objectPr"`
}

// CTObjectPr ...
type CTObjectPr struct {
	XMLName         xml.Name        `xml:"CT_ObjectPr"`
	LockedAttr      bool            `xml:"locked,attr,omitempty"`
	DefaultSizeAttr bool            `xml:"defaultSize,attr,omitempty"`
	PrintAttr       bool            `xml:"print,attr,omitempty"`
	DisabledAttr    bool            `xml:"disabled,attr,omitempty"`
	UiObjectAttr    bool            `xml:"uiObject,attr,omitempty"`
	AutoFillAttr    bool            `xml:"autoFill,attr,omitempty"`
	AutoLineAttr    bool            `xml:"autoLine,attr,omitempty"`
	AutoPictAttr    bool            `xml:"autoPict,attr,omitempty"`
	MacroAttr       string          `xml:"macro,attr,omitempty"`
	AltTextAttr     string          `xml:"altText,attr,omitempty"`
	DdeAttr         bool            `xml:"dde,attr,omitempty"`
	RIdAttr         string          `xml:"r:id,attr,omitempty"`
	Anchor          *CTObjectAnchor `xml:"anchor"`
}

// STDvAspect ...
type STDvAspect string

// STOleUpdate ...
type STOleUpdate string

// CTWebPublishItems ...
type CTWebPublishItems struct {
	XMLName        xml.Name            `xml:"CT_WebPublishItems"`
	CountAttr      uint32              `xml:"count,attr,omitempty"`
	WebPublishItem []*CTWebPublishItem `xml:"webPublishItem"`
}

// CTWebPublishItem ...
type CTWebPublishItem struct {
	XMLName             xml.Name `xml:"CT_WebPublishItem"`
	IdAttr              uint32   `xml:"id,attr"`
	DivIdAttr           string   `xml:"divId,attr"`
	SourceTypeAttr      string   `xml:"sourceType,attr"`
	SourceRefAttr       string   `xml:"sourceRef,attr,omitempty"`
	SourceObjectAttr    string   `xml:"sourceObject,attr,omitempty"`
	DestinationFileAttr string   `xml:"destinationFile,attr"`
	TitleAttr           string   `xml:"title,attr,omitempty"`
	AutoRepublishAttr   bool     `xml:"autoRepublish,attr,omitempty"`
}

// CTControls ...
type CTControls struct {
	XMLName xml.Name     `xml:"CT_Controls"`
	Control []*CTControl `xml:"control"`
}

// CTControl ...
type CTControl struct {
	XMLName     xml.Name     `xml:"CT_Control"`
	ShapeIdAttr uint32       `xml:"shapeId,attr"`
	RIdAttr     string       `xml:"r:id,attr"`
	NameAttr    string       `xml:"name,attr,omitempty"`
	ControlPr   *CTControlPr `xml:"controlPr"`
}

// CTControlPr ...
type CTControlPr struct {
	XMLName           xml.Name        `xml:"CT_ControlPr"`
	LockedAttr        bool            `xml:"locked,attr,omitempty"`
	DefaultSizeAttr   bool            `xml:"defaultSize,attr,omitempty"`
	PrintAttr         bool            `xml:"print,attr,omitempty"`
	DisabledAttr      bool            `xml:"disabled,attr,omitempty"`
	RecalcAlwaysAttr  bool            `xml:"recalcAlways,attr,omitempty"`
	UiObjectAttr      bool            `xml:"uiObject,attr,omitempty"`
	AutoFillAttr      bool            `xml:"autoFill,attr,omitempty"`
	AutoLineAttr      bool            `xml:"autoLine,attr,omitempty"`
	AutoPictAttr      bool            `xml:"autoPict,attr,omitempty"`
	MacroAttr         string          `xml:"macro,attr,omitempty"`
	AltTextAttr       string          `xml:"altText,attr,omitempty"`
	LinkedCellAttr    string          `xml:"linkedCell,attr,omitempty"`
	ListFillRangeAttr string          `xml:"listFillRange,attr,omitempty"`
	CfAttr            string          `xml:"cf,attr,omitempty"`
	RIdAttr           string          `xml:"r:id,attr,omitempty"`
	Anchor            *CTObjectAnchor `xml:"anchor"`
}

// STWebSourceType ...
type STWebSourceType string

// CTIgnoredErrors ...
type CTIgnoredErrors struct {
	XMLName      xml.Name          `xml:"CT_IgnoredErrors"`
	IgnoredError []*CTIgnoredError `xml:"ignoredError"`
	ExtLst       *CTExtensionList  `xml:"extLst"`
}

// CTIgnoredError ...
type CTIgnoredError struct {
	XMLName                xml.Name `xml:"CT_IgnoredError"`
	SqrefAttr              *STSqref `xml:"sqref,attr"`
	EvalErrorAttr          bool     `xml:"evalError,attr,omitempty"`
	TwoDigitTextYearAttr   bool     `xml:"twoDigitTextYear,attr,omitempty"`
	NumberStoredAsTextAttr bool     `xml:"numberStoredAsText,attr,omitempty"`
	FormulaAttr            bool     `xml:"formula,attr,omitempty"`
	FormulaRangeAttr       bool     `xml:"formulaRange,attr,omitempty"`
	UnlockedFormulaAttr    bool     `xml:"unlockedFormula,attr,omitempty"`
	EmptyCellReferenceAttr bool     `xml:"emptyCellReference,attr,omitempty"`
	ListDataValidationAttr bool     `xml:"listDataValidation,attr,omitempty"`
	CalculatedColumnAttr   bool     `xml:"calculatedColumn,attr,omitempty"`
}

// STPaneState ...
type STPaneState string

// CTTableParts ...
type CTTableParts struct {
	XMLName   xml.Name       `xml:"CT_TableParts"`
	CountAttr uint32         `xml:"count,attr,omitempty"`
	TablePart []*CTTablePart `xml:"tablePart"`
}

// CTTablePart ...
type CTTablePart struct {
	XMLName xml.Name `xml:"CT_TablePart"`
	RIdAttr string   `xml:"r:id,attr"`
}

// Metadata ...
type Metadata *CTMetadata

// CTMetadata ...
type CTMetadata struct {
	XMLName         xml.Name            `xml:"CT_Metadata"`
	MetadataTypes   *CTMetadataTypes    `xml:"metadataTypes"`
	MetadataStrings *CTMetadataStrings  `xml:"metadataStrings"`
	MdxMetadata     *CTMdxMetadata      `xml:"mdxMetadata"`
	FutureMetadata  []*CTFutureMetadata `xml:"futureMetadata"`
	CellMetadata    *CTMetadataBlocks   `xml:"cellMetadata"`
	ValueMetadata   *CTMetadataBlocks   `xml:"valueMetadata"`
	ExtLst          *CTExtensionList    `xml:"extLst"`
}

// CTMetadataTypes ...
type CTMetadataTypes struct {
	XMLName      xml.Name          `xml:"CT_MetadataTypes"`
	CountAttr    uint32            `xml:"count,attr,omitempty"`
	MetadataType []*CTMetadataType `xml:"metadataType"`
}

// CTMetadataType ...
type CTMetadataType struct {
	XMLName                 xml.Name `xml:"CT_MetadataType"`
	NameAttr                string   `xml:"name,attr"`
	MinSupportedVersionAttr uint32   `xml:"minSupportedVersion,attr"`
	GhostRowAttr            bool     `xml:"ghostRow,attr,omitempty"`
	GhostColAttr            bool     `xml:"ghostCol,attr,omitempty"`
	EditAttr                bool     `xml:"edit,attr,omitempty"`
	DeleteAttr              bool     `xml:"delete,attr,omitempty"`
	CopyAttr                bool     `xml:"copy,attr,omitempty"`
	PasteAllAttr            bool     `xml:"pasteAll,attr,omitempty"`
	PasteFormulasAttr       bool     `xml:"pasteFormulas,attr,omitempty"`
	PasteValuesAttr         bool     `xml:"pasteValues,attr,omitempty"`
	PasteFormatsAttr        bool     `xml:"pasteFormats,attr,omitempty"`
	PasteCommentsAttr       bool     `xml:"pasteComments,attr,omitempty"`
	PasteDataValidationAttr bool     `xml:"pasteDataValidation,attr,omitempty"`
	PasteBordersAttr        bool     `xml:"pasteBorders,attr,omitempty"`
	PasteColWidthsAttr      bool     `xml:"pasteColWidths,attr,omitempty"`
	PasteNumberFormatsAttr  bool     `xml:"pasteNumberFormats,attr,omitempty"`
	MergeAttr               bool     `xml:"merge,attr,omitempty"`
	SplitFirstAttr          bool     `xml:"splitFirst,attr,omitempty"`
	SplitAllAttr            bool     `xml:"splitAll,attr,omitempty"`
	RowColShiftAttr         bool     `xml:"rowColShift,attr,omitempty"`
	ClearAllAttr            bool     `xml:"clearAll,attr,omitempty"`
	ClearFormatsAttr        bool     `xml:"clearFormats,attr,omitempty"`
	ClearContentsAttr       bool     `xml:"clearContents,attr,omitempty"`
	ClearCommentsAttr       bool     `xml:"clearComments,attr,omitempty"`
	AssignAttr              bool     `xml:"assign,attr,omitempty"`
	CoerceAttr              bool     `xml:"coerce,attr,omitempty"`
	AdjustAttr              bool     `xml:"adjust,attr,omitempty"`
	CellMetaAttr            bool     `xml:"cellMeta,attr,omitempty"`
}

// CTMetadataBlocks ...
type CTMetadataBlocks struct {
	XMLName   xml.Name           `xml:"CT_MetadataBlocks"`
	CountAttr uint32             `xml:"count,attr,omitempty"`
	Bk        []*CTMetadataBlock `xml:"bk"`
}

// CTMetadataBlock ...
type CTMetadataBlock struct {
	XMLName xml.Name            `xml:"CT_MetadataBlock"`
	Rc      []*CTMetadataRecord `xml:"rc"`
}

// CTMetadataRecord ...
type CTMetadataRecord struct {
	XMLName xml.Name `xml:"CT_MetadataRecord"`
	TAttr   uint32   `xml:"t,attr"`
	VAttr   uint32   `xml:"v,attr"`
}

// CTFutureMetadata ...
type CTFutureMetadata struct {
	XMLName   xml.Name                 `xml:"CT_FutureMetadata"`
	NameAttr  string                   `xml:"name,attr"`
	CountAttr uint32                   `xml:"count,attr,omitempty"`
	Bk        []*CTFutureMetadataBlock `xml:"bk"`
	ExtLst    *CTExtensionList         `xml:"extLst"`
}

// CTFutureMetadataBlock ...
type CTFutureMetadataBlock struct {
	XMLName xml.Name         `xml:"CT_FutureMetadataBlock"`
	ExtLst  *CTExtensionList `xml:"extLst"`
}

// CTMdxMetadata ...
type CTMdxMetadata struct {
	XMLName   xml.Name `xml:"CT_MdxMetadata"`
	CountAttr uint32   `xml:"count,attr,omitempty"`
	Mdx       []*CTMdx `xml:"mdx"`
}

// CTMdx ...
type CTMdx struct {
	XMLName xml.Name          `xml:"CT_Mdx"`
	NAttr   uint32            `xml:"n,attr"`
	FAttr   string            `xml:"f,attr"`
	T       *CTMdxTuple       `xml:"t"`
	Ms      *CTMdxSet         `xml:"ms"`
	P       *CTMdxMemeberProp `xml:"p"`
	K       *CTMdxKPI         `xml:"k"`
}

// STMdxFunctionType ...
type STMdxFunctionType string

// CTMdxTuple ...
type CTMdxTuple struct {
	XMLName xml.Name                 `xml:"CT_MdxTuple"`
	CAttr   uint32                   `xml:"c,attr,omitempty"`
	CtAttr  string                   `xml:"ct,attr,omitempty"`
	SiAttr  uint32                   `xml:"si,attr,omitempty"`
	FiAttr  uint32                   `xml:"fi,attr,omitempty"`
	BcAttr  string                   `xml:"bc,attr,omitempty"`
	FcAttr  string                   `xml:"fc,attr,omitempty"`
	IAttr   bool                     `xml:"i,attr,omitempty"`
	UAttr   bool                     `xml:"u,attr,omitempty"`
	StAttr  bool                     `xml:"st,attr,omitempty"`
	BAttr   bool                     `xml:"b,attr,omitempty"`
	N       []*CTMetadataStringIndex `xml:"n"`
}

// CTMdxSet ...
type CTMdxSet struct {
	XMLName xml.Name                 `xml:"CT_MdxSet"`
	NsAttr  uint32                   `xml:"ns,attr"`
	CAttr   uint32                   `xml:"c,attr,omitempty"`
	OAttr   string                   `xml:"o,attr,omitempty"`
	N       []*CTMetadataStringIndex `xml:"n"`
}

// STMdxSetOrder ...
type STMdxSetOrder string

// CTMdxMemeberProp ...
type CTMdxMemeberProp struct {
	XMLName xml.Name `xml:"CT_MdxMemeberProp"`
	NAttr   uint32   `xml:"n,attr"`
	NpAttr  uint32   `xml:"np,attr"`
}

// CTMdxKPI ...
type CTMdxKPI struct {
	XMLName xml.Name `xml:"CT_MdxKPI"`
	NAttr   uint32   `xml:"n,attr"`
	NpAttr  uint32   `xml:"np,attr"`
	PAttr   string   `xml:"p,attr"`
}

// STMdxKPIProperty ...
type STMdxKPIProperty string

// CTMetadataStringIndex ...
type CTMetadataStringIndex struct {
	XMLName xml.Name `xml:"CT_MetadataStringIndex"`
	XAttr   uint32   `xml:"x,attr"`
	SAttr   bool     `xml:"s,attr,omitempty"`
}

// CTMetadataStrings ...
type CTMetadataStrings struct {
	XMLName   xml.Name            `xml:"CT_MetadataStrings"`
	CountAttr uint32              `xml:"count,attr,omitempty"`
	S         []*CTXStringElement `xml:"s"`
}

// SingleXmlCells ...
type SingleXmlCells *CTSingleXmlCells

// CTSingleXmlCells ...
type CTSingleXmlCells struct {
	XMLName       xml.Name           `xml:"CT_SingleXmlCells"`
	SingleXmlCell []*CTSingleXmlCell `xml:"singleXmlCell"`
}

// CTSingleXmlCell ...
type CTSingleXmlCell struct {
	XMLName          xml.Name         `xml:"CT_SingleXmlCell"`
	IdAttr           uint32           `xml:"id,attr"`
	RAttr            string           `xml:"r,attr"`
	ConnectionIdAttr uint32           `xml:"connectionId,attr"`
	XmlCellPr        *CTXmlCellPr     `xml:"xmlCellPr"`
	ExtLst           *CTExtensionList `xml:"extLst"`
}

// CTXmlCellPr ...
type CTXmlCellPr struct {
	XMLName        xml.Name         `xml:"CT_XmlCellPr"`
	IdAttr         uint32           `xml:"id,attr"`
	UniqueNameAttr string           `xml:"uniqueName,attr,omitempty"`
	XmlPr          *CTXmlPr         `xml:"xmlPr"`
	ExtLst         *CTExtensionList `xml:"extLst"`
}

// CTXmlPr ...
type CTXmlPr struct {
	XMLName         xml.Name         `xml:"CT_XmlPr"`
	MapIdAttr       uint32           `xml:"mapId,attr"`
	XpathAttr       string           `xml:"xpath,attr"`
	XmlDataTypeAttr string           `xml:"xmlDataType,attr"`
	ExtLst          *CTExtensionList `xml:"extLst"`
}

// StyleSheet ...
type StyleSheet *CTStylesheet

// CTStylesheet ...
type CTStylesheet struct {
	XMLName      xml.Name         `xml:"CT_Stylesheet"`
	NumFmts      *CTNumFmts       `xml:"numFmts"`
	Fonts        *CTFonts         `xml:"fonts"`
	Fills        *CTFills         `xml:"fills"`
	Borders      *CTBorders       `xml:"borders"`
	CellStyleXfs *CTCellStyleXfs  `xml:"cellStyleXfs"`
	CellXfs      *CTCellXfs       `xml:"cellXfs"`
	CellStyles   *CTCellStyles    `xml:"cellStyles"`
	Dxfs         *CTDxfs          `xml:"dxfs"`
	TableStyles  *CTTableStyles   `xml:"tableStyles"`
	Colors       *CTColors        `xml:"colors"`
	ExtLst       *CTExtensionList `xml:"extLst"`
}

// CTCellAlignment ...
type CTCellAlignment struct {
	XMLName             xml.Name        `xml:"CT_CellAlignment"`
	HorizontalAttr      string          `xml:"horizontal,attr,omitempty"`
	VerticalAttr        string          `xml:"vertical,attr,omitempty"`
	TextRotationAttr    *STTextRotation `xml:"textRotation,attr,omitempty"`
	WrapTextAttr        bool            `xml:"wrapText,attr,omitempty"`
	IndentAttr          uint32          `xml:"indent,attr,omitempty"`
	RelativeIndentAttr  int             `xml:"relativeIndent,attr,omitempty"`
	JustifyLastLineAttr bool            `xml:"justifyLastLine,attr,omitempty"`
	ShrinkToFitAttr     bool            `xml:"shrinkToFit,attr,omitempty"`
	ReadingOrderAttr    uint32          `xml:"readingOrder,attr,omitempty"`
}

// STTextRotation ...
type STTextRotation int

// STBorderStyle ...
type STBorderStyle string

// CTBorders ...
type CTBorders struct {
	XMLName   xml.Name    `xml:"CT_Borders"`
	CountAttr uint32      `xml:"count,attr,omitempty"`
	Border    []*CTBorder `xml:"border"`
}

// CTBorder ...
type CTBorder struct {
	XMLName          xml.Name    `xml:"CT_Border"`
	DiagonalUpAttr   bool        `xml:"diagonalUp,attr,omitempty"`
	DiagonalDownAttr bool        `xml:"diagonalDown,attr,omitempty"`
	OutlineAttr      bool        `xml:"outline,attr,omitempty"`
	Start            *CTBorderPr `xml:"start"`
	End              *CTBorderPr `xml:"end"`
	Top              *CTBorderPr `xml:"top"`
	Bottom           *CTBorderPr `xml:"bottom"`
	Diagonal         *CTBorderPr `xml:"diagonal"`
	Vertical         *CTBorderPr `xml:"vertical"`
	Horizontal       *CTBorderPr `xml:"horizontal"`
}

// CTBorderPr ...
type CTBorderPr struct {
	XMLName   xml.Name `xml:"CT_BorderPr"`
	StyleAttr string   `xml:"style,attr,omitempty"`
	Color     *CTColor `xml:"color"`
}

// CTCellProtection ...
type CTCellProtection struct {
	XMLName    xml.Name `xml:"CT_CellProtection"`
	LockedAttr bool     `xml:"locked,attr,omitempty"`
	HiddenAttr bool     `xml:"hidden,attr,omitempty"`
}

// CTFonts ...
type CTFonts struct {
	XMLName   xml.Name  `xml:"CT_Fonts"`
	CountAttr uint32    `xml:"count,attr,omitempty"`
	Font      []*CTFont `xml:"font"`
}

// CTFills ...
type CTFills struct {
	XMLName   xml.Name  `xml:"CT_Fills"`
	CountAttr uint32    `xml:"count,attr,omitempty"`
	Fill      []*CTFill `xml:"fill"`
}

// CTFill ...
type CTFill struct {
	XMLName      xml.Name        `xml:"CT_Fill"`
	PatternFill  *CTPatternFill  `xml:"patternFill"`
	GradientFill *CTGradientFill `xml:"gradientFill"`
}

// CTPatternFill ...
type CTPatternFill struct {
	XMLName         xml.Name `xml:"CT_PatternFill"`
	PatternTypeAttr string   `xml:"patternType,attr,omitempty"`
	FgColor         *CTColor `xml:"fgColor"`
	BgColor         *CTColor `xml:"bgColor"`
}

// CTColor ...
type CTColor struct {
	XMLName     xml.Name `xml:"CT_Color"`
	AutoAttr    bool     `xml:"auto,attr,omitempty"`
	IndexedAttr uint32   `xml:"indexed,attr,omitempty"`
	RgbAttr     string   `xml:"rgb,attr,omitempty"`
	ThemeAttr   uint32   `xml:"theme,attr,omitempty"`
	TintAttr    float64  `xml:"tint,attr,omitempty"`
}

// STPatternType ...
type STPatternType string

// CTGradientFill ...
type CTGradientFill struct {
	XMLName    xml.Name          `xml:"CT_GradientFill"`
	TypeAttr   string            `xml:"type,attr,omitempty"`
	DegreeAttr float64           `xml:"degree,attr,omitempty"`
	LeftAttr   float64           `xml:"left,attr,omitempty"`
	RightAttr  float64           `xml:"right,attr,omitempty"`
	TopAttr    float64           `xml:"top,attr,omitempty"`
	BottomAttr float64           `xml:"bottom,attr,omitempty"`
	Stop       []*CTGradientStop `xml:"stop"`
}

// CTGradientStop ...
type CTGradientStop struct {
	XMLName      xml.Name `xml:"CT_GradientStop"`
	PositionAttr float64  `xml:"position,attr"`
	Color        *CTColor `xml:"color"`
}

// STGradientType ...
type STGradientType string

// STHorizontalAlignment ...
type STHorizontalAlignment string

// STVerticalAlignment ...
type STVerticalAlignment string

// CTNumFmts ...
type CTNumFmts struct {
	XMLName   xml.Name    `xml:"CT_NumFmts"`
	CountAttr uint32      `xml:"count,attr,omitempty"`
	NumFmt    []*CTNumFmt `xml:"numFmt"`
}

// CTNumFmt ...
type CTNumFmt struct {
	XMLName        xml.Name `xml:"CT_NumFmt"`
	NumFmtIdAttr   uint32   `xml:"numFmtId,attr"`
	FormatCodeAttr string   `xml:"formatCode,attr"`
}

// CTCellStyleXfs ...
type CTCellStyleXfs struct {
	XMLName   xml.Name `xml:"CT_CellStyleXfs"`
	CountAttr uint32   `xml:"count,attr,omitempty"`
	Xf        []*CTXf  `xml:"xf"`
}

// CTCellXfs ...
type CTCellXfs struct {
	XMLName   xml.Name `xml:"CT_CellXfs"`
	CountAttr uint32   `xml:"count,attr,omitempty"`
	Xf        []*CTXf  `xml:"xf"`
}

// CTXf ...
type CTXf struct {
	XMLName               xml.Name          `xml:"CT_Xf"`
	NumFmtIdAttr          uint32            `xml:"numFmtId,attr,omitempty"`
	FontIdAttr            uint32            `xml:"fontId,attr,omitempty"`
	FillIdAttr            uint32            `xml:"fillId,attr,omitempty"`
	BorderIdAttr          uint32            `xml:"borderId,attr,omitempty"`
	XfIdAttr              uint32            `xml:"xfId,attr,omitempty"`
	QuotePrefixAttr       bool              `xml:"quotePrefix,attr,omitempty"`
	PivotButtonAttr       bool              `xml:"pivotButton,attr,omitempty"`
	ApplyNumberFormatAttr bool              `xml:"applyNumberFormat,attr,omitempty"`
	ApplyFontAttr         bool              `xml:"applyFont,attr,omitempty"`
	ApplyFillAttr         bool              `xml:"applyFill,attr,omitempty"`
	ApplyBorderAttr       bool              `xml:"applyBorder,attr,omitempty"`
	ApplyAlignmentAttr    bool              `xml:"applyAlignment,attr,omitempty"`
	ApplyProtectionAttr   bool              `xml:"applyProtection,attr,omitempty"`
	Alignment             *CTCellAlignment  `xml:"alignment"`
	Protection            *CTCellProtection `xml:"protection"`
	ExtLst                *CTExtensionList  `xml:"extLst"`
}

// CTCellStyles ...
type CTCellStyles struct {
	XMLName   xml.Name       `xml:"CT_CellStyles"`
	CountAttr uint32         `xml:"count,attr,omitempty"`
	CellStyle []*CTCellStyle `xml:"cellStyle"`
}

// CTCellStyle ...
type CTCellStyle struct {
	XMLName           xml.Name         `xml:"CT_CellStyle"`
	NameAttr          string           `xml:"name,attr,omitempty"`
	XfIdAttr          uint32           `xml:"xfId,attr"`
	BuiltinIdAttr     uint32           `xml:"builtinId,attr,omitempty"`
	ILevelAttr        uint32           `xml:"iLevel,attr,omitempty"`
	HiddenAttr        bool             `xml:"hidden,attr,omitempty"`
	CustomBuiltinAttr bool             `xml:"customBuiltin,attr,omitempty"`
	ExtLst            *CTExtensionList `xml:"extLst"`
}

// CTDxfs ...
type CTDxfs struct {
	XMLName   xml.Name `xml:"CT_Dxfs"`
	CountAttr uint32   `xml:"count,attr,omitempty"`
	Dxf       []*CTDxf `xml:"dxf"`
}

// CTDxf ...
type CTDxf struct {
	XMLName    xml.Name          `xml:"CT_Dxf"`
	Font       *CTFont           `xml:"font"`
	NumFmt     *CTNumFmt         `xml:"numFmt"`
	Fill       *CTFill           `xml:"fill"`
	Alignment  *CTCellAlignment  `xml:"alignment"`
	Border     *CTBorder         `xml:"border"`
	Protection *CTCellProtection `xml:"protection"`
	ExtLst     *CTExtensionList  `xml:"extLst"`
}

// STNumFmtId ...
type STNumFmtId uint32

// STFontId ...
type STFontId uint32

// STFillId ...
type STFillId uint32

// STBorderId ...
type STBorderId uint32

// STCellStyleXfId ...
type STCellStyleXfId uint32

// STDxfId ...
type STDxfId uint32

// CTColors ...
type CTColors struct {
	XMLName       xml.Name         `xml:"CT_Colors"`
	IndexedColors *CTIndexedColors `xml:"indexedColors"`
	MruColors     *CTMRUColors     `xml:"mruColors"`
}

// CTIndexedColors ...
type CTIndexedColors struct {
	XMLName  xml.Name      `xml:"CT_IndexedColors"`
	RgbColor []*CTRgbColor `xml:"rgbColor"`
}

// CTMRUColors ...
type CTMRUColors struct {
	XMLName xml.Name   `xml:"CT_MRUColors"`
	Color   []*CTColor `xml:"color"`
}

// CTRgbColor ...
type CTRgbColor struct {
	XMLName xml.Name `xml:"CT_RgbColor"`
	RgbAttr string   `xml:"rgb,attr,omitempty"`
}

// CTTableStyles ...
type CTTableStyles struct {
	XMLName               xml.Name        `xml:"CT_TableStyles"`
	CountAttr             uint32          `xml:"count,attr,omitempty"`
	DefaultTableStyleAttr string          `xml:"defaultTableStyle,attr,omitempty"`
	DefaultPivotStyleAttr string          `xml:"defaultPivotStyle,attr,omitempty"`
	TableStyle            []*CTTableStyle `xml:"tableStyle"`
}

// CTTableStyle ...
type CTTableStyle struct {
	XMLName           xml.Name               `xml:"CT_TableStyle"`
	NameAttr          string                 `xml:"name,attr"`
	PivotAttr         bool                   `xml:"pivot,attr,omitempty"`
	TableAttr         bool                   `xml:"table,attr,omitempty"`
	CountAttr         uint32                 `xml:"count,attr,omitempty"`
	TableStyleElement []*CTTableStyleElement `xml:"tableStyleElement"`
}

// CTTableStyleElement ...
type CTTableStyleElement struct {
	XMLName   xml.Name `xml:"CT_TableStyleElement"`
	TypeAttr  string   `xml:"type,attr"`
	SizeAttr  uint32   `xml:"size,attr,omitempty"`
	DxfIdAttr uint32   `xml:"dxfId,attr,omitempty"`
}

// STTableStyleType ...
type STTableStyleType string

// CTBooleanProperty ...
type CTBooleanProperty struct {
	XMLName xml.Name `xml:"CT_BooleanProperty"`
	ValAttr bool     `xml:"val,attr,omitempty"`
}

// CTFontSize ...
type CTFontSize struct {
	XMLName xml.Name `xml:"CT_FontSize"`
	ValAttr float64  `xml:"val,attr"`
}

// CTIntProperty ...
type CTIntProperty struct {
	XMLName xml.Name `xml:"CT_IntProperty"`
	ValAttr int      `xml:"val,attr"`
}

// CTFontName ...
type CTFontName struct {
	XMLName xml.Name `xml:"CT_FontName"`
	ValAttr string   `xml:"val,attr"`
}

// CTVerticalAlignFontProperty ...
type CTVerticalAlignFontProperty struct {
	XMLName xml.Name `xml:"CT_VerticalAlignFontProperty"`
	ValAttr string   `xml:"val,attr"`
}

// CTFontScheme ...
type CTFontScheme struct {
	XMLName xml.Name `xml:"CT_FontScheme"`
	ValAttr string   `xml:"val,attr"`
}

// STFontScheme ...
type STFontScheme string

// CTUnderlineProperty ...
type CTUnderlineProperty struct {
	XMLName xml.Name `xml:"CT_UnderlineProperty"`
	ValAttr string   `xml:"val,attr,omitempty"`
}

// STUnderlineValues ...
type STUnderlineValues string

// CTFontFamily ...
type CTFontFamily struct {
	XMLName xml.Name `xml:"CT_FontFamily"`
	ValAttr int      `xml:"val,attr"`
}

// STFontFamily ...
type STFontFamily int

// CTFont ...
type CTFont struct {
	XMLName   xml.Name                       `xml:"CT_Font"`
	Name      []*CTFontName                  `xml:"name"`
	Charset   []*CTIntProperty               `xml:"charset"`
	Family    []*CTFontFamily                `xml:"family"`
	B         []*CTBooleanProperty           `xml:"b"`
	I         []*CTBooleanProperty           `xml:"i"`
	Strike    []*CTBooleanProperty           `xml:"strike"`
	Outline   []*CTBooleanProperty           `xml:"outline"`
	Shadow    []*CTBooleanProperty           `xml:"shadow"`
	Condense  []*CTBooleanProperty           `xml:"condense"`
	Extend    []*CTBooleanProperty           `xml:"extend"`
	Color     []*CTColor                     `xml:"color"`
	Sz        []*CTFontSize                  `xml:"sz"`
	U         []*CTUnderlineProperty         `xml:"u"`
	VertAlign []*CTVerticalAlignFontProperty `xml:"vertAlign"`
	Scheme    []*CTFontScheme                `xml:"scheme"`
}

// AGAutoFormat ...
type AGAutoFormat struct {
	XMLName                     xml.Name `xml:"AG_AutoFormat"`
	AutoFormatIdAttr            uint32   `xml:"autoFormatId,attr,omitempty"`
	ApplyNumberFormatsAttr      bool     `xml:"applyNumberFormats,attr,omitempty"`
	ApplyBorderFormatsAttr      bool     `xml:"applyBorderFormats,attr,omitempty"`
	ApplyFontFormatsAttr        bool     `xml:"applyFontFormats,attr,omitempty"`
	ApplyPatternFormatsAttr     bool     `xml:"applyPatternFormats,attr,omitempty"`
	ApplyAlignmentFormatsAttr   bool     `xml:"applyAlignmentFormats,attr,omitempty"`
	ApplyWidthHeightFormatsAttr bool     `xml:"applyWidthHeightFormats,attr,omitempty"`
}

// ExternalLink ...
type ExternalLink *CTExternalLink

// CTExternalLink ...
type CTExternalLink struct {
	XMLName      xml.Name         `xml:"CT_ExternalLink"`
	ExternalBook *CTExternalBook  `xml:"externalBook"`
	DdeLink      *CTDdeLink       `xml:"ddeLink"`
	OleLink      *CTOleLink       `xml:"oleLink"`
	ExtLst       *CTExtensionList `xml:"extLst"`
}

// CTExternalBook ...
type CTExternalBook struct {
	XMLName      xml.Name                `xml:"CT_ExternalBook"`
	RIdAttr      string                  `xml:"r:id,attr"`
	SheetNames   *CTExternalSheetNames   `xml:"sheetNames"`
	DefinedNames *CTExternalDefinedNames `xml:"definedNames"`
	SheetDataSet *CTExternalSheetDataSet `xml:"sheetDataSet"`
}

// CTExternalSheetNames ...
type CTExternalSheetNames struct {
	XMLName   xml.Name               `xml:"CT_ExternalSheetNames"`
	SheetName []*CTExternalSheetName `xml:"sheetName"`
}

// CTExternalSheetName ...
type CTExternalSheetName struct {
	XMLName xml.Name `xml:"CT_ExternalSheetName"`
	ValAttr string   `xml:"val,attr,omitempty"`
}

// CTExternalDefinedNames ...
type CTExternalDefinedNames struct {
	XMLName     xml.Name                 `xml:"CT_ExternalDefinedNames"`
	DefinedName []*CTExternalDefinedName `xml:"definedName"`
}

// CTExternalDefinedName ...
type CTExternalDefinedName struct {
	XMLName      xml.Name `xml:"CT_ExternalDefinedName"`
	NameAttr     string   `xml:"name,attr"`
	RefersToAttr string   `xml:"refersTo,attr,omitempty"`
	SheetIdAttr  uint32   `xml:"sheetId,attr,omitempty"`
}

// CTExternalSheetDataSet ...
type CTExternalSheetDataSet struct {
	XMLName   xml.Name               `xml:"CT_ExternalSheetDataSet"`
	SheetData []*CTExternalSheetData `xml:"sheetData"`
}

// CTExternalSheetData ...
type CTExternalSheetData struct {
	XMLName          xml.Name         `xml:"CT_ExternalSheetData"`
	SheetIdAttr      uint32           `xml:"sheetId,attr"`
	RefreshErrorAttr bool             `xml:"refreshError,attr,omitempty"`
	Row              []*CTExternalRow `xml:"row"`
}

// CTExternalRow ...
type CTExternalRow struct {
	XMLName xml.Name          `xml:"CT_ExternalRow"`
	RAttr   uint32            `xml:"r,attr"`
	Cell    []*CTExternalCell `xml:"cell"`
}

// CTExternalCell ...
type CTExternalCell struct {
	XMLName xml.Name `xml:"CT_ExternalCell"`
	RAttr   string   `xml:"r,attr,omitempty"`
	TAttr   string   `xml:"t,attr,omitempty"`
	VmAttr  uint32   `xml:"vm,attr,omitempty"`
	V       string   `xml:"v"`
}

// CTDdeLink ...
type CTDdeLink struct {
	XMLName        xml.Name    `xml:"CT_DdeLink"`
	DdeServiceAttr string      `xml:"ddeService,attr"`
	DdeTopicAttr   string      `xml:"ddeTopic,attr"`
	DdeItems       *CTDdeItems `xml:"ddeItems"`
}

// CTDdeItems ...
type CTDdeItems struct {
	XMLName xml.Name     `xml:"CT_DdeItems"`
	DdeItem []*CTDdeItem `xml:"ddeItem"`
}

// CTDdeItem ...
type CTDdeItem struct {
	XMLName       xml.Name     `xml:"CT_DdeItem"`
	NameAttr      string       `xml:"name,attr,omitempty"`
	OleAttr       bool         `xml:"ole,attr,omitempty"`
	AdviseAttr    bool         `xml:"advise,attr,omitempty"`
	PreferPicAttr bool         `xml:"preferPic,attr,omitempty"`
	Values        *CTDdeValues `xml:"values"`
}

// CTDdeValues ...
type CTDdeValues struct {
	XMLName  xml.Name      `xml:"CT_DdeValues"`
	RowsAttr uint32        `xml:"rows,attr,omitempty"`
	ColsAttr uint32        `xml:"cols,attr,omitempty"`
	Value    []*CTDdeValue `xml:"value"`
}

// CTDdeValue ...
type CTDdeValue struct {
	XMLName xml.Name `xml:"CT_DdeValue"`
	TAttr   string   `xml:"t,attr,omitempty"`
	Val     string   `xml:"val"`
}

// STDdeValueType ...
type STDdeValueType string

// CTOleLink ...
type CTOleLink struct {
	XMLName    xml.Name    `xml:"CT_OleLink"`
	RIdAttr    string      `xml:"r:id,attr"`
	ProgIdAttr string      `xml:"progId,attr"`
	OleItems   *CTOleItems `xml:"oleItems"`
}

// CTOleItems ...
type CTOleItems struct {
	XMLName xml.Name     `xml:"CT_OleItems"`
	OleItem []*CTOleItem `xml:"oleItem"`
}

// CTOleItem ...
type CTOleItem struct {
	XMLName       xml.Name `xml:"CT_OleItem"`
	NameAttr      string   `xml:"name,attr"`
	IconAttr      bool     `xml:"icon,attr,omitempty"`
	AdviseAttr    bool     `xml:"advise,attr,omitempty"`
	PreferPicAttr bool     `xml:"preferPic,attr,omitempty"`
}

// Table ...
type Table *CTTable

// CTTable ...
type CTTable struct {
	XMLName                  xml.Name          `xml:"CT_Table"`
	IdAttr                   uint32            `xml:"id,attr"`
	NameAttr                 string            `xml:"name,attr,omitempty"`
	DisplayNameAttr          string            `xml:"displayName,attr"`
	CommentAttr              string            `xml:"comment,attr,omitempty"`
	RefAttr                  string            `xml:"ref,attr"`
	TableTypeAttr            string            `xml:"tableType,attr,omitempty"`
	HeaderRowCountAttr       uint32            `xml:"headerRowCount,attr,omitempty"`
	InsertRowAttr            bool              `xml:"insertRow,attr,omitempty"`
	InsertRowShiftAttr       bool              `xml:"insertRowShift,attr,omitempty"`
	TotalsRowCountAttr       uint32            `xml:"totalsRowCount,attr,omitempty"`
	TotalsRowShownAttr       bool              `xml:"totalsRowShown,attr,omitempty"`
	PublishedAttr            bool              `xml:"published,attr,omitempty"`
	HeaderRowDxfIdAttr       uint32            `xml:"headerRowDxfId,attr,omitempty"`
	DataDxfIdAttr            uint32            `xml:"dataDxfId,attr,omitempty"`
	TotalsRowDxfIdAttr       uint32            `xml:"totalsRowDxfId,attr,omitempty"`
	HeaderRowBorderDxfIdAttr uint32            `xml:"headerRowBorderDxfId,attr,omitempty"`
	TableBorderDxfIdAttr     uint32            `xml:"tableBorderDxfId,attr,omitempty"`
	TotalsRowBorderDxfIdAttr uint32            `xml:"totalsRowBorderDxfId,attr,omitempty"`
	HeaderRowCellStyleAttr   string            `xml:"headerRowCellStyle,attr,omitempty"`
	DataCellStyleAttr        string            `xml:"dataCellStyle,attr,omitempty"`
	TotalsRowCellStyleAttr   string            `xml:"totalsRowCellStyle,attr,omitempty"`
	ConnectionIdAttr         uint32            `xml:"connectionId,attr,omitempty"`
	AutoFilter               *CTAutoFilter     `xml:"autoFilter"`
	SortState                *CTSortState      `xml:"sortState"`
	TableColumns             *CTTableColumns   `xml:"tableColumns"`
	TableStyleInfo           *CTTableStyleInfo `xml:"tableStyleInfo"`
	ExtLst                   *CTExtensionList  `xml:"extLst"`
}

// STTableType ...
type STTableType string

// CTTableStyleInfo ...
type CTTableStyleInfo struct {
	XMLName               xml.Name `xml:"CT_TableStyleInfo"`
	NameAttr              string   `xml:"name,attr,omitempty"`
	ShowFirstColumnAttr   bool     `xml:"showFirstColumn,attr,omitempty"`
	ShowLastColumnAttr    bool     `xml:"showLastColumn,attr,omitempty"`
	ShowRowStripesAttr    bool     `xml:"showRowStripes,attr,omitempty"`
	ShowColumnStripesAttr bool     `xml:"showColumnStripes,attr,omitempty"`
}

// CTTableColumns ...
type CTTableColumns struct {
	XMLName     xml.Name         `xml:"CT_TableColumns"`
	CountAttr   uint32           `xml:"count,attr,omitempty"`
	TableColumn []*CTTableColumn `xml:"tableColumn"`
}

// CTTableColumn ...
type CTTableColumn struct {
	XMLName                 xml.Name         `xml:"CT_TableColumn"`
	IdAttr                  uint32           `xml:"id,attr"`
	UniqueNameAttr          string           `xml:"uniqueName,attr,omitempty"`
	NameAttr                string           `xml:"name,attr"`
	TotalsRowFunctionAttr   string           `xml:"totalsRowFunction,attr,omitempty"`
	TotalsRowLabelAttr      string           `xml:"totalsRowLabel,attr,omitempty"`
	QueryTableFieldIdAttr   uint32           `xml:"queryTableFieldId,attr,omitempty"`
	HeaderRowDxfIdAttr      uint32           `xml:"headerRowDxfId,attr,omitempty"`
	DataDxfIdAttr           uint32           `xml:"dataDxfId,attr,omitempty"`
	TotalsRowDxfIdAttr      uint32           `xml:"totalsRowDxfId,attr,omitempty"`
	HeaderRowCellStyleAttr  string           `xml:"headerRowCellStyle,attr,omitempty"`
	DataCellStyleAttr       string           `xml:"dataCellStyle,attr,omitempty"`
	TotalsRowCellStyleAttr  string           `xml:"totalsRowCellStyle,attr,omitempty"`
	CalculatedColumnFormula *CTTableFormula  `xml:"calculatedColumnFormula"`
	TotalsRowFormula        *CTTableFormula  `xml:"totalsRowFormula"`
	XmlColumnPr             *CTXmlColumnPr   `xml:"xmlColumnPr"`
	ExtLst                  *CTExtensionList `xml:"extLst"`
}

// CTTableFormula ...
type CTTableFormula struct {
	XMLName   xml.Name `xml:"CT_TableFormula"`
	ArrayAttr bool     `xml:"array,attr,omitempty"`
	Value     string   `xml:",chardata"`
}

// STTotalsRowFunction ...
type STTotalsRowFunction string

// CTXmlColumnPr ...
type CTXmlColumnPr struct {
	XMLName          xml.Name         `xml:"CT_XmlColumnPr"`
	MapIdAttr        uint32           `xml:"mapId,attr"`
	XpathAttr        string           `xml:"xpath,attr"`
	DenormalizedAttr bool             `xml:"denormalized,attr,omitempty"`
	XmlDataTypeAttr  string           `xml:"xmlDataType,attr"`
	ExtLst           *CTExtensionList `xml:"extLst"`
}

// STXmlDataType ...
type STXmlDataType string

// VolTypes ...
type VolTypes *CTVolTypes

// CTVolTypes ...
type CTVolTypes struct {
	XMLName xml.Name         `xml:"CT_VolTypes"`
	VolType []*CTVolType     `xml:"volType"`
	ExtLst  *CTExtensionList `xml:"extLst"`
}

// CTVolType ...
type CTVolType struct {
	XMLName  xml.Name     `xml:"CT_VolType"`
	TypeAttr string       `xml:"type,attr"`
	Main     []*CTVolMain `xml:"main"`
}

// CTVolMain ...
type CTVolMain struct {
	XMLName   xml.Name      `xml:"CT_VolMain"`
	FirstAttr string        `xml:"first,attr"`
	Tp        []*CTVolTopic `xml:"tp"`
}

// CTVolTopic ...
type CTVolTopic struct {
	XMLName xml.Name         `xml:"CT_VolTopic"`
	TAttr   string           `xml:"t,attr,omitempty"`
	V       string           `xml:"v"`
	Stp     []string         `xml:"stp"`
	Tr      []*CTVolTopicRef `xml:"tr"`
}

// CTVolTopicRef ...
type CTVolTopicRef struct {
	XMLName xml.Name `xml:"CT_VolTopicRef"`
	RAttr   string   `xml:"r,attr"`
	SAttr   uint32   `xml:"s,attr"`
}

// STVolDepType ...
type STVolDepType string

// STVolValueType ...
type STVolValueType string

// Workbook ...
type Workbook *CTWorkbook

// CTWorkbook ...
type CTWorkbook struct {
	XMLName             xml.Name               `xml:"CT_Workbook"`
	ConformanceAttr     string                 `xml:"conformance,attr,omitempty"`
	FileVersion         *CTFileVersion         `xml:"fileVersion"`
	FileSharing         *CTFileSharing         `xml:"fileSharing"`
	WorkbookPr          *CTWorkbookPr          `xml:"workbookPr"`
	WorkbookProtection  *CTWorkbookProtection  `xml:"workbookProtection"`
	BookViews           *CTBookViews           `xml:"bookViews"`
	Sheets              *CTSheets              `xml:"sheets"`
	FunctionGroups      *CTFunctionGroups      `xml:"functionGroups"`
	ExternalReferences  *CTExternalReferences  `xml:"externalReferences"`
	DefinedNames        *CTDefinedNames        `xml:"definedNames"`
	CalcPr              *CTCalcPr              `xml:"calcPr"`
	OleSize             *CTOleSize             `xml:"oleSize"`
	CustomWorkbookViews *CTCustomWorkbookViews `xml:"customWorkbookViews"`
	PivotCaches         *CTPivotCaches         `xml:"pivotCaches"`
	SmartTagPr          *CTSmartTagPr          `xml:"smartTagPr"`
	SmartTagTypes       *CTSmartTagTypes       `xml:"smartTagTypes"`
	WebPublishing       *CTWebPublishing       `xml:"webPublishing"`
	FileRecoveryPr      []*CTFileRecoveryPr    `xml:"fileRecoveryPr"`
	WebPublishObjects   *CTWebPublishObjects   `xml:"webPublishObjects"`
	ExtLst              *CTExtensionList       `xml:"extLst"`
}

// CTFileVersion ...
type CTFileVersion struct {
	XMLName          xml.Name `xml:"CT_FileVersion"`
	AppNameAttr      string   `xml:"appName,attr,omitempty"`
	LastEditedAttr   string   `xml:"lastEdited,attr,omitempty"`
	LowestEditedAttr string   `xml:"lowestEdited,attr,omitempty"`
	RupBuildAttr     string   `xml:"rupBuild,attr,omitempty"`
	CodeNameAttr     string   `xml:"codeName,attr,omitempty"`
}

// CTBookViews ...
type CTBookViews struct {
	XMLName      xml.Name      `xml:"CT_BookViews"`
	WorkbookView []*CTBookView `xml:"workbookView"`
}

// CTBookView ...
type CTBookView struct {
	XMLName                    xml.Name         `xml:"CT_BookView"`
	VisibilityAttr             string           `xml:"visibility,attr,omitempty"`
	MinimizedAttr              bool             `xml:"minimized,attr,omitempty"`
	ShowHorizontalScrollAttr   bool             `xml:"showHorizontalScroll,attr,omitempty"`
	ShowVerticalScrollAttr     bool             `xml:"showVerticalScroll,attr,omitempty"`
	ShowSheetTabsAttr          bool             `xml:"showSheetTabs,attr,omitempty"`
	XWindowAttr                int              `xml:"xWindow,attr,omitempty"`
	YWindowAttr                int              `xml:"yWindow,attr,omitempty"`
	WindowWidthAttr            uint32           `xml:"windowWidth,attr,omitempty"`
	WindowHeightAttr           uint32           `xml:"windowHeight,attr,omitempty"`
	TabRatioAttr               uint32           `xml:"tabRatio,attr,omitempty"`
	FirstSheetAttr             uint32           `xml:"firstSheet,attr,omitempty"`
	ActiveTabAttr              uint32           `xml:"activeTab,attr,omitempty"`
	AutoFilterDateGroupingAttr bool             `xml:"autoFilterDateGrouping,attr,omitempty"`
	ExtLst                     *CTExtensionList `xml:"extLst"`
}

// STVisibility ...
type STVisibility string

// CTCustomWorkbookViews ...
type CTCustomWorkbookViews struct {
	XMLName            xml.Name                `xml:"CT_CustomWorkbookViews"`
	CustomWorkbookView []*CTCustomWorkbookView `xml:"customWorkbookView"`
}

// CTCustomWorkbookView ...
type CTCustomWorkbookView struct {
	XMLName                  xml.Name         `xml:"CT_CustomWorkbookView"`
	NameAttr                 string           `xml:"name,attr"`
	GuidAttr                 string           `xml:"guid,attr"`
	AutoUpdateAttr           bool             `xml:"autoUpdate,attr,omitempty"`
	MergeIntervalAttr        uint32           `xml:"mergeInterval,attr,omitempty"`
	ChangesSavedWinAttr      bool             `xml:"changesSavedWin,attr,omitempty"`
	OnlySyncAttr             bool             `xml:"onlySync,attr,omitempty"`
	PersonalViewAttr         bool             `xml:"personalView,attr,omitempty"`
	IncludePrintSettingsAttr bool             `xml:"includePrintSettings,attr,omitempty"`
	IncludeHiddenRowColAttr  bool             `xml:"includeHiddenRowCol,attr,omitempty"`
	MaximizedAttr            bool             `xml:"maximized,attr,omitempty"`
	MinimizedAttr            bool             `xml:"minimized,attr,omitempty"`
	ShowHorizontalScrollAttr bool             `xml:"showHorizontalScroll,attr,omitempty"`
	ShowVerticalScrollAttr   bool             `xml:"showVerticalScroll,attr,omitempty"`
	ShowSheetTabsAttr        bool             `xml:"showSheetTabs,attr,omitempty"`
	XWindowAttr              int              `xml:"xWindow,attr,omitempty"`
	YWindowAttr              int              `xml:"yWindow,attr,omitempty"`
	WindowWidthAttr          uint32           `xml:"windowWidth,attr"`
	WindowHeightAttr         uint32           `xml:"windowHeight,attr"`
	TabRatioAttr             uint32           `xml:"tabRatio,attr,omitempty"`
	ActiveSheetIdAttr        uint32           `xml:"activeSheetId,attr"`
	ShowFormulaBarAttr       bool             `xml:"showFormulaBar,attr,omitempty"`
	ShowStatusbarAttr        bool             `xml:"showStatusbar,attr,omitempty"`
	ShowCommentsAttr         string           `xml:"showComments,attr,omitempty"`
	ShowObjectsAttr          string           `xml:"showObjects,attr,omitempty"`
	ExtLst                   *CTExtensionList `xml:"extLst"`
}

// STComments ...
type STComments string

// STObjects ...
type STObjects string

// CTSheets ...
type CTSheets struct {
	XMLName xml.Name   `xml:"CT_Sheets"`
	Sheet   []*CTSheet `xml:"sheet"`
}

// CTSheet ...
type CTSheet struct {
	XMLName     xml.Name `xml:"CT_Sheet"`
	NameAttr    string   `xml:"name,attr"`
	SheetIdAttr uint32   `xml:"sheetId,attr"`
	StateAttr   string   `xml:"state,attr,omitempty"`
	RIdAttr     string   `xml:"r:id,attr"`
}

// STSheetState ...
type STSheetState string

// CTWorkbookPr ...
type CTWorkbookPr struct {
	XMLName                        xml.Name `xml:"CT_WorkbookPr"`
	Date1904Attr                   bool     `xml:"date1904,attr,omitempty"`
	ShowObjectsAttr                string   `xml:"showObjects,attr,omitempty"`
	ShowBorderUnselectedTablesAttr bool     `xml:"showBorderUnselectedTables,attr,omitempty"`
	FilterPrivacyAttr              bool     `xml:"filterPrivacy,attr,omitempty"`
	PromptedSolutionsAttr          bool     `xml:"promptedSolutions,attr,omitempty"`
	ShowInkAnnotationAttr          bool     `xml:"showInkAnnotation,attr,omitempty"`
	BackupFileAttr                 bool     `xml:"backupFile,attr,omitempty"`
	SaveExternalLinkValuesAttr     bool     `xml:"saveExternalLinkValues,attr,omitempty"`
	UpdateLinksAttr                string   `xml:"updateLinks,attr,omitempty"`
	CodeNameAttr                   string   `xml:"codeName,attr,omitempty"`
	HidePivotFieldListAttr         bool     `xml:"hidePivotFieldList,attr,omitempty"`
	ShowPivotChartFilterAttr       bool     `xml:"showPivotChartFilter,attr,omitempty"`
	AllowRefreshQueryAttr          bool     `xml:"allowRefreshQuery,attr,omitempty"`
	PublishItemsAttr               bool     `xml:"publishItems,attr,omitempty"`
	CheckCompatibilityAttr         bool     `xml:"checkCompatibility,attr,omitempty"`
	AutoCompressPicturesAttr       bool     `xml:"autoCompressPictures,attr,omitempty"`
	RefreshAllConnectionsAttr      bool     `xml:"refreshAllConnections,attr,omitempty"`
	DefaultThemeVersionAttr        uint32   `xml:"defaultThemeVersion,attr,omitempty"`
}

// STUpdateLinks ...
type STUpdateLinks string

// CTSmartTagPr ...
type CTSmartTagPr struct {
	XMLName   xml.Name `xml:"CT_SmartTagPr"`
	EmbedAttr bool     `xml:"embed,attr,omitempty"`
	ShowAttr  string   `xml:"show,attr,omitempty"`
}

// STSmartTagShow ...
type STSmartTagShow string

// CTSmartTagTypes ...
type CTSmartTagTypes struct {
	XMLName      xml.Name          `xml:"CT_SmartTagTypes"`
	SmartTagType []*CTSmartTagType `xml:"smartTagType"`
}

// CTSmartTagType ...
type CTSmartTagType struct {
	XMLName          xml.Name `xml:"CT_SmartTagType"`
	NamespaceUriAttr string   `xml:"namespaceUri,attr,omitempty"`
	NameAttr         string   `xml:"name,attr,omitempty"`
	UrlAttr          string   `xml:"url,attr,omitempty"`
}

// CTFileRecoveryPr ...
type CTFileRecoveryPr struct {
	XMLName             xml.Name `xml:"CT_FileRecoveryPr"`
	AutoRecoverAttr     bool     `xml:"autoRecover,attr,omitempty"`
	CrashSaveAttr       bool     `xml:"crashSave,attr,omitempty"`
	DataExtractLoadAttr bool     `xml:"dataExtractLoad,attr,omitempty"`
	RepairLoadAttr      bool     `xml:"repairLoad,attr,omitempty"`
}

// CTCalcPr ...
type CTCalcPr struct {
	XMLName                   xml.Name `xml:"CT_CalcPr"`
	CalcIdAttr                uint32   `xml:"calcId,attr,omitempty"`
	CalcModeAttr              string   `xml:"calcMode,attr,omitempty"`
	FullCalcOnLoadAttr        bool     `xml:"fullCalcOnLoad,attr,omitempty"`
	RefModeAttr               string   `xml:"refMode,attr,omitempty"`
	IterateAttr               bool     `xml:"iterate,attr,omitempty"`
	IterateCountAttr          uint32   `xml:"iterateCount,attr,omitempty"`
	IterateDeltaAttr          float64  `xml:"iterateDelta,attr,omitempty"`
	FullPrecisionAttr         bool     `xml:"fullPrecision,attr,omitempty"`
	CalcCompletedAttr         bool     `xml:"calcCompleted,attr,omitempty"`
	CalcOnSaveAttr            bool     `xml:"calcOnSave,attr,omitempty"`
	ConcurrentCalcAttr        bool     `xml:"concurrentCalc,attr,omitempty"`
	ConcurrentManualCountAttr uint32   `xml:"concurrentManualCount,attr,omitempty"`
	ForceFullCalcAttr         bool     `xml:"forceFullCalc,attr,omitempty"`
}

// STCalcMode ...
type STCalcMode string

// STRefMode ...
type STRefMode string

// CTDefinedNames ...
type CTDefinedNames struct {
	XMLName     xml.Name         `xml:"CT_DefinedNames"`
	DefinedName []*CTDefinedName `xml:"definedName"`
}

// CTDefinedName ...
type CTDefinedName struct {
	XMLName               xml.Name `xml:"CT_DefinedName"`
	NameAttr              string   `xml:"name,attr"`
	CommentAttr           string   `xml:"comment,attr,omitempty"`
	CustomMenuAttr        string   `xml:"customMenu,attr,omitempty"`
	DescriptionAttr       string   `xml:"description,attr,omitempty"`
	HelpAttr              string   `xml:"help,attr,omitempty"`
	StatusBarAttr         string   `xml:"statusBar,attr,omitempty"`
	LocalSheetIdAttr      uint32   `xml:"localSheetId,attr,omitempty"`
	HiddenAttr            bool     `xml:"hidden,attr,omitempty"`
	FunctionAttr          bool     `xml:"function,attr,omitempty"`
	VbProcedureAttr       bool     `xml:"vbProcedure,attr,omitempty"`
	XlmAttr               bool     `xml:"xlm,attr,omitempty"`
	FunctionGroupIdAttr   uint32   `xml:"functionGroupId,attr,omitempty"`
	ShortcutKeyAttr       string   `xml:"shortcutKey,attr,omitempty"`
	PublishToServerAttr   bool     `xml:"publishToServer,attr,omitempty"`
	WorkbookParameterAttr bool     `xml:"workbookParameter,attr,omitempty"`
	Value                 string   `xml:",chardata"`
}

// CTExternalReferences ...
type CTExternalReferences struct {
	XMLName           xml.Name               `xml:"CT_ExternalReferences"`
	ExternalReference []*CTExternalReference `xml:"externalReference"`
}

// CTExternalReference ...
type CTExternalReference struct {
	XMLName xml.Name `xml:"CT_ExternalReference"`
	RIdAttr string   `xml:"r:id,attr"`
}

// CTSheetBackgroundPicture ...
type CTSheetBackgroundPicture struct {
	XMLName xml.Name `xml:"CT_SheetBackgroundPicture"`
	RIdAttr string   `xml:"r:id,attr"`
}

// CTPivotCaches ...
type CTPivotCaches struct {
	XMLName    xml.Name        `xml:"CT_PivotCaches"`
	PivotCache []*CTPivotCache `xml:"pivotCache"`
}

// CTPivotCache ...
type CTPivotCache struct {
	XMLName     xml.Name `xml:"CT_PivotCache"`
	CacheIdAttr uint32   `xml:"cacheId,attr"`
	RIdAttr     string   `xml:"r:id,attr"`
}

// CTFileSharing ...
type CTFileSharing struct {
	XMLName                 xml.Name `xml:"CT_FileSharing"`
	ReadOnlyRecommendedAttr bool     `xml:"readOnlyRecommended,attr,omitempty"`
	UserNameAttr            string   `xml:"userName,attr,omitempty"`
	AlgorithmNameAttr       string   `xml:"algorithmName,attr,omitempty"`
	HashValueAttr           string   `xml:"hashValue,attr,omitempty"`
	SaltValueAttr           string   `xml:"saltValue,attr,omitempty"`
	SpinCountAttr           uint32   `xml:"spinCount,attr,omitempty"`
}

// CTOleSize ...
type CTOleSize struct {
	XMLName xml.Name `xml:"CT_OleSize"`
	RefAttr string   `xml:"ref,attr"`
}

// CTWorkbookProtection ...
type CTWorkbookProtection struct {
	XMLName                    xml.Name `xml:"CT_WorkbookProtection"`
	LockStructureAttr          bool     `xml:"lockStructure,attr,omitempty"`
	LockWindowsAttr            bool     `xml:"lockWindows,attr,omitempty"`
	LockRevisionAttr           bool     `xml:"lockRevision,attr,omitempty"`
	RevisionsAlgorithmNameAttr string   `xml:"revisionsAlgorithmName,attr,omitempty"`
	RevisionsHashValueAttr     string   `xml:"revisionsHashValue,attr,omitempty"`
	RevisionsSaltValueAttr     string   `xml:"revisionsSaltValue,attr,omitempty"`
	RevisionsSpinCountAttr     uint32   `xml:"revisionsSpinCount,attr,omitempty"`
	WorkbookAlgorithmNameAttr  string   `xml:"workbookAlgorithmName,attr,omitempty"`
	WorkbookHashValueAttr      string   `xml:"workbookHashValue,attr,omitempty"`
	WorkbookSaltValueAttr      string   `xml:"workbookSaltValue,attr,omitempty"`
	WorkbookSpinCountAttr      uint32   `xml:"workbookSpinCount,attr,omitempty"`
}

// CTWebPublishing ...
type CTWebPublishing struct {
	XMLName              xml.Name `xml:"CT_WebPublishing"`
	CssAttr              bool     `xml:"css,attr,omitempty"`
	ThicketAttr          bool     `xml:"thicket,attr,omitempty"`
	LongFileNamesAttr    bool     `xml:"longFileNames,attr,omitempty"`
	VmlAttr              bool     `xml:"vml,attr,omitempty"`
	AllowPngAttr         bool     `xml:"allowPng,attr,omitempty"`
	TargetScreenSizeAttr string   `xml:"targetScreenSize,attr,omitempty"`
	DpiAttr              uint32   `xml:"dpi,attr,omitempty"`
	CharacterSetAttr     string   `xml:"characterSet,attr,omitempty"`
}

// STTargetScreenSize ...
type STTargetScreenSize string

// CTFunctionGroups ...
type CTFunctionGroups struct {
	XMLName               xml.Name         `xml:"CT_FunctionGroups"`
	BuiltInGroupCountAttr uint32           `xml:"builtInGroupCount,attr,omitempty"`
	FunctionGroup         *CTFunctionGroup `xml:"functionGroup"`
}

// CTFunctionGroup ...
type CTFunctionGroup struct {
	XMLName  xml.Name `xml:"CT_FunctionGroup"`
	NameAttr string   `xml:"name,attr,omitempty"`
}

// CTWebPublishObjects ...
type CTWebPublishObjects struct {
	XMLName          xml.Name              `xml:"CT_WebPublishObjects"`
	CountAttr        uint32                `xml:"count,attr,omitempty"`
	WebPublishObject []*CTWebPublishObject `xml:"webPublishObject"`
}

// CTWebPublishObject ...
type CTWebPublishObject struct {
	XMLName             xml.Name `xml:"CT_WebPublishObject"`
	IdAttr              uint32   `xml:"id,attr"`
	DivIdAttr           string   `xml:"divId,attr"`
	SourceObjectAttr    string   `xml:"sourceObject,attr,omitempty"`
	DestinationFileAttr string   `xml:"destinationFile,attr"`
	TitleAttr           string   `xml:"title,attr,omitempty"`
	AutoRepublishAttr   bool     `xml:"autoRepublish,attr,omitempty"`
}
