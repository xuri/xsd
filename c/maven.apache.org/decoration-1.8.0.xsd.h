// Code generated by xgen. DO NOT EDIT.

typedef DecorationModel Project;

// PoweredBy is Powered by logos list.
typedef struct {
	Logo Logo[];
} PoweredBy;

// Custom is Custom configuration for use with customized Velocity templates. Data from this field are
//             accessible in Velocity template from <code>$decoration.custom</code> variable as DOM content.
//             Example: <code>$decoration.custom.getChild( 'customElement' ).getValue()</code>
typedef struct {
} Custom;

// DecorationModel is The base url to edit Doxia document sources.
//             In general, <code>${project.scm.url}</code> value should do the job.
typedef struct {
	char NameAttr; // attr, optional
	char CombineSelfAttr; // attr, optional
	Banner BannerLeft;
	Banner BannerRight;
	char GoogleAdSenseClient;
	char GoogleAdSenseSlot;
	char GoogleAnalyticsAccountId;
	PublishDate PublishDate;
	Version Version;
	char Edit;
	PoweredBy PoweredBy;
	Skin Skin;
	Body Body;
	Custom Custom;
} DecorationModel;

// Version is Modify display properties for version published.
typedef struct {
	char PositionAttr; // attr, optional
} Version;

// Banner is The title for the banner image.
typedef struct {
	char Name;
	char Src;
	char Alt;
	char Href;
	char Border;
	char Width;
	char Height;
	char Title;
} Banner;

// Links is A list of links to display in the navigation.
typedef struct {
	LinkItem Item[];
} Links;

// Breadcrumbs is A list of breadcrumbs to display in the navigation.
typedef struct {
	LinkItem Item[];
} Breadcrumbs;

// Body is Additional content (like JavaScript) to include in the HEAD block of the generated pages.
typedef struct {
	char Head;
	Links Links;
	Breadcrumbs Breadcrumbs;
	Menu Menu[];
	char Footer;
} Body;

// LinkItem is A link in the navigation.
typedef struct {
	char NameAttr; // attr, optional
	char HrefAttr; // attr, optional
	char ImgAttr; // attr, optional
	char PositionAttr; // attr, optional
	char AltAttr; // attr, optional
	char BorderAttr; // attr, optional
	char WidthAttr; // attr, optional
	char HeightAttr; // attr, optional
	char TargetAttr; // attr, optional
	char TitleAttr; // attr, optional
} LinkItem;

// Menu is A list of menu item.
typedef struct {
	char NameAttr; // attr, optional
	char InheritAttr; // attr, optional
	bool InheritAsRefAttr; // attr, optional
	char RefAttr; // attr, optional
	char ImgAttr; // attr, optional
	char AltAttr; // attr, optional
	char PositionAttr; // attr, optional
	char BorderAttr; // attr, optional
	char WidthAttr; // attr, optional
	char HeightAttr; // attr, optional
	char TitleAttr; // attr, optional
	MenuItem Item[];
} Menu;

// MenuItem is A list of menu item.
typedef struct {
	bool CollapseAttr; // attr, optional
	char RefAttr; // attr, optional
	char NameAttr; // attr, optional
	char HrefAttr; // attr, optional
	char ImgAttr; // attr, optional
	char PositionAttr; // attr, optional
	char AltAttr; // attr, optional
	char BorderAttr; // attr, optional
	char WidthAttr; // attr, optional
	char HeightAttr; // attr, optional
	char TargetAttr; // attr, optional
	char TitleAttr; // attr, optional
	char Description;
	MenuItem Item[];
} MenuItem;

// Skin is The skin version.
typedef struct {
	char GroupId;
	char ArtifactId;
	char Version;
} Skin;

// Logo is Power by logo on the navigation.
typedef struct {
	char NameAttr; // attr, optional
	char HrefAttr; // attr, optional
	char ImgAttr; // attr, optional
	char PositionAttr; // attr, optional
	char AltAttr; // attr, optional
	char BorderAttr; // attr, optional
	char WidthAttr; // attr, optional
	char HeightAttr; // attr, optional
	char TargetAttr; // attr, optional
	char TitleAttr; // attr, optional
} Logo;

// PublishDate is Modify display properties for date published.
typedef struct {
	char PositionAttr; // attr, optional
	char FormatAttr; // attr, optional
} PublishDate;
