// Code generated by xgen. DO NOT EDIT.

typedef Assembly Assembly;

// Formats is Specify the formats of the assembly.  A format is specified by 
//             supplying one of the following values in a &lt;format&gt; subelement:
//             <ul>
//               <li><b>"zip"</b> - Creates a ZIP file format</li>
//               <li><b>"gz"</b> - Creates a GZIP format</li>
//               <li><b>"tar"</b> - Creates a TAR format</li>
//               <li><b>"tar.gz"</b> - Creates a gzip'd TAR format</li>
//               <li><b>"tar.bz2</b> - Creates a bzip'd TAR format</li>
//             </ul>
typedef struct {
	char Format[];
} Formats;

// ModuleSets is Specify which modules source files to include in the assembly
typedef struct {
	ModuleSet ModuleSet[];
} ModuleSets;

// FileSets is Specify assembly parameters for groups of files.
typedef struct {
	FileSet FileSet[];
} FileSets;

// Files is Specify assembly parameters for single files.
typedef struct {
	FileItem File[];
} Files;

// DependencySets is Specify assembly behavior for sets of dependencies.
typedef struct {
	DependencySet DependencySet[];
} DependencySets;

// Repositories is Specify assembly behavior for sets of repositories.
typedef struct {
	Repository Repository[];
} Repositories;

// ComponentDescriptors is File relative to basedir containing Component.
typedef struct {
	char ComponentDescriptor[];
} ComponentDescriptors;

// Assembly is The id of this assembly. This is a symbolic name for a
//             particular assembly of files from this project.
typedef struct {
	char Id;
	Formats Formats;
	bool IncludeBaseDirectory;
	bool IncludeSiteDirectory;
	ModuleSets ModuleSets;
	FileSets FileSets;
	Files Files;
	DependencySets DependencySets;
	Repositories Repositories;
	ComponentDescriptors ComponentDescriptors;
} Assembly;

// GroupVersionAlignments is Align a group to a version or an individual artifact.
typedef struct {
	GroupVersionAlignment GroupVersionAlignment[];
} GroupVersionAlignments;

// Includes is When &lt;include&gt; subelements are present, they define
//             a set of files and directory to include.
typedef struct {
	char Include[];
} Includes;

// Excludes is When &lt;exclude&gt; subelements are present, they define
//             a set of files and directory to exclude.
typedef struct {
	char Exclude[];
} Excludes;

// Repository is If set to true, this property will trigger the creation of repository
//             metadata which will allow the repository to be used as a functional remote
//             repository.
typedef struct {
	bool IncludeMetadata;
	GroupVersionAlignments GroupVersionAlignments;
	char OutputDirectory;
	Includes Includes;
	Excludes Excludes;
	char FileMode;
	char DirectoryMode;
} Repository;

// GroupVersionAlignment is The version you want to align this group to.
typedef struct {
	char Id;
	char Version;
	Excludes Excludes;
} GroupVersionAlignment;

// DependencySet is Specifies the output directory relative to the root
//             of the root directory of the assembly. For example,
//             "log" will put the specified files in the log directory.
typedef struct {
	char OutputFileNameMapping;
	bool Unpack;
	char Scope;
	char OutputDirectory;
	Includes Includes;
	Excludes Excludes;
	char FileMode;
	char DirectoryMode;
} DependencySet;

// ModuleSet is 1.0.0
typedef struct {
	Includes Includes;
	Excludes Excludes;
	ModuleSources Sources;
	ModuleBinaries Binaries;
} ModuleSet;

// ModuleSources is Specifies the output directory relative to the root
//             of the root directory of the assembly. For example,
//             "log" will put the specified files in the log directory.
typedef struct {
	char OutputDirectory;
	Includes Includes;
	Excludes Excludes;
	char FileMode;
	char DirectoryMode;
} ModuleSources;

// ModuleBinaries is Specifies the output directory relative to the root
//             of the root directory of the assembly. For example,
//             "log" will put the specified files in the log directory.
typedef struct {
	bool IncludeDependencies;
	bool Unpack;
	char OutputFileNameMapping;
	char OutputDirectory;
	Includes Includes;
	Excludes Excludes;
	char FileMode;
	char DirectoryMode;
} ModuleBinaries;

// FileItem is Flag used to determine if the file is filtered.
typedef struct {
	char Source;
	char OutputDirectory;
	char DestName;
	char FileMode;
	char LineEnding;
	bool Filtered;
} FileItem;

// FileSet is Specifies the output directory relative to the root
//             of the root directory of the assembly. For example,
//             "log" will put the specified files in the log directory.
typedef struct {
	char Directory;
	char LineEnding;
	char OutputDirectory;
	Includes Includes;
	Excludes Excludes;
	char FileMode;
	char DirectoryMode;
} FileSet;
