// Code generated by xgen. DO NOT EDIT.

typedef Model Project;

// MailingLists is Contains information about a project's mailing lists.  This
//             is used to generate the <a href="/plugins/site/index.html">front
//             page</a> of the site's web site.
typedef struct {
	MailingList MailingList[];
} MailingLists;

// Developers is Describes the committers to a project.  This is used to
//             generate the <a href="/plugins/site/index.html">Project Team</a>
//             page of the project's web site.
typedef struct {
	Developer Developer[];
} Developers;

// Contributors is Describes the contributors to a project.  This is used to generate
//             the <a href="/plugins/site/index.html">Project Team</a> page of
//             the project's web site.
typedef struct {
	Contributor Contributor[];
} Contributors;

// Licenses is This element describes all of the licenses for this project.  
//             Each license is described by a <code>license</code> element, which 
//             is then described by additional elements (described below).  The 
//             auto-generated site documentation references this information.  
//             Projects should only list the license(s) that applies to the project 
//             and not the licenses that apply to dependencies.
typedef struct {
	License License[];
} Licenses;

// Versions is Optional. Contains information on previous versions of the
//             project. This information is used when invoking the 
//             <a href="/plugins/dist/index.html"><code>maven:dist</code></a>
//             target.
typedef struct {
	Version Version[];
} Versions;

// Branches is Optional. Contains information on branches of the
//             project. This information is used when invoking the 
//             <a href="/plugins/dist/index.html"><code>maven:dist</code></a>
//             target.
typedef struct {
	Branch Branch[];
} Branches;

// PackageGroups is Package groups required for complete javadocs.
typedef struct {
	PackageGroup PackageGroup[];
} PackageGroups;

// Reports is This element includes the specification of reports to be
//             included in a Maven-generated site.  These reports will be run
//             when a user executes <code>maven site</code>.  All of the
//             reports will be included in the navigation bar for browsing in
//             the order they are specified.
typedef struct {
	char Report[];
} Reports;

// Properties is Project properties that will be used by various plugins
typedef struct {
} Properties;

// Dependencies is <p>
//               This element describes all of the dependencies associated with a
//               project.  Each dependency is described by a
//               <code>dependency</code> element, which is then described by
//               additional elements (described below).
//             </p>
//             <p>
//               These dependencies are used to construct a classpath for your 
//               project during the build process.
//             </p>
//             <p>
//               Maven can automatically download these dependencies from a 
//               <a href="/user-guide.html#Remote%20Repository%20Layout">remote repository</a>.
//             </p>
//             <p>
//               The filename that Maven downloads from the repository is 
//               <code>artifactId-version.jar</code> where <code>artifactId</code> 
//               corresponds to the <code>artifactId</code> element and 
//               <code>version</code> corresponds to the <code>version</code> element.
//             </p>
//             <p>
//               When Maven goes looking for a dependency in the remote repository, 
//               it uses the dependency element to construct the URL to download 
//               from. This URL is defined as:
//             </p>
//             <div class="source">
//               <pre>${repo}/${groupId}/${type}s/${artifactId}-${version}.${type}</pre>
//             </div>
//             <p>
//               Where
//             </p>
//             <dl>
//               <dt>repo</dt>
//               <dd>
//                 is the remote repository URL specified by 
//                 <code>${maven.repo.remote}</code>
//               </dd>
//               
//               <dt>groupId</dt>
//               <dd>is taken from the dependency element</dd>
//               
//               <dt>type</dt>
//               <dd>is taken from the dependency element</dd>
//               
//               <dt>artifactId</dt>
//               <dd>is taken from the dependency element</dd>
//               
//               <dt>version</dt>
//               <dd>is taken from the dependency element</dd>
//             </dl>
typedef struct {
	Dependency Dependency[];
} Dependencies;

// Model is Optional. The directory on the web server where the final
//             distributions will be published.  This is used when the
//             distributions are
//             <a href="/plugins/dist/index.html">deployed</a>.
typedef struct {
	char Extend;
	char PomVersion;
	char Id;
	char GroupId;
	char ArtifactId;
	char Name;
	char CurrentVersion;
	char ShortDescription;
	char Description;
	char Url;
	char Logo;
	char IssueTrackingUrl;
	char InceptionYear;
	char GumpRepositoryId;
	char SiteAddress;
	char SiteDirectory;
	char DistributionSite;
	char DistributionDirectory;
	MailingLists MailingLists;
	Developers Developers;
	Contributors Contributors;
	Licenses Licenses;
	Versions Versions;
	Branches Branches;
	PackageGroups PackageGroups;
	Reports Reports;
	Repository Repository;
	Organization Organization;
	Properties Properties;
	char Package;
	Build Build;
	Dependencies Dependencies;
} Model;

// SourceModifications is This element describes all of the sourceModifications associated 
//             with a project.  Each source modification is described by a
//             <code>sourceModification</code> element, which is then described by
//              additional elements (described below).  These modifications are used 
//             to exclude or include various source depending on the environment
//              the build is running in.
typedef struct {
	SourceModification SourceModification[];
} SourceModifications;

// Resources is This element describes all of the resources associated with a 
//             project or unit tests. Each resource is described by a resource 
//             element, which is then described by additional elements (described 
//             <a href="#resource">below</a>). These resources are used to complete 
//             the jar file or to run unit test.
typedef struct {
	Resource Resource[];
} Resources;

// Build is This element specifies a directory containing integration test    
//              sources of the project.
typedef struct {
	char NagEmailAddress;
	char SourceDirectory;
	char UnitTestSourceDirectory;
	char AspectSourceDirectory;
	char IntegrationUnitTestSourceDirectory;
	SourceModifications SourceModifications;
	UnitTest UnitTest;
	char DefaultGoal;
	Resources Resources;
} Build;

// Includes is the description
typedef struct {
	char Include[];
} Includes;

// Excludes is the description
typedef struct {
	char Exclude[];
} Excludes;

// UnitTest is 3.0.0
typedef struct {
	Resources Resources;
	Includes Includes;
	Excludes Excludes;
} UnitTest;

// Resource is Describe the directory where the resource is stored.
//             The path may be absolute, or relative to the project.xml file.
typedef struct {
	char TargetPath;
	bool Filtering;
	char Directory;
	Includes Includes;
	Excludes Excludes;
} Resource;

// SourceModification is Describe the directory where the resource is stored.
//             The path may be absolute, or relative to the project.xml file.
typedef struct {
	char ClassName;
	char Property;
	char Directory;
	Includes Includes;
	Excludes Excludes;
} SourceModification;

// Organization is The URL to the organization's logo image.  This can be an URL relative
//             to the base directory of the generated web site,
//             (e.g., <code>/images/org-logo.png</code>) or an absolute URL
//             (e.g., <code>http://my.corp/logo.png</code>).  This value is used
//             when generating the project documentation.
typedef struct {
	char Name;
	char Url;
	char Logo;
} Organization;

// Roles is The roles the contributor plays in the project.  Each role is
//             described by a <code>role</code> element, the body of which is a
//             role name.
typedef struct {
	char Role[];
} Roles;

// Developer is The URL of the organization.
typedef struct {
	char Id;
	char Name;
	char Email;
	char Url;
	char Organization;
	char OrganizationUrl;
	Roles Roles;
	char Timezone;
	Properties Properties;
} Developer;

// Dependency is The type of dependency. This defaults to <code>jar</code>.
//             Known recognised dependency types are:
//             <ul>
//             <li><code>jar</code></li>
//             <li><code>ejb</code></li>
//             <li><code>plugin</code></li>
//             </ul>
typedef struct {
	char Id;
	char GroupId;
	char ArtifactId;
	char Version;
	char Url;
	char Jar;
	char Type;
	Properties Properties;
} Dependency;

// Repository is The URL to the project's browsable CVS repository.
typedef struct {
	char Connection;
	char DeveloperConnection;
	char Url;
} Repository;

// PackageGroup is the description
typedef struct {
	char Title;
	char Packages;
} PackageGroup;

// Version is A unique identifier for a version.  This ID is
//             used to specify the version that
//             <a href="/plugins/dist/index.html">
//               <code>maven:dist</code>
//             </a> builds.
typedef struct {
	char Name;
	char Tag;
	char Id;
} Version;

// License is Addendum information pertaining to this license.
typedef struct {
	char Name;
	char Url;
	char Distribution;
	char Comments;
} License;

// Contributor is The URL of the organization.
typedef struct {
	char Name;
	char Email;
	char Url;
	char Organization;
	char OrganizationUrl;
	Roles Roles;
	char Timezone;
	Properties Properties;
} Contributor;

// Branch is The branch tag in the version control system (e.g. cvs) used by the 
//             project for the source code associated with this branch of the
//             project.
typedef struct {
	char Tag;
} Branch;

// OtherArchives is The link to other URLs where you can browse the list archive.
typedef struct {
	char OtherArchive[];
} OtherArchives;

// MailingList is The link to a URL where you can browse the mailing list archive.
typedef struct {
	char Name;
	char Subscribe;
	char Unsubscribe;
	char Post;
	char Archive;
	OtherArchives OtherArchives;
} MailingList;
